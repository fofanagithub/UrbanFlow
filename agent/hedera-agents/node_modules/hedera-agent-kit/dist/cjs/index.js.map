{"version":3,"sources":["../../node_modules/handlebars/lib/handlebars/utils.js","../../node_modules/handlebars/lib/handlebars/exception.js","../../node_modules/handlebars/lib/handlebars/helpers/block-helper-missing.js","../../node_modules/handlebars/lib/handlebars/helpers/each.js","../../node_modules/handlebars/lib/handlebars/helpers/helper-missing.js","../../node_modules/handlebars/lib/handlebars/helpers/if.js","../../node_modules/handlebars/lib/handlebars/helpers/log.js","../../node_modules/handlebars/lib/handlebars/helpers/lookup.js","../../node_modules/handlebars/lib/handlebars/helpers/with.js","../../node_modules/handlebars/lib/handlebars/helpers.js","../../node_modules/handlebars/lib/handlebars/decorators/inline.js","../../node_modules/handlebars/lib/handlebars/decorators.js","../../node_modules/handlebars/lib/handlebars/logger.js","../../node_modules/handlebars/lib/handlebars/internal/create-new-lookup-object.js","../../node_modules/handlebars/lib/handlebars/internal/proto-access.js","../../node_modules/handlebars/lib/handlebars/base.js","../../node_modules/handlebars/lib/handlebars/safe-string.js","../../node_modules/handlebars/lib/handlebars/internal/wrapHelper.js","../../node_modules/handlebars/lib/handlebars/runtime.js","../../node_modules/handlebars/lib/handlebars/no-conflict.js","../../node_modules/handlebars/lib/handlebars.runtime.js","../../node_modules/handlebars/lib/handlebars/compiler/ast.js","../../node_modules/handlebars/lib/handlebars/compiler/parser.js","../../node_modules/handlebars/lib/handlebars/compiler/visitor.js","../../node_modules/handlebars/lib/handlebars/compiler/whitespace-control.js","../../node_modules/handlebars/lib/handlebars/compiler/helpers.js","../../node_modules/handlebars/lib/handlebars/compiler/base.js","../../node_modules/handlebars/lib/handlebars/compiler/compiler.js","../../node_modules/handlebars/node_modules/source-map/lib/base64.js","../../node_modules/handlebars/node_modules/source-map/lib/base64-vlq.js","../../node_modules/handlebars/node_modules/source-map/lib/util.js","../../node_modules/handlebars/node_modules/source-map/lib/array-set.js","../../node_modules/handlebars/node_modules/source-map/lib/mapping-list.js","../../node_modules/handlebars/node_modules/source-map/lib/source-map-generator.js","../../node_modules/handlebars/node_modules/source-map/lib/binary-search.js","../../node_modules/handlebars/node_modules/source-map/lib/quick-sort.js","../../node_modules/handlebars/node_modules/source-map/lib/source-map-consumer.js","../../node_modules/handlebars/node_modules/source-map/lib/source-node.js","../../node_modules/handlebars/node_modules/source-map/source-map.js","../../node_modules/handlebars/lib/handlebars/compiler/code-gen.js","../../node_modules/handlebars/lib/handlebars/compiler/javascript-compiler.js","../../node_modules/handlebars/lib/handlebars.js","../../node_modules/handlebars/lib/handlebars/compiler/printer.js","../../node_modules/handlebars/lib/index.js","../../node_modules/js-sha1/src/sha1.js","../../node_modules/pino-std-serializers/lib/err-helpers.js","../../node_modules/pino-std-serializers/lib/err-proto.js","../../node_modules/pino-std-serializers/lib/err.js","../../node_modules/pino-std-serializers/lib/err-with-cause.js","../../node_modules/pino-std-serializers/lib/req.js","../../node_modules/pino-std-serializers/lib/res.js","../../node_modules/pino-std-serializers/index.js","../../node_modules/pino/lib/caller.js","../../node_modules/fast-redact/lib/validator.js","../../node_modules/fast-redact/lib/rx.js","../../node_modules/fast-redact/lib/parse.js","../../node_modules/fast-redact/lib/redactor.js","../../node_modules/fast-redact/lib/modifiers.js","../../node_modules/fast-redact/lib/restorer.js","../../node_modules/fast-redact/lib/state.js","../../node_modules/fast-redact/index.js","../../node_modules/pino/lib/symbols.js","../../node_modules/pino/lib/redaction.js","../../node_modules/pino/lib/time.js","../../node_modules/quick-format-unescaped/index.js","../../node_modules/atomic-sleep/index.js","../../node_modules/sonic-boom/index.js","../../node_modules/on-exit-leak-free/index.js","../../node_modules/thread-stream/package.json","../../node_modules/thread-stream/lib/wait.js","../../node_modules/thread-stream/lib/indexes.js","../../node_modules/thread-stream/index.js","../../node_modules/pino/lib/transport.js","../../node_modules/pino/lib/tools.js","../../node_modules/pino/lib/constants.js","../../node_modules/pino/lib/levels.js","../../node_modules/pino/lib/meta.js","../../node_modules/pino/lib/proto.js","../../node_modules/safe-stable-stringify/index.js","../../node_modules/pino/lib/multistream.js","../../node_modules/pino/pino.js","../../node_modules/colorette/index.cjs","../../node_modules/wrappy/wrappy.js","../../node_modules/once/once.js","../../node_modules/end-of-stream/index.js","../../node_modules/pump/index.js","../../node_modules/split2/index.js","../../node_modules/pino-abstract-transport/index.js","../../node_modules/pino-pretty/lib/constants.js","../../node_modules/pino-pretty/lib/utils/get-level-label-data.js","../../node_modules/pino-pretty/lib/colors.js","../../node_modules/pino-pretty/lib/utils/noop.js","../../node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js","../../node_modules/pino-pretty/lib/utils/is-valid-date.js","../../node_modules/pino-pretty/lib/utils/create-date.js","../../node_modules/pino-pretty/lib/utils/split-property-key.js","../../node_modules/pino-pretty/lib/utils/get-property-value.js","../../node_modules/pino-pretty/lib/utils/delete-log-property.js","../../src/utils.ts","../../src/copier.ts","../../src/index.ts","../../node_modules/pino-pretty/lib/utils/filter-log.js","../../node_modules/dateformat/lib/dateformat.js","../../node_modules/pino-pretty/lib/utils/format-time.js","../../node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js","../../node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js","../../node_modules/pino-pretty/lib/utils/interpret-conditionals.js","../../node_modules/pino-pretty/lib/utils/is-object.js","../../node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js","../../node_modules/pino-pretty/lib/utils/parse-factory-options.js","../../node_modules/fast-safe-stringify/index.js","../../node_modules/pino-pretty/lib/utils/prettify-error.js","../../node_modules/pino-pretty/lib/utils/prettify-object.js","../../node_modules/pino-pretty/lib/utils/prettify-error-log.js","../../node_modules/pino-pretty/lib/utils/prettify-level.js","../../node_modules/pino-pretty/lib/utils/prettify-message.js","../../node_modules/pino-pretty/lib/utils/prettify-metadata.js","../../node_modules/pino-pretty/lib/utils/prettify-time.js","../../node_modules/pino-pretty/lib/utils/index.js","../../node_modules/secure-json-parse/index.js","../../node_modules/pino-pretty/lib/pretty.js","../../node_modules/pino-pretty/index.js","../../src/index.ts","../../src/shared/api.ts","../../src/shared/configuration.ts","../../src/shared/parameter-schemas/token.zod.ts","../../src/shared/parameter-schemas/account.zod.ts","../../src/shared/parameter-schemas/consensus.zod.ts","../../src/shared/hedera-utils/hedera-parameter-normaliser.ts","../../src/shared/hedera-utils/decimals-utils.ts","../../src/shared/utils/account-resolver.ts","../../src/shared/parameter-schemas/evm.zod.ts","../../src/shared/parameter-schemas/transaction.zod.ts","../../src/plugins/core-token-plugin/tools/fungible-token/airdrop-fungible-token.ts","../../src/shared/strategies/tx-mode-strategy.ts","../../src/shared/hedera-utils/hedera-builder.ts","../../src/shared/hedera-utils/mirrornode/types.ts","../../src/shared/hedera-utils/mirrornode/hedera-mirrornode-service-default-impl.ts","../../src/shared/hedera-utils/mirrornode/hedera-mirrornode-utils.ts","../../src/shared/utils/prompt-generator.ts","../../src/plugins/core-token-plugin/tools/fungible-token/create-fungible-token.ts","../../src/plugins/core-token-plugin/tools/fungible-token/mint-fungible-token.ts","../../src/plugins/core-token-plugin/tools/non-fungible-token/create-non-fungible-token.ts","../../src/plugins/core-token-plugin/tools/non-fungible-token/mint-non-fungible-token.ts","../../src/plugins/core-token-plugin/tools/update-token.ts","../../src/plugins/core-token-plugin/tools/dissociate-token.ts","../../src/plugins/core-token-plugin/tools/associate-token.ts","../../src/plugins/core-token-plugin/index.ts","../../src/plugins/core-account-plugin/tools/account/transfer-hbar.ts","../../src/plugins/core-account-plugin/tools/account/approve-hbar-allowance.ts","../../src/plugins/core-account-plugin/tools/account/create-account.ts","../../src/plugins/core-account-plugin/tools/account/delete-account.ts","../../src/plugins/core-account-plugin/tools/account/update-account.ts","../../src/plugins/core-account-plugin/tools/account/sign-schedule-transaction.ts","../../src/plugins/core-account-plugin/tools/account/schedule-delete.ts","../../src/plugins/core-account-plugin/index.ts","../../src/plugins/core-consensus-plugin/tools/consensus/create-topic.ts","../../src/plugins/core-consensus-plugin/tools/consensus/delete-topic.ts","../../src/plugins/core-consensus-plugin/tools/consensus/submit-topic-message.ts","../../src/plugins/core-consensus-plugin/tools/consensus/update-topic.ts","../../src/plugins/core-consensus-plugin/index.ts","../../src/shared/hedera-utils/hbar-conversion-utils.ts","../../src/plugins/core-queries-plugin/tools/queries/get-hbar-balance-query.ts","../../src/plugins/core-queries-plugin/tools/queries/get-account-query.ts","../../src/plugins/core-queries-plugin/tools/queries/get-account-token-balances-query.ts","../../src/plugins/core-queries-plugin/tools/queries/get-topic-messages-query.ts","../../src/plugins/core-queries-plugin/tools/queries/get-token-info-query.ts","../../src/plugins/core-queries-plugin/index.ts","../../src/shared/parameter-schemas/core-misc.zod.ts","../../src/plugins/core-misc-query-plugin/tools/queries/get-exchange-rate-query.ts","../../src/plugins/core-misc-query-plugin/index.ts","../../src/plugins/core-evm-plugin/tools/erc20/create-erc20.ts","../../src/shared/constants/contracts.ts","../../src/plugins/core-evm-plugin/tools/erc20/transfer-erc20.ts","../../src/plugins/core-evm-plugin/tools/erc721/transfer-erc721.ts","../../src/plugins/core-evm-plugin/tools/erc721/mint-erc721.ts","../../src/plugins/core-evm-plugin/tools/erc721/create-erc721.ts","../../src/plugins/core-evm-plugin/index.ts","../../src/plugins/core-account-query-plugin/tools/queries/get-hbar-balance-query.ts","../../src/plugins/core-account-query-plugin/tools/queries/get-account-query.ts","../../src/plugins/core-account-query-plugin/tools/queries/get-account-token-balances-query.ts","../../src/plugins/core-account-query-plugin/index.ts","../../src/plugins/core-token-query-plugin/tools/queries/get-token-info-query.ts","../../src/plugins/core-token-query-plugin/tools/queries/get-pending-airdrop-query.ts","../../src/plugins/core-token-query-plugin/index.ts","../../src/plugins/core-consensus-query-plugin/tools/queries/get-topic-messages-query.ts","../../src/plugins/core-consensus-query-plugin/tools/queries/get-topic-info-query.ts","../../src/plugins/core-consensus-query-plugin/index.ts","../../src/plugins/core-evm-query-plugin/tools/queries/get-contract-info-query.ts","../../src/plugins/core-evm-query-plugin/index.ts","../../src/plugins/core-transactions-query-plugin/tools/queries/get-transaction-record-query.ts","../../src/plugins/core-transactions-query-plugin/index.ts","../../src/plugins/index.ts","../../src/shared/plugin.ts","../../src/langchain/tool.ts","../../src/shared/tool-discovery.ts","../../src/langchain/toolkit.ts","../../src/modelcontextprotocol/toolkit.ts","../../src/ai-sdk/tool.ts","../../src/ai-sdk/toolkit.ts","../../node_modules/@elizaos/core/dist/index.js","../../node_modules/@langchain/textsplitters/dist/text_splitter.js","../../node_modules/unique-names-generator/src/seed.ts","../../node_modules/unique-names-generator/src/unique-names-generator.constructor.ts","../../node_modules/unique-names-generator/src/unique-names-generator.ts","../../node_modules/unique-names-generator/src/dictionaries/adjectives.ts","../../node_modules/unique-names-generator/src/dictionaries/animals.ts","../../node_modules/unique-names-generator/src/dictionaries/colors.ts","../../node_modules/unique-names-generator/src/dictionaries/countries.ts","../../node_modules/unique-names-generator/src/dictionaries/languages.ts","../../node_modules/unique-names-generator/src/dictionaries/names.ts","../../node_modules/unique-names-generator/src/dictionaries/star-wars.ts","../../node_modules/unique-names-generator/src/dictionaries/numbers.ts","../../node_modules/@sentry/core/src/debug-build.ts","../../node_modules/@sentry/core/src/utils/worldwide.ts","../../node_modules/@sentry/core/src/utils/version.ts","../../node_modules/@sentry/core/src/carrier.ts","../../node_modules/@sentry/core/src/utils/debug-logger.ts","../../node_modules/@sentry/core/src/utils/stacktrace.ts","../../node_modules/@sentry/core/src/instrument/handlers.ts","../../node_modules/@sentry/core/src/instrument/globalError.ts","../../node_modules/@sentry/core/src/instrument/globalUnhandledRejection.ts","../../node_modules/@sentry/core/src/utils/is.ts","../../node_modules/@sentry/core/src/utils/browser.ts","../../node_modules/@sentry/core/src/utils/string.ts","../../node_modules/@sentry/core/src/utils/object.ts","../../node_modules/@sentry/core/src/utils/misc.ts","../../node_modules/@sentry/core/src/utils/time.ts","../../node_modules/@sentry/core/src/session.ts","../../node_modules/@sentry/core/src/utils/merge.ts","../../node_modules/@sentry/core/src/utils/propagationContext.ts","../../node_modules/@sentry/core/src/utils/spanOnScope.ts","../../node_modules/@sentry/core/src/scope.ts","../../node_modules/@sentry/core/src/defaultScopes.ts","../../node_modules/@sentry/core/src/asyncContext/stackStrategy.ts","../../node_modules/@sentry/core/src/asyncContext/index.ts","../../node_modules/@sentry/core/src/currentScopes.ts","../../node_modules/@sentry/core/src/semanticAttributes.ts","../../node_modules/@sentry/core/src/tracing/spanstatus.ts","../../node_modules/@sentry/core/src/tracing/utils.ts","../../node_modules/@sentry/core/src/utils/baggage.ts","../../node_modules/@sentry/core/src/utils/parseSampleRate.ts","../../node_modules/@sentry/core/src/utils/spanUtils.ts","../../node_modules/@sentry/core/src/utils/hasSpansEnabled.ts","../../node_modules/@sentry/core/src/constants.ts","../../node_modules/@sentry/core/src/utils/dsn.ts","../../node_modules/@sentry/core/src/tracing/dynamicSamplingContext.ts","../../node_modules/@sentry/core/src/utils/normalize.ts","../../node_modules/@sentry/core/src/utils/envelope.ts","../../node_modules/@sentry/core/src/envelope.ts","../../node_modules/@sentry/core/src/utils/syncpromise.ts","../../node_modules/@sentry/core/src/eventProcessors.ts","../../node_modules/@sentry/core/src/utils/applyScopeDataToEvent.ts","../../node_modules/@sentry/core/src/utils/debug-ids.ts","../../node_modules/@sentry/core/src/utils/prepareEvent.ts","../../node_modules/@sentry/core/src/exports.ts","../../node_modules/@sentry/core/src/api.ts","../../node_modules/@sentry/core/src/integration.ts","../../node_modules/@sentry/core/src/utils/clientreport.ts","../../node_modules/@sentry/core/src/utils/eventUtils.ts","../../node_modules/@sentry/core/src/utils/transactionEvent.ts","../../node_modules/@sentry/core/src/client.ts","../../node_modules/@sentry/core/src/logs/envelope.ts","../../node_modules/@sentry/core/src/logs/exports.ts","../../node_modules/@sentry/core/src/sdk.ts","../../node_modules/@sentry/core/src/utils/promisebuffer.ts","../../node_modules/@sentry/core/src/utils/ratelimit.ts","../../node_modules/@sentry/core/src/transports/base.ts","../../node_modules/@sentry/core/src/utils/ipAddress.ts","../../node_modules/@sentry/core/src/utils/sdkMetadata.ts","../../node_modules/@sentry/core/src/breadcrumbs.ts","../../node_modules/@sentry/core/src/integrations/functiontostring.ts","../../node_modules/@sentry/core/src/integrations/eventFilters.ts","../../node_modules/@sentry/core/src/utils/aggregate-errors.ts","../../node_modules/@sentry/core/src/instrument/console.ts","../../node_modules/@sentry/core/src/utils/severity.ts","../../node_modules/@sentry/core/src/integrations/dedupe.ts","../../node_modules/@sentry/core/src/utils/url.ts","../../node_modules/@sentry/core/src/utils/breadcrumb-log-level.ts","../../node_modules/@sentry/core/src/utils/supports.ts","../../node_modules/@sentry/core/src/instrument/fetch.ts","../../node_modules/@sentry/core/src/utils/env.ts","../../node_modules/@sentry/browser/src/helpers.ts","../../node_modules/@sentry/browser/src/eventbuilder.ts","../../node_modules/@sentry/browser/src/client.ts","../../node_modules/@sentry-internal/browser-utils/src/debug-build.ts","../../node_modules/@sentry-internal/browser-utils/src/types.ts","../../node_modules/@sentry-internal/browser-utils/src/instrument/dom.ts","../../node_modules/@sentry-internal/browser-utils/src/instrument/history.ts","../../node_modules/@sentry-internal/browser-utils/src/getNativeImplementation.ts","../../node_modules/@sentry-internal/browser-utils/src/instrument/xhr.ts","../../node_modules/@sentry/browser/src/transports/fetch.ts","../../node_modules/@sentry/browser/src/stack-parsers.ts","../../node_modules/@sentry/browser/src/debug-build.ts","../../node_modules/@sentry/browser/src/integrations/breadcrumbs.ts","../../node_modules/@sentry/browser/src/integrations/browserapierrors.ts","../../node_modules/@sentry/browser/src/integrations/browsersession.ts","../../node_modules/@sentry/browser/src/integrations/globalhandlers.ts","../../node_modules/@sentry/browser/src/integrations/httpcontext.ts","../../node_modules/@sentry/browser/src/integrations/linkederrors.ts","../../node_modules/@sentry/browser/src/utils/detectBrowserExtension.ts","../../node_modules/@sentry/browser/src/sdk.ts","../../src/elizaos/utils/extraction.ts","../../src/elizaos/utils/parser.ts","../../src/elizaos/tool.ts","../../src/elizaos/toolkit.ts"],"sourcesContent":["const escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nconst badChars = /[&<>\"'`=]/g,\n  possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nexport function extend(obj /* , ...source */) {\n  for (let i = 1; i < arguments.length; i++) {\n    for (let key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nexport let toString = Object.prototype.toString;\n\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nlet isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return (\n      typeof value === 'function' &&\n      toString.call(value) === '[object Function]'\n    );\n  };\n}\nexport { isFunction };\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nexport const isArray =\n  Array.isArray ||\n  function(value) {\n    return value && typeof value === 'object'\n      ? toString.call(value) === '[object Array]'\n      : false;\n  };\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexport function indexOf(array, value) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nexport function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function createFrame(object) {\n  let frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nexport function blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nexport function appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n","const errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'endLineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n    line,\n    endLineNumber,\n    column,\n    endColumn;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n","import { appendContextPath, createFrame, isArray } from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    let inverse = options.inverse,\n      fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        let data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.name\n        );\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isArray,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('each', function(context, options) {\n    if (!options) {\n      throw new Exception('Must pass iterator to #each');\n    }\n\n    let fn = options.fn,\n      inverse = options.inverse,\n      i = 0,\n      ret = '',\n      data,\n      contextPath;\n\n    if (options.data && options.ids) {\n      contextPath =\n        appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret =\n        ret +\n        fn(context[field], {\n          data: data,\n          blockParams: blockParams(\n            [context[field], field],\n            [contextPath + field, null]\n          )\n        });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (let j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (typeof Symbol === 'function' && context[Symbol.iterator]) {\n        const newContext = [];\n        const iterator = context[Symbol.iterator]();\n        for (let it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (let j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        let priorKey;\n\n        Object.keys(context).forEach(key => {\n          // We're running the iterations one step out of sync so we can detect\n          // the last iteration without have to scan the object twice and create\n          // an itermediate keys array.\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1);\n          }\n          priorKey = key;\n          i++;\n        });\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n}\n","import Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new Exception(\n        'Missing helper: \"' + arguments[arguments.length - 1].name + '\"'\n      );\n    }\n  });\n}\n","import { isEmpty, isFunction } from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('if', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#if requires exactly one argument');\n    }\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('log', function(/* message, options */) {\n    let args = [undefined],\n      options = arguments[arguments.length - 1];\n    for (let i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    let level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log(...args);\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('lookup', function(obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isEmpty,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#with requires exactly one argument');\n    }\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.ids[0]\n        );\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n","import registerBlockHelperMissing from './helpers/block-helper-missing';\nimport registerEach from './helpers/each';\nimport registerHelperMissing from './helpers/helper-missing';\nimport registerIf from './helpers/if';\nimport registerLog from './helpers/log';\nimport registerLookup from './helpers/lookup';\nimport registerWith from './helpers/with';\n\nexport function registerDefaultHelpers(instance) {\n  registerBlockHelperMissing(instance);\n  registerEach(instance);\n  registerHelperMissing(instance);\n  registerIf(instance);\n  registerLog(instance);\n  registerLookup(instance);\n  registerWith(instance);\n}\n\nexport function moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n","import { extend } from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n","import registerInline from './decorators/inline';\n\nexport function registerDefaultDecorators(instance) {\n  registerInline(instance);\n}\n","import { indexOf } from './utils';\n\nlet logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function(level) {\n    if (typeof level === 'string') {\n      let levelMap = indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function(level, ...message) {\n    level = logger.lookupLevel(level);\n\n    if (\n      typeof console !== 'undefined' &&\n      logger.lookupLevel(logger.level) <= level\n    ) {\n      let method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n      console[method](...message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexport default logger;\n","import { extend } from '../utils';\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\nexport function createNewLookupObject(...sources) {\n  return extend(Object.create(null), ...sources);\n}\n","import { createNewLookupObject } from './create-new-lookup-object';\nimport logger from '../logger';\n\nconst loggedProperties = Object.create(null);\n\nexport function createProtoAccessControl(runtimeOptions) {\n  let defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  let defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: createNewLookupObject(\n        defaultPropertyWhiteList,\n        runtimeOptions.allowedProtoProperties\n      ),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: createNewLookupObject(\n        defaultMethodWhiteList,\n        runtimeOptions.allowedProtoMethods\n      ),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nexport function resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log(\n      'error',\n      `Handlebars: Access has been denied to resolve the property \"${propertyName}\" because it is not an \"own property\" of its parent.\\n` +\n        `You can add a runtime option to disable the check or this warning:\\n` +\n        `See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`\n    );\n  }\n}\n\nexport function resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(propertyName => {\n    delete loggedProperties[propertyName];\n  });\n}\n","import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.8';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n","// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n  return '' + this.string;\n};\n\nexport default SafeString;\n","export function wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  let wrapper = function(/* dynamic arguments */) {\n    const options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n","import * as Utils from './utils';\nimport Exception from './exception';\nimport {\n  COMPILER_REVISION,\n  createFrame,\n  LAST_COMPATIBLE_COMPILER_REVISION,\n  REVISION_CHANGES\n} from './base';\nimport { moveHelperToHooks } from './helpers';\nimport { wrapHelper } from './internal/wrapHelper';\nimport {\n  createProtoAccessControl,\n  resultIsAllowed\n} from './internal/proto-access';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = (compilerInfo && compilerInfo[0]) || 1,\n    currentRevision = COMPILER_REVISION;\n\n  if (\n    compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION &&\n    compilerRevision <= COMPILER_REVISION\n  ) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n      compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception(\n      'Template was precompiled with an older version of Handlebars than the current runtime. ' +\n        'Please update your precompiler to a newer version (' +\n        runtimeVersions +\n        ') or downgrade your runtime to an older version (' +\n        compilerVersions +\n        ').'\n    );\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception(\n      'Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n        'Please update your runtime to a newer version (' +\n        compilerInfo[1] +\n        ').'\n    );\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 =\n    templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    let result = env.VM.invokePartial.call(\n      this,\n      partial,\n      context,\n      extendedOptions\n    );\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(\n        partial,\n        templateSpec.compilerOptions,\n        env\n      );\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception(\n        'The partial ' +\n          options.name +\n          ' could not be compiled when running in runtime-only mode'\n      );\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function(parent, propertyName) {\n      let result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        let result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(\n          this,\n          i,\n          fn,\n          data,\n          declaredBlockParams,\n          blockParams,\n          depths\n        );\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths =\n          context != options.depths[0]\n            ? [context].concat(options.depths)\n            : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return (\n        '' +\n        templateSpec.main(\n          container,\n          context,\n          container.helpers,\n          container.partials,\n          data,\n          blockParams,\n          depths\n        )\n      );\n    }\n\n    main = executeDecorators(\n      templateSpec.main,\n      main,\n      container,\n      options.depths || [],\n      data,\n      blockParams\n    );\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(\n          options.partials,\n          env.partials\n        );\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend(\n          {},\n          env.decorators,\n          options.decorators\n        );\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = createProtoAccessControl(options);\n\n      let keepHelperInHelpers =\n        options.allowCallsToHelperMissing ||\n        templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(\n      container,\n      i,\n      templateSpec[i],\n      data,\n      0,\n      blockParams,\n      depths\n    );\n  };\n  return ret;\n}\n\nexport function wrapProgram(\n  container,\n  i,\n  fn,\n  data,\n  declaredBlockParams,\n  blockParams,\n  depths\n) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (\n      depths &&\n      context != depths[0] &&\n      !(context === container.nullContext && depths[0] === null)\n    ) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(\n      container,\n      context,\n      container.helpers,\n      container.partials,\n      options.data || data,\n      blockParams && [options.blockParams].concat(blockParams),\n      currentDepths\n    );\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(\n      context,\n      options = {}\n    ) {\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(\n      prog,\n      props,\n      container,\n      depths && depths[0],\n      data,\n      blockParams,\n      depths\n    );\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(helperName => {\n    let helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  const lookupProperty = container.lookupProperty;\n  return wrapHelper(helper, options => {\n    return Utils.extend({ lookupProperty }, options);\n  });\n}\n","/* global globalThis */\nexport default function(Handlebars) {\n  /* istanbul ignore next */\n  // https://mathiasbynens.be/notes/globalthis\n  (function() {\n    if (typeof globalThis === 'object') return;\n    Object.prototype.__defineGetter__('__magic__', function() {\n      return this;\n    });\n    __magic__.globalThis = __magic__; // eslint-disable-line no-undef\n    delete Object.prototype.__magic__;\n  })();\n\n  const $Handlebars = globalThis.Handlebars;\n\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (globalThis.Handlebars === Handlebars) {\n      globalThis.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n}\n","import * as base from './handlebars/base';\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nimport SafeString from './handlebars/safe-string';\nimport Exception from './handlebars/exception';\nimport * as Utils from './handlebars/utils';\nimport * as runtime from './handlebars/runtime';\n\nimport noConflict from './handlebars/no-conflict';\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  let hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst['default'] = inst;\n\nexport default inst;\n","let AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function(node) {\n      return (\n        node.type === 'SubExpression' ||\n        ((node.type === 'MustacheStatement' ||\n          node.type === 'BlockStatement') &&\n          !!((node.params && node.params.length) || node.hash))\n      );\n    },\n\n    scopedId: function(path) {\n      return /^\\.|this\\b/.test(path.original);\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function(path) {\n      return (\n        path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth\n      );\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexport default AST;\n","// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\nvar handlebars = (function(){\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"partialBlock\":12,\"content\":13,\"COMMENT\":14,\"CONTENT\":15,\"openRawBlock\":16,\"rawBlock_repetition0\":17,\"END_RAW_BLOCK\":18,\"OPEN_RAW_BLOCK\":19,\"helperName\":20,\"openRawBlock_repetition0\":21,\"openRawBlock_option0\":22,\"CLOSE_RAW_BLOCK\":23,\"openBlock\":24,\"block_option0\":25,\"closeBlock\":26,\"openInverse\":27,\"block_option1\":28,\"OPEN_BLOCK\":29,\"openBlock_repetition0\":30,\"openBlock_option0\":31,\"openBlock_option1\":32,\"CLOSE\":33,\"OPEN_INVERSE\":34,\"openInverse_repetition0\":35,\"openInverse_option0\":36,\"openInverse_option1\":37,\"openInverseChain\":38,\"OPEN_INVERSE_CHAIN\":39,\"openInverseChain_repetition0\":40,\"openInverseChain_option0\":41,\"openInverseChain_option1\":42,\"inverseAndProgram\":43,\"INVERSE\":44,\"inverseChain\":45,\"inverseChain_option0\":46,\"OPEN_ENDBLOCK\":47,\"OPEN\":48,\"mustache_repetition0\":49,\"mustache_option0\":50,\"OPEN_UNESCAPED\":51,\"mustache_repetition1\":52,\"mustache_option1\":53,\"CLOSE_UNESCAPED\":54,\"OPEN_PARTIAL\":55,\"partialName\":56,\"partial_repetition0\":57,\"partial_option0\":58,\"openPartialBlock\":59,\"OPEN_PARTIAL_BLOCK\":60,\"openPartialBlock_repetition0\":61,\"openPartialBlock_option0\":62,\"param\":63,\"sexpr\":64,\"OPEN_SEXPR\":65,\"sexpr_repetition0\":66,\"sexpr_option0\":67,\"CLOSE_SEXPR\":68,\"hash\":69,\"hash_repetition_plus0\":70,\"hashSegment\":71,\"ID\":72,\"EQUALS\":73,\"blockParams\":74,\"OPEN_BLOCK_PARAMS\":75,\"blockParams_repetition_plus0\":76,\"CLOSE_BLOCK_PARAMS\":77,\"path\":78,\"dataName\":79,\"STRING\":80,\"NUMBER\":81,\"BOOLEAN\":82,\"UNDEFINED\":83,\"NULL\":84,\"DATA\":85,\"pathSegments\":86,\"SEP\":87,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\"COMMENT\",15:\"CONTENT\",18:\"END_RAW_BLOCK\",19:\"OPEN_RAW_BLOCK\",23:\"CLOSE_RAW_BLOCK\",29:\"OPEN_BLOCK\",33:\"CLOSE\",34:\"OPEN_INVERSE\",39:\"OPEN_INVERSE_CHAIN\",44:\"INVERSE\",47:\"OPEN_ENDBLOCK\",48:\"OPEN\",51:\"OPEN_UNESCAPED\",54:\"CLOSE_UNESCAPED\",55:\"OPEN_PARTIAL\",60:\"OPEN_PARTIAL_BLOCK\",65:\"OPEN_SEXPR\",68:\"CLOSE_SEXPR\",72:\"ID\",73:\"EQUALS\",75:\"OPEN_BLOCK_PARAMS\",77:\"CLOSE_BLOCK_PARAMS\",80:\"STRING\",81:\"NUMBER\",82:\"BOOLEAN\",83:\"UNDEFINED\",84:\"NULL\",85:\"DATA\",87:\"SEP\"},\nproductions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$\n) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return $$[$0-1]; \nbreak;\ncase 2:this.$ = yy.prepareProgram($$[$0]);\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = $$[$0];\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0];\nbreak;\ncase 7:this.$ = $$[$0];\nbreak;\ncase 8:this.$ = $$[$0];\nbreak;\ncase 9:\n    this.$ = {\n      type: 'CommentStatement',\n      value: yy.stripComment($$[$0]),\n      strip: yy.stripFlags($$[$0], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 10:\n    this.$ = {\n      type: 'ContentStatement',\n      original: $$[$0],\n      value: $$[$0],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 11:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 12:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\nbreak;\ncase 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\nbreak;\ncase 14:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\nbreak;\ncase 15:this.$ = { open: $$[$0-5], path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 17:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 18:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\nbreak;\ncase 19:\n    var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n        program = yy.prepareProgram([inverse], $$[$0-1].loc);\n    program.chained = true;\n\n    this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n  \nbreak;\ncase 20:this.$ = $$[$0];\nbreak;\ncase 21:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\nbreak;\ncase 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 23:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 24:\n    this.$ = {\n      type: 'PartialStatement',\n      name: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      indent: '',\n      strip: yy.stripFlags($$[$0-4], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 25:this.$ = yy.preparePartialBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 26:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1], strip: yy.stripFlags($$[$0-4], $$[$0]) };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0];\nbreak;\ncase 29:\n    this.$ = {\n      type: 'SubExpression',\n      path: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 30:this.$ = {type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 31:this.$ = {type: 'HashPair', key: yy.id($$[$0-2]), value: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 32:this.$ = yy.id($$[$0-1]);\nbreak;\ncase 33:this.$ = $$[$0];\nbreak;\ncase 34:this.$ = $$[$0];\nbreak;\ncase 35:this.$ = {type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 36:this.$ = {type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$)};\nbreak;\ncase 37:this.$ = {type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$)};\nbreak;\ncase 38:this.$ = {type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$)};\nbreak;\ncase 39:this.$ = {type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$)};\nbreak;\ncase 40:this.$ = $$[$0];\nbreak;\ncase 41:this.$ = $$[$0];\nbreak;\ncase 42:this.$ = yy.preparePath(true, $$[$0], this._$);\nbreak;\ncase 43:this.$ = yy.preparePath(false, $$[$0], this._$);\nbreak;\ncase 44: $$[$0-2].push({part: yy.id($$[$0]), original: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \nbreak;\ncase 45:this.$ = [{part: yy.id($$[$0]), original: $$[$0]}];\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:$$[$0-1].push($$[$0]);\nbreak;\ncase 48:this.$ = [];\nbreak;\ncase 49:$$[$0-1].push($$[$0]);\nbreak;\ncase 50:this.$ = [];\nbreak;\ncase 51:$$[$0-1].push($$[$0]);\nbreak;\ncase 58:this.$ = [];\nbreak;\ncase 59:$$[$0-1].push($$[$0]);\nbreak;\ncase 64:this.$ = [];\nbreak;\ncase 65:$$[$0-1].push($$[$0]);\nbreak;\ncase 70:this.$ = [];\nbreak;\ncase 71:$$[$0-1].push($$[$0]);\nbreak;\ncase 78:this.$ = [];\nbreak;\ncase 79:$$[$0-1].push($$[$0]);\nbreak;\ncase 82:this.$ = [];\nbreak;\ncase 83:$$[$0-1].push($$[$0]);\nbreak;\ncase 86:this.$ = [];\nbreak;\ncase 87:$$[$0-1].push($$[$0]);\nbreak;\ncase 90:this.$ = [];\nbreak;\ncase 91:$$[$0-1].push($$[$0]);\nbreak;\ncase 94:this.$ = [];\nbreak;\ncase 95:$$[$0-1].push($$[$0]);\nbreak;\ncase 98:this.$ = [$$[$0]];\nbreak;\ncase 99:$$[$0-1].push($$[$0]);\nbreak;\ncase 100:this.$ = [$$[$0]];\nbreak;\ncase 101:$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],\ndefaultActions: {4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},\nparseError: function parseError (str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex () {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState () {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules () {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin (condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n) {\n\n\nfunction strip(start, end) {\n  return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n}\n\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:\n                                   if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"mu\");\n                                   } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"emu\");\n                                   } else {\n                                     this.begin(\"mu\");\n                                   }\n                                   if(yy_.yytext) return 15;\n                                 \nbreak;\ncase 1:return 15;\nbreak;\ncase 2:\n                                   this.popState();\n                                   return 15;\n                                 \nbreak;\ncase 3:this.begin('raw'); return 15;\nbreak;\ncase 4:\n                                  this.popState();\n                                  // Should be using `this.topState()` below, but it currently\n                                  // returns the second top instead of the first top. Opened an\n                                  // issue about it at https://github.com/zaach/jison/issues/291\n                                  if (this.conditionStack[this.conditionStack.length-1] === 'raw') {\n                                    return 15;\n                                  } else {\n                                    strip(5, 9);\n                                    return 'END_RAW_BLOCK';\n                                  }\n                                 \nbreak;\ncase 5: return 15; \nbreak;\ncase 6:\n  this.popState();\n  return 14;\n\nbreak;\ncase 7:return 65;\nbreak;\ncase 8:return 68;\nbreak;\ncase 9: return 19; \nbreak;\ncase 10:\n                                  this.popState();\n                                  this.begin('raw');\n                                  return 23;\n                                 \nbreak;\ncase 11:return 55;\nbreak;\ncase 12:return 60;\nbreak;\ncase 13:return 29;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:this.popState(); return 44;\nbreak;\ncase 16:this.popState(); return 44;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 39;\nbreak;\ncase 19:return 51;\nbreak;\ncase 20:return 48;\nbreak;\ncase 21:\n  this.unput(yy_.yytext);\n  this.popState();\n  this.begin('com');\n\nbreak;\ncase 22:\n  this.popState();\n  return 14;\n\nbreak;\ncase 23:return 48;\nbreak;\ncase 24:return 73;\nbreak;\ncase 25:return 72;\nbreak;\ncase 26:return 72;\nbreak;\ncase 27:return 87;\nbreak;\ncase 28:// ignore whitespace\nbreak;\ncase 29:this.popState(); return 54;\nbreak;\ncase 30:this.popState(); return 33;\nbreak;\ncase 31:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 80;\nbreak;\ncase 32:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 80;\nbreak;\ncase 33:return 85;\nbreak;\ncase 34:return 82;\nbreak;\ncase 35:return 82;\nbreak;\ncase 36:return 83;\nbreak;\ncase 37:return 84;\nbreak;\ncase 38:return 81;\nbreak;\ncase 39:return 75;\nbreak;\ncase 40:return 77;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g,'$1'); return 72;\nbreak;\ncase 43:return 'INVALID';\nbreak;\ncase 44:return 5;\nbreak;\n}\n};\nlexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{(?=[^/]))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#>)/,/^(?:\\{\\{(~)?#\\*?)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?\\*?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:undefined(?=([~}\\s)])))/,/^(?:null(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[(\\\\\\]|[^\\]])*\\])/,/^(?:.)/,/^(?:$)/];\nlexer.conditions = {\"mu\":{\"rules\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[6],\"inclusive\":false},\"raw\":{\"rules\":[3,4,5],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,44],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();export default handlebars;\n","import Exception from '../exception';\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function(node, name) {\n    let value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new Exception(\n          'Unexpected node type \"' +\n            value.type +\n            '\" found when accepting ' +\n            name +\n            ' on ' +\n            node.type\n        );\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new Exception(node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function(array) {\n    for (let i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new Exception('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    let ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function(/* content */) {},\n  CommentStatement: function(/* comment */) {},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function(/* path */) {},\n\n  StringLiteral: function(/* string */) {},\n  NumberLiteral: function(/* number */) {},\n  BooleanLiteral: function(/* bool */) {},\n  UndefinedLiteral: function(/* literal */) {},\n  NullLiteral: function(/* literal */) {},\n\n  Hash: function(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexport default Visitor;\n","import Visitor from './visitor';\n\nfunction WhitespaceControl(options = {}) {\n  this.options = options;\n}\nWhitespaceControl.prototype = new Visitor();\n\nWhitespaceControl.prototype.Program = function(program) {\n  const doStandalone = !this.options.ignoreStandalone;\n\n  let isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  let body = program.body;\n  for (let i = 0, l = body.length; i < l; i++) {\n    let current = body[i],\n      strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    let _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n      _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n      openStandalone = strip.openStandalone && _isPrevWhitespace,\n      closeStandalone = strip.closeStandalone && _isNextWhitespace,\n      inlineStandalone =\n        strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function(\n  block\n) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  let program = block.program || block.inverse,\n    inverse = block.program && block.inverse,\n    firstInverse = inverse,\n    lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  let strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    let inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (\n      !this.options.ignoreStandalone &&\n      isPrevWhitespace(program.body) &&\n      isNextWhitespace(firstInverse.body)\n    ) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function(\n  mustache\n) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function(\n  node\n) {\n  /* istanbul ignore next */\n  let strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  let prev = body[i - 1],\n    sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(\n      prev.original\n    );\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  let next = body[i + 1],\n    sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(\n      next.original\n    );\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  let current = body[i == null ? 0 : i + 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.rightStripped)\n  ) {\n    return;\n  }\n\n  let original = current.value;\n  current.value = current.value.replace(\n    multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/,\n    ''\n  );\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  let current = body[i == null ? body.length - 1 : i - 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.leftStripped)\n  ) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  let original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexport default WhitespaceControl;\n","import Exception from '../exception';\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    let errorNode = { loc: open.path.loc };\n\n    throw new Exception(\n      open.path.original + \" doesn't match \" + close,\n      errorNode\n    );\n  }\n}\n\nexport function SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nexport function id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nexport function stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nexport function stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nexport function preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  let original = data ? '@' : '',\n    dig = [],\n    depth = 0;\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    let part = parts[i].part,\n      // If we have [] syntax then we do not treat path references as operators,\n      // i.e. foo.[this] resolves to approximately context.foo['this']\n      isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new Exception('Invalid path: ' + original, { loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data,\n    depth,\n    parts: dig,\n    original,\n    loc\n  };\n}\n\nexport function prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  let escapeFlag = open.charAt(3) || open.charAt(2),\n    escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  let decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path,\n    params,\n    hash,\n    escaped,\n    strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  let program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nexport function prepareBlock(\n  openBlock,\n  program,\n  inverseAndProgram,\n  close,\n  inverted,\n  locInfo\n) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  let decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  let inverse, inverseStrip;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new Exception(\n        'Unexpected inverse block on decorator',\n        inverseAndProgram\n      );\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program,\n    inverse,\n    openStrip: openBlock.strip,\n    inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    const firstLoc = statements[0].loc,\n      lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nexport function preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n","import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let ast = parser.parse(input);\n\n  return ast;\n}\n\nexport function parse(input, options) {\n  let ast = parseWithoutProcessing(input, options);\n  let strip = new WhitespaceControl(options);\n\n  return strip.accept(ast);\n}\n","/* eslint-disable new-cap */\n\nimport Exception from '../exception';\nimport { isArray, indexOf, extend } from '../utils';\nimport AST from './ast';\n\nconst slice = [].slice;\n\nexport function Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function(other) {\n    let len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      let opcode = this.opcodes[i],\n        otherOpcode = other.opcodes[i];\n      if (\n        opcode.opcode !== otherOpcode.opcode ||\n        !argEquals(opcode.args, otherOpcode.args)\n      ) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (let i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = extend(\n      Object.create(null),\n      {\n        helperMissing: true,\n        blockHelperMissing: true,\n        each: true,\n        if: true,\n        unless: true,\n        with: true,\n        log: true,\n        lookup: true\n      },\n      options.knownHelpers\n    );\n\n    return this.accept(program);\n  },\n\n  compileProgram: function(program) {\n    let childCompiler = new this.compiler(), // eslint-disable-line new-cap\n      result = childCompiler.compile(program, this.options),\n      guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new Exception('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    let ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    let body = program.body,\n      bodyLength = body.length;\n    for (let i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function(block) {\n    transformLiteralToPath(block);\n\n    let program = block.program,\n      inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    let type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock(decorator) {\n    let program = decorator.program && this.compileProgram(decorator.program);\n    let params = this.setupFullMustacheParams(decorator, program, undefined),\n      path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function(partial) {\n    this.usePartial = true;\n\n    let program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    let params = partial.params;\n    if (params.length > 1) {\n      throw new Exception(\n        'Unsupported number of partial arguments: ' + params.length,\n        partial\n      );\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    let partialName = partial.name.original,\n      isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    let indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function() {},\n\n  SubExpression: function(sexpr) {\n    transformLiteralToPath(sexpr);\n    let type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function(sexpr, program, inverse) {\n    let path = sexpr.path,\n      name = path.parts[0],\n      isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function(sexpr) {\n    let path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function(sexpr, program, inverse) {\n    let params = this.setupFullMustacheParams(sexpr, program, inverse),\n      path = sexpr.path,\n      name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new Exception(\n        'You specified knownHelpersOnly, but used the unknown helper ' + name,\n        sexpr\n      );\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode(\n        'invokeHelper',\n        params.length,\n        path.original,\n        AST.helpers.simpleId(path)\n      );\n    }\n  },\n\n  PathExpression: function(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    let name = path.parts[0],\n      scoped = AST.helpers.scopedId(path),\n      blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode(\n        'lookupOnContext',\n        path.parts,\n        path.falsy,\n        path.strict,\n        scoped\n      );\n    }\n  },\n\n  StringLiteral: function(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function(hash) {\n    let pairs = hash.pairs,\n      i = 0,\n      l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function(sexpr) {\n    let isSimple = AST.helpers.simpleId(sexpr.path);\n\n    let isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    let isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    let isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      let name = sexpr.path.parts[0],\n        options = this.options;\n      if (options.knownHelpers[name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function(params) {\n    for (let i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function(val) {\n    let value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        let blockParamIndex;\n        if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          let blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value\n              .replace(/^this(?:\\.|$)/, '')\n              .replace(/^\\.\\//, '')\n              .replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n    let params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function(name) {\n    for (\n      let depth = 0, len = this.options.blockParams.length;\n      depth < len;\n      depth++\n    ) {\n      let blockParams = this.options.blockParams[depth],\n        param = blockParams && indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nexport function precompile(input, options, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' +\n        input\n    );\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let ast = env.parse(input, options),\n    environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nexport function compile(input, options = {}, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.compile. You passed ' +\n        input\n    );\n  }\n\n  options = extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let compiled;\n\n  function compileInput() {\n    let ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options),\n      templateSpec = new env.JavaScriptCompiler().compile(\n        environment,\n        options,\n        undefined,\n        true\n      );\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function(setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function(i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (isArray(a) && isArray(b) && a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    let literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* global define, require */\nimport { isArray } from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we assume that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return { code: this.toString() };\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || { start: {} }) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(\n      loc.start.line,\n      loc.start.column,\n      this.srcFile,\n      chunk\n    );\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return (\n      '\"' +\n      (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') +\n      '\"'\n    );\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    Object.keys(obj).forEach(key => {\n      let value = castChunk(obj[key], this);\n      if (value !== 'undefined') {\n        pairs.push([this.quotedString(key), ':', value]);\n      }\n    });\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n","import { COMPILER_REVISION, REVISION_CHANGES } from '../base';\nimport Exception from '../exception';\nimport { isArray } from '../utils';\nimport CodeGen from './code-gen';\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function(name) {\n    return [\n      this.aliasable('container.lookup'),\n      '(depths, ',\n      JSON.stringify(name),\n      ')'\n    ];\n  },\n\n  compilerInfo: function() {\n    const revision = COMPILER_REVISION,\n      versions = REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths =\n      this.useDepths ||\n      environment.useDepths ||\n      environment.useDecorators ||\n      this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    let opcodes = environment.opcodes,\n      opcode,\n      firstLoc,\n      i,\n      l;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new Exception('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend([\n        'var decorators = container.decorators, ',\n        this.lookupPropertyFunctionVarDeclaration(),\n        ';\\n'\n      ]);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, [\n          'fn',\n          'props',\n          'container',\n          'depth0',\n          'data',\n          'blockParams',\n          'depths',\n          this.decorators.merge()\n        ]);\n      } else {\n        this.decorators.prepend(\n          'function(fn, props, container, depth0, data, blockParams, depths) {\\n'\n        );\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    let fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      let ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      let { programs, decorators } = this.context;\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new CodeGen(this.options.srcName);\n    this.decorators = new CodeGen(this.options.srcName);\n  },\n\n  createFunctionContext: function(asObject) {\n    let varDeclarations = '';\n\n    let locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    let aliasCount = 0;\n    Object.keys(this.aliases).forEach(alias => {\n      let node = this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    let params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    let source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap([\n        'function(',\n        params.join(','),\n        ') {\\n  ',\n        source,\n        '}'\n      ]);\n    }\n  },\n  mergeSource: function(varDeclarations) {\n    let isSimple = this.environment.isSimple,\n      appendOnly = !this.forceBuffer,\n      appendFirst,\n      sourceSeen,\n      bufferStart,\n      bufferEnd;\n    this.source.each(line => {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations +=\n        ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend(\n        'var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n')\n      );\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function() {\n    return `\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    `.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function(name) {\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    let blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    let current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource([\n      'if (!',\n      this.lastHelper,\n      ') { ',\n      current,\n      ' = ',\n      this.source.functionCall(blockHelperMissing, 'call', params),\n      '}'\n    ]);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function() {\n    if (this.isInline()) {\n      this.replaceStack(current => [' != null ? ', current, ' : \"\"']);\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      let local = this.popStack();\n      this.pushSource([\n        'if (',\n        local,\n        ' != null) { ',\n        this.appendToBuffer(local, undefined, true),\n        ' }'\n      ]);\n      if (this.environment.isSimple) {\n        this.pushSource([\n          'else { ',\n          this.appendToBuffer(\"''\", undefined, true),\n          ' }'\n        ]);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function() {\n    this.pushSource(\n      this.appendToBuffer([\n        this.aliasable('container.escapeExpression'),\n        '(',\n        this.popStack(),\n        ')'\n      ])\n    );\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function(parts, falsy, strict, scoped) {\n    let i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function(type, parts, i, falsy, strict) {\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(\n        strictLookup(this.options.strict && strict, this, parts, i, type)\n      );\n      return;\n    }\n\n    let len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(current => {\n        let lookup = this.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function() {\n    this.push([\n      this.aliasable('container.lambda'),\n      '(',\n      this.popStack(),\n      ', ',\n      this.contextName(0),\n      ')'\n    ]);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function() {\n    let hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator(paramSize, name) {\n    let foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n      options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push([\n      'fn = ',\n      this.decorators.functionCall(foundDecorator, '', [\n        'fn',\n        'props',\n        'container',\n        options\n      ]),\n      ' || fn;'\n    ]);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function(paramSize, name, isSimple) {\n    let nonHelper = this.popStack(),\n      helper = this.setupHelper(paramSize, name);\n\n    let possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    let functionLookupCode = [\n      '(',\n      this.itemsSeparatedBy(possibleFunctionCalls, '||'),\n      ')'\n    ];\n    let functionCall = this.source.functionCall(\n      functionLookupCode,\n      'call',\n      helper.callParams\n    );\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function(items, separator) {\n    let result = [];\n    result.push(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function(paramSize, name) {\n    let helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function(name, helperCall) {\n    this.useRegister('helper');\n\n    let nonHelper = this.popStack();\n\n    this.emptyHash();\n    let helper = this.setupHelper(0, name, helperCall);\n\n    let helperName = (this.lastHelper = this.nameLookup(\n      'helpers',\n      name,\n      'helper'\n    ));\n\n    let lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(\n        ' != null ? helper : ',\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    this.push([\n      '(',\n      lookup,\n      helper.paramsInit ? ['),(', helper.paramsInit] : [],\n      '),',\n      '(typeof helper === ',\n      this.aliasable('\"function\"'),\n      ' ? ',\n      this.source.functionCall('helper', 'call', helper.callParams),\n      ' : helper))'\n    ]);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function(isDynamic, name, indent) {\n    let params = [],\n      options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function(key) {\n    let value = this.popStack(),\n      context,\n      type,\n      id;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    let hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral(\n        'blockParams[' +\n          name[0] +\n          '].path[' +\n          name[1] +\n          ']' +\n          (child ? ' + ' + JSON.stringify('.' + child) : '')\n      );\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function(environment, options) {\n    let children = environment.children,\n      child,\n      compiler;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      let existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        let index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(\n          child,\n          options,\n          this.context,\n          !this.precompile\n        );\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function(child) {\n    for (let i = 0, len = this.context.environments.length; i < len; i++) {\n      let environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function(guid) {\n    let child = this.environment.children[guid],\n      programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function(source) {\n    if (this.pendingContent) {\n      this.source.push(\n        this.appendToBuffer(\n          this.source.quotedString(this.pendingContent),\n          this.pendingLocation\n        )\n      );\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function(callback) {\n    let prefix = ['('],\n      stack,\n      createdStack,\n      usedLiteral;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new Exception('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    let top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      let name = this.incrStack();\n\n      prefix = ['((', this.push(name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    let item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function() {\n    let inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (let i = 0, len = inlineStack.length; i < len; i++) {\n      let entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        let stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function(wrapped) {\n    let inline = this.isInline(),\n      item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new Exception('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function() {\n    let stack = this.isInline() ? this.inlineStack : this.compileStack,\n      item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function(name) {\n    let ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function(paramSize, name, blockHelper) {\n    let params = [],\n      paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    let foundHelper = this.nameLookup('helpers', name, 'helper'),\n      callContext = this.aliasable(\n        `${this.contextName(0)} != null ? ${this.contextName(\n          0\n        )} : (container.nullContext || {})`\n      );\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function(helper, paramSize, params) {\n    let options = {},\n      contexts = [],\n      types = [],\n      ids = [],\n      objectArgs = !params,\n      param;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    let inverse = this.popStack(),\n      program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    let i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function(helper, paramSize, params, useRegister) {\n    let options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function() {\n  const reservedWords = (\n    'break else new var' +\n    ' case finally return void' +\n    ' catch for switch while' +\n    ' continue function this with' +\n    ' default if throw' +\n    ' delete in try' +\n    ' do instanceof typeof' +\n    ' abstract enum int short' +\n    ' boolean export interface static' +\n    ' byte extends long super' +\n    ' char final native synchronized' +\n    ' class float package throws' +\n    ' const goto private transient' +\n    ' debugger implements protected volatile' +\n    ' double import public let yield await' +\n    ' null true false'\n  ).split(' ');\n\n  const compilerWords = (JavaScriptCompiler.RESERVED_WORDS = {});\n\n  for (let i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n  return (\n    !JavaScriptCompiler.RESERVED_WORDS[name] &&\n    /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name)\n  );\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, i, type) {\n  let stack = compiler.popStack(),\n    len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [\n      compiler.aliasable('container.strict'),\n      '(',\n      stack,\n      ', ',\n      compiler.quotedString(parts[i]),\n      ', ',\n      JSON.stringify(compiler.source.currentLocation),\n      ' )'\n    ];\n  } else {\n    return stack;\n  }\n}\n\nexport default JavaScriptCompiler;\n","import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n","/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n    body = program.body,\n    i,\n    l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function(\n  block\n) {\n  let out = '';\n\n  out += this.pad(\n    (block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:'\n  );\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n    paramStrings = [],\n    hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n    joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n","// USAGE:\n// var handlebars = require('handlebars');\n/* eslint-env node */\n/* eslint-disable no-var */\n\n// var local = handlebars.create();\n\nvar handlebars = require('../dist/cjs/handlebars')['default'];\n\nvar printer = require('../dist/cjs/handlebars/compiler/printer');\nhandlebars.PrintVisitor = printer.PrintVisitor;\nhandlebars.print = printer.print;\n\nmodule.exports = handlebars;\n\n// Publish a Node.js require() handler for .handlebars and .hbs files\nfunction extension(module, filename) {\n  var fs = require('fs');\n  var templateString = fs.readFileSync(filename, 'utf8');\n  module.exports = handlebars.compile(templateString);\n}\n/* istanbul ignore else */\nif (typeof require !== 'undefined' && require.extensions) {\n  require.extensions['.handlebars'] = extension;\n  require.extensions['.hbs'] = extension;\n}\n","/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2024\n * @license MIT\n */\n/*jslint bitwise: true */\n(function() {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA1_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA1_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA1_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA1_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  var isArray = Array.isArray;\n  if (root.JS_SHA1_NO_NODE_JS || !isArray) {\n    isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  var isView = ArrayBuffer.isView;\n  if (ARRAY_BUFFER && (root.JS_SHA1_NO_ARRAY_BUFFER_IS_VIEW || !isView)) {\n    isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  // [message: string, isString: bool]\n  var formatMessage = function (message) {\n    var type = typeof message;\n    if (type === 'string') {\n      return [message, true];\n    }\n    if (type !== 'object' || message === null) {\n      throw new Error(INPUT_ERROR);\n    }\n    if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n      return [new Uint8Array(message), false];\n    }\n    if (!isArray(message) && !isView(message)) {\n      throw new Error(INPUT_ERROR);\n    }\n    return [message, false];\n  }\n\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Sha1(true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Sha1();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = require('crypto')\n    var Buffer = require('buffer').Buffer;\n    var bufferFrom;\n    if (Buffer.from && !root.JS_SHA1_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('sha1').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(INPUT_ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (isArray(message) || isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('sha1').update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType) {\n    return function (key, message) {\n      return new HmacSha1(key, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function () {\n    var method = createHmacOutputMethod('hex');\n    method.create = function (key) {\n      return new HmacSha1(key);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type);\n    }\n    return method;\n  };\n\n  function Sha1(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.h0 = 0x67452301;\n    this.h1 = 0xEFCDAB89;\n    this.h2 = 0x98BADCFE;\n    this.h3 = 0x10325476;\n    this.h4 = 0xC3D2E1F0;\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  Sha1.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n\n    var result = formatMessage(message);\n    message = result[0];\n    var isString = result[1];\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        this.block = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if(isString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha1.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n\n    for(j = 16; j < 80; ++j) {\n      t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n      blocks[j] =  (t << 1) | (t >>> 31);\n    }\n\n    for(j = 0; j < 20; j += 5) {\n      f = (b & c) | ((~b) & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1518500249 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | ((~a) & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1518500249 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | ((~e) & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1518500249 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | ((~d) & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1518500249 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | ((~c) & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1518500249 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 40; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1859775393 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1859775393 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1859775393 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1859775393 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1859775393 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 60; j += 5) {\n      f = (b & c) | (b & d) | (c & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 1894007588 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | (a & c) | (b & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 1894007588 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | (e & b) | (a & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 1894007588 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | (d & a) | (e & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 1894007588 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | (c & e) | (d & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 1894007588 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 80; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 899497514 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 899497514 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 899497514 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 899497514 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 899497514 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n  };\n\n  Sha1.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n           HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n           HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n           HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n           HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n           HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n           HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n           HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n           HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n           HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n           HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n           HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n           HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F] +\n           HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n           HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n           HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n           HEX_CHARS[(h4 >>> 28) & 0x0F] + HEX_CHARS[(h4 >>> 24) & 0x0F] +\n           HEX_CHARS[(h4 >>> 20) & 0x0F] + HEX_CHARS[(h4 >>> 16) & 0x0F] +\n           HEX_CHARS[(h4 >>> 12) & 0x0F] + HEX_CHARS[(h4 >>> 8) & 0x0F] +\n           HEX_CHARS[(h4 >>> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F];\n  };\n\n  Sha1.prototype.toString = Sha1.prototype.hex;\n\n  Sha1.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return [\n      (h0 >>> 24) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 8) & 0xFF, h0 & 0xFF,\n      (h1 >>> 24) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 8) & 0xFF, h1 & 0xFF,\n      (h2 >>> 24) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 8) & 0xFF, h2 & 0xFF,\n      (h3 >>> 24) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 8) & 0xFF, h3 & 0xFF,\n      (h4 >>> 24) & 0xFF, (h4 >>> 16) & 0xFF, (h4 >>> 8) & 0xFF, h4 & 0xFF\n    ];\n  };\n\n  Sha1.prototype.array = Sha1.prototype.digest;\n\n  Sha1.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n  };\n\n  function HmacSha1(key, sharedMemory) {\n    var i, result = formatMessage(key);\n    key = result[0];\n    if (result[1]) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    }\n\n    if (key.length > 64) {\n      key = (new Sha1(true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha1.call(this, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha1.prototype = new Sha1();\n\n  HmacSha1.prototype.finalize = function () {\n    Sha1.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha1.call(this, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha1.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha1 = exports;\n  exports.sha1.hmac = createHmacMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha1 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","'use strict'\n\n// **************************************************************\n// * Code initially copied/adapted from \"pony-cause\" npm module *\n// * Please upstream improvements there                         *\n// **************************************************************\n\nconst isErrorLike = (err) => {\n  return err && typeof err.message === 'string'\n}\n\n/**\n * @param {Error|{ cause?: unknown|(()=>err)}} err\n * @returns {Error|Object|undefined}\n */\nconst getErrorCause = (err) => {\n  if (!err) return\n\n  /** @type {unknown} */\n  // @ts-ignore\n  const cause = err.cause\n\n  // VError / NError style causes\n  if (typeof cause === 'function') {\n    // @ts-ignore\n    const causeResult = err.cause()\n\n    return isErrorLike(causeResult)\n      ? causeResult\n      : undefined\n  } else {\n    return isErrorLike(cause)\n      ? cause\n      : undefined\n  }\n}\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @returns {string}\n */\nconst _stackWithCauses = (err, seen) => {\n  if (!isErrorLike(err)) return ''\n\n  const stack = err.stack || ''\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return stack + '\\ncauses have become circular...'\n  }\n\n  const cause = getErrorCause(err)\n\n  if (cause) {\n    seen.add(err)\n    return (stack + '\\ncaused by: ' + _stackWithCauses(cause, seen))\n  } else {\n    return stack\n  }\n}\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst stackWithCauses = (err) => _stackWithCauses(err, new Set())\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @param {boolean} [skip]\n * @returns {string}\n */\nconst _messageWithCauses = (err, seen, skip) => {\n  if (!isErrorLike(err)) return ''\n\n  const message = skip ? '' : (err.message || '')\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return message + ': ...'\n  }\n\n  const cause = getErrorCause(err)\n\n  if (cause) {\n    seen.add(err)\n\n    // @ts-ignore\n    const skipIfVErrorStyleCause = typeof err.cause === 'function'\n\n    return (message +\n      (skipIfVErrorStyleCause ? '' : ': ') +\n      _messageWithCauses(cause, seen, skipIfVErrorStyleCause))\n  } else {\n    return message\n  }\n}\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst messageWithCauses = (err) => _messageWithCauses(err, new Set())\n\nmodule.exports = {\n  isErrorLike,\n  getErrorCause,\n  stackWithCauses,\n  messageWithCauses\n}\n","'use strict'\n\nconst seen = Symbol('circular-ref-tag')\nconst rawSymbol = Symbol('pino-raw-err-ref')\n\nconst pinoErrProto = Object.create({}, {\n  type: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  message: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  stack: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  aggregateErrors: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoErrProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nmodule.exports = {\n  pinoErrProto,\n  pinoErrorSymbols: {\n    seen,\n    rawSymbol\n  }\n}\n","'use strict'\n\nmodule.exports = errSerializer\n\nconst { messageWithCauses, stackWithCauses, isErrorLike } = require('./err-helpers')\nconst { pinoErrProto, pinoErrorSymbols } = require('./err-proto')\nconst { seen } = pinoErrorSymbols\n\nconst { toString } = Object.prototype\n\nfunction errSerializer (err) {\n  if (!isErrorLike(err)) {\n    return err\n  }\n\n  err[seen] = undefined // tag to prevent re-looking at this\n  const _err = Object.create(pinoErrProto)\n  _err.type = toString.call(err.constructor) === '[object Function]'\n    ? err.constructor.name\n    : err.name\n  _err.message = messageWithCauses(err)\n  _err.stack = stackWithCauses(err)\n\n  if (Array.isArray(err.errors)) {\n    _err.aggregateErrors = err.errors.map(err => errSerializer(err))\n  }\n\n  for (const key in err) {\n    if (_err[key] === undefined) {\n      const val = err[key]\n      if (isErrorLike(val)) {\n        // We append cause messages and stacks to _err, therefore skipping causes here\n        if (key !== 'cause' && !Object.prototype.hasOwnProperty.call(val, seen)) {\n          _err[key] = errSerializer(val)\n        }\n      } else {\n        _err[key] = val\n      }\n    }\n  }\n\n  delete err[seen] // clean up tag in case err is serialized again later\n  _err.raw = err\n  return _err\n}\n","'use strict'\n\nmodule.exports = errWithCauseSerializer\n\nconst { isErrorLike } = require('./err-helpers')\nconst { pinoErrProto, pinoErrorSymbols } = require('./err-proto')\nconst { seen } = pinoErrorSymbols\n\nconst { toString } = Object.prototype\n\nfunction errWithCauseSerializer (err) {\n  if (!isErrorLike(err)) {\n    return err\n  }\n\n  err[seen] = undefined // tag to prevent re-looking at this\n  const _err = Object.create(pinoErrProto)\n  _err.type = toString.call(err.constructor) === '[object Function]'\n    ? err.constructor.name\n    : err.name\n  _err.message = err.message\n  _err.stack = err.stack\n\n  if (Array.isArray(err.errors)) {\n    _err.aggregateErrors = err.errors.map(err => errWithCauseSerializer(err))\n  }\n\n  if (isErrorLike(err.cause) && !Object.prototype.hasOwnProperty.call(err.cause, seen)) {\n    _err.cause = errWithCauseSerializer(err.cause)\n  }\n\n  for (const key in err) {\n    if (_err[key] === undefined) {\n      const val = err[key]\n      if (isErrorLike(val)) {\n        if (!Object.prototype.hasOwnProperty.call(val, seen)) {\n          _err[key] = errWithCauseSerializer(val)\n        }\n      } else {\n        _err[key] = val\n      }\n    }\n  }\n\n  delete err[seen] // clean up tag in case err is serialized again later\n  _err.raw = err\n  return _err\n}\n","'use strict'\n\nmodule.exports = {\n  mapHttpRequest,\n  reqSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-req-ref')\nconst pinoReqProto = Object.create({}, {\n  id: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  method: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  url: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  query: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  params: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: {}\n  },\n  remoteAddress: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  remotePort: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoReqProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction reqSerializer (req) {\n  // req.info is for hapi compat.\n  const connection = req.info || req.socket\n  const _req = Object.create(pinoReqProto)\n  _req.id = (typeof req.id === 'function' ? req.id() : (req.id || (req.info ? req.info.id : undefined)))\n  _req.method = req.method\n  // req.originalUrl is for expressjs compat.\n  if (req.originalUrl) {\n    _req.url = req.originalUrl\n  } else {\n    const path = req.path\n    // path for safe hapi compat.\n    _req.url = typeof path === 'string' ? path : (req.url ? req.url.path || req.url : undefined)\n  }\n\n  if (req.query) {\n    _req.query = req.query\n  }\n\n  if (req.params) {\n    _req.params = req.params\n  }\n\n  _req.headers = req.headers\n  _req.remoteAddress = connection && connection.remoteAddress\n  _req.remotePort = connection && connection.remotePort\n  // req.raw is  for hapi compat/equivalence\n  _req.raw = req.raw || req\n  return _req\n}\n\nfunction mapHttpRequest (req) {\n  return {\n    req: reqSerializer(req)\n  }\n}\n","'use strict'\n\nmodule.exports = {\n  mapHttpResponse,\n  resSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-res-ref')\nconst pinoResProto = Object.create({}, {\n  statusCode: {\n    enumerable: true,\n    writable: true,\n    value: 0\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoResProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction resSerializer (res) {\n  const _res = Object.create(pinoResProto)\n  _res.statusCode = res.headersSent ? res.statusCode : null\n  _res.headers = res.getHeaders ? res.getHeaders() : res._headers\n  _res.raw = res\n  return _res\n}\n\nfunction mapHttpResponse (res) {\n  return {\n    res: resSerializer(res)\n  }\n}\n","'use strict'\n\nconst errSerializer = require('./lib/err')\nconst errWithCauseSerializer = require('./lib/err-with-cause')\nconst reqSerializers = require('./lib/req')\nconst resSerializers = require('./lib/res')\n\nmodule.exports = {\n  err: errSerializer,\n  errWithCause: errWithCauseSerializer,\n  mapHttpRequest: reqSerializers.mapHttpRequest,\n  mapHttpResponse: resSerializers.mapHttpResponse,\n  req: reqSerializers.reqSerializer,\n  res: resSerializers.resSerializer,\n\n  wrapErrorSerializer: function wrapErrorSerializer (customSerializer) {\n    if (customSerializer === errSerializer) return customSerializer\n    return function wrapErrSerializer (err) {\n      return customSerializer(errSerializer(err))\n    }\n  },\n\n  wrapRequestSerializer: function wrapRequestSerializer (customSerializer) {\n    if (customSerializer === reqSerializers.reqSerializer) return customSerializer\n    return function wrappedReqSerializer (req) {\n      return customSerializer(reqSerializers.reqSerializer(req))\n    }\n  },\n\n  wrapResponseSerializer: function wrapResponseSerializer (customSerializer) {\n    if (customSerializer === resSerializers.resSerializer) return customSerializer\n    return function wrappedResSerializer (res) {\n      return customSerializer(resSerializers.resSerializer(res))\n    }\n  }\n}\n","'use strict'\n\nfunction noOpPrepareStackTrace (_, stack) {\n  return stack\n}\n\nmodule.exports = function getCallers () {\n  const originalPrepare = Error.prepareStackTrace\n  Error.prepareStackTrace = noOpPrepareStackTrace\n  const stack = new Error().stack\n  Error.prepareStackTrace = originalPrepare\n\n  if (!Array.isArray(stack)) {\n    return undefined\n  }\n\n  const entries = stack.slice(2)\n\n  const fileNames = []\n\n  for (const entry of entries) {\n    if (!entry) {\n      continue\n    }\n\n    fileNames.push(entry.getFileName())\n  }\n\n  return fileNames\n}\n","'use strict'\n\nmodule.exports = validator\n\nfunction validator (opts = {}) {\n  const {\n    ERR_PATHS_MUST_BE_STRINGS = () => 'fast-redact - Paths must be (non-empty) strings',\n    ERR_INVALID_PATH = (s) => `fast-redact – Invalid path (${s})`\n  } = opts\n\n  return function validate ({ paths }) {\n    paths.forEach((s) => {\n      if (typeof s !== 'string') {\n        throw Error(ERR_PATHS_MUST_BE_STRINGS())\n      }\n      try {\n        if (/〇/.test(s)) throw Error()\n        const expr = (s[0] === '[' ? '' : '.') + s.replace(/^\\*/, '〇').replace(/\\.\\*/g, '.〇').replace(/\\[\\*\\]/g, '[〇]')\n        if (/\\n|\\r|;/.test(expr)) throw Error()\n        if (/\\/\\*/.test(expr)) throw Error()\n        /* eslint-disable-next-line */\n        Function(`\n            'use strict'\n            const o = new Proxy({}, { get: () => o, set: () => { throw Error() } });\n            const 〇 = null;\n            o${expr}\n            if ([o${expr}].length !== 1) throw Error()`)()\n      } catch (e) {\n        throw Error(ERR_INVALID_PATH(s))\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = /[^.[\\]]+|\\[((?:.)*?)\\]/g\n\n/*\nRegular expression explanation:\n\nAlt 1: /[^.[\\]]+/ - Match one or more characters that are *not* a dot (.)\n                    opening square bracket ([) or closing square bracket (])\n\nAlt 2: /\\[((?:.)*?)\\]/ - If the char IS dot or square bracket, then create a capture\n                         group (which will be capture group $1) that matches anything\n                         within square brackets. Expansion is lazy so it will\n                         stop matching as soon as the first closing bracket is met `]`\n                         (rather than continuing to match until the final closing bracket).\n*/\n","'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = parse\n\nfunction parse ({ paths }) {\n  const wildcards = []\n  var wcLen = 0\n  const secret = paths.reduce(function (o, strPath, ix) {\n    var path = strPath.match(rx).map((p) => p.replace(/'|\"|`/g, ''))\n    const leadingBracket = strPath[0] === '['\n    path = path.map((p) => {\n      if (p[0] === '[') return p.substr(1, p.length - 2)\n      else return p\n    })\n    const star = path.indexOf('*')\n    if (star > -1) {\n      const before = path.slice(0, star)\n      const beforeStr = before.join('.')\n      const after = path.slice(star + 1, path.length)\n      const nested = after.length > 0\n      wcLen++\n      wildcards.push({\n        before,\n        beforeStr,\n        after,\n        nested\n      })\n    } else {\n      o[strPath] = {\n        path: path,\n        val: undefined,\n        precensored: false,\n        circle: '',\n        escPath: JSON.stringify(strPath),\n        leadingBracket: leadingBracket\n      }\n    }\n    return o\n  }, {})\n\n  return { wildcards, wcLen, secret }\n}\n","'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = redactor\n\nfunction redactor ({ secret, serialize, wcLen, strict, isCensorFct, censorFctTakesPath }, state) {\n  /* eslint-disable-next-line */\n  const redact = Function('o', `\n    if (typeof o !== 'object' || o == null) {\n      ${strictImpl(strict, serialize)}\n    }\n    const { censor, secret } = this\n    const originalSecret = {}\n    const secretKeys = Object.keys(secret)\n    for (var i = 0; i < secretKeys.length; i++) {\n      originalSecret[secretKeys[i]] = secret[secretKeys[i]]\n    }\n\n    ${redactTmpl(secret, isCensorFct, censorFctTakesPath)}\n    this.compileRestore()\n    ${dynamicRedactTmpl(wcLen > 0, isCensorFct, censorFctTakesPath)}\n    this.secret = originalSecret\n    ${resultTmpl(serialize)}\n  `).bind(state)\n\n  redact.state = state\n\n  if (serialize === false) {\n    redact.restore = (o) => state.restore(o)\n  }\n\n  return redact\n}\n\nfunction redactTmpl (secret, isCensorFct, censorFctTakesPath) {\n  return Object.keys(secret).map((path) => {\n    const { escPath, leadingBracket, path: arrPath } = secret[path]\n    const skip = leadingBracket ? 1 : 0\n    const delim = leadingBracket ? '' : '.'\n    const hops = []\n    var match\n    while ((match = rx.exec(path)) !== null) {\n      const [ , ix ] = match\n      const { index, input } = match\n      if (index > skip) hops.push(input.substring(0, index - (ix ? 0 : 1)))\n    }\n    var existence = hops.map((p) => `o${delim}${p}`).join(' && ')\n    if (existence.length === 0) existence += `o${delim}${path} != null`\n    else existence += ` && o${delim}${path} != null`\n\n    const circularDetection = `\n      switch (true) {\n        ${hops.reverse().map((p) => `\n          case o${delim}${p} === censor:\n            secret[${escPath}].circle = ${JSON.stringify(p)}\n            break\n        `).join('\\n')}\n      }\n    `\n\n    const censorArgs = censorFctTakesPath\n      ? `val, ${JSON.stringify(arrPath)}`\n      : `val`\n\n    return `\n      if (${existence}) {\n        const val = o${delim}${path}\n        if (val === censor) {\n          secret[${escPath}].precensored = true\n        } else {\n          secret[${escPath}].val = val\n          o${delim}${path} = ${isCensorFct ? `censor(${censorArgs})` : 'censor'}\n          ${circularDetection}\n        }\n      }\n    `\n  }).join('\\n')\n}\n\nfunction dynamicRedactTmpl (hasWildcards, isCensorFct, censorFctTakesPath) {\n  return hasWildcards === true ? `\n    {\n      const { wildcards, wcLen, groupRedact, nestedRedact } = this\n      for (var i = 0; i < wcLen; i++) {\n        const { before, beforeStr, after, nested } = wildcards[i]\n        if (nested === true) {\n          secret[beforeStr] = secret[beforeStr] || []\n          nestedRedact(secret[beforeStr], o, before, after, censor, ${isCensorFct}, ${censorFctTakesPath})\n        } else secret[beforeStr] = groupRedact(o, before, censor, ${isCensorFct}, ${censorFctTakesPath})\n      }\n    }\n  ` : ''\n}\n\nfunction resultTmpl (serialize) {\n  return serialize === false ? `return o` : `\n    var s = this.serialize(o)\n    this.restore(o)\n    return s\n  `\n}\n\nfunction strictImpl (strict, serialize) {\n  return strict === true\n    ? `throw Error('fast-redact: primitives cannot be redacted')`\n    : serialize === false ? `return o` : `return this.serialize(o)`\n}\n","'use strict'\n\nmodule.exports = {\n  groupRedact,\n  groupRestore,\n  nestedRedact,\n  nestedRestore\n}\n\nfunction groupRestore ({ keys, values, target }) {\n  if (target == null || typeof target === 'string') return\n  const length = keys.length\n  for (var i = 0; i < length; i++) {\n    const k = keys[i]\n    target[k] = values[i]\n  }\n}\n\nfunction groupRedact (o, path, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null || typeof target === 'string') return { keys: null, values: null, target, flat: true }\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  const pathLength = path.length\n  const pathWithKey = censorFctTakesPath ? [...path] : undefined\n  const values = new Array(keysLength)\n\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    values[i] = target[key]\n\n    if (censorFctTakesPath) {\n      pathWithKey[pathLength] = key\n      target[key] = censor(target[key], pathWithKey)\n    } else if (isCensorFct) {\n      target[key] = censor(target[key])\n    } else {\n      target[key] = censor\n    }\n  }\n  return { keys, values, target, flat: true }\n}\n\n/**\n * @param {RestoreInstruction[]} instructions a set of instructions for restoring values to objects\n */\nfunction nestedRestore (instructions) {\n  for (let i = 0; i < instructions.length; i++) {\n    const { target, path, value } = instructions[i]\n    let current = target\n    for (let i = path.length - 1; i > 0; i--) {\n      current = current[path[i]]\n    }\n    current[path[0]] = value\n  }\n}\n\nfunction nestedRedact (store, o, path, ns, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null) return\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    specialSet(store, target, key, path, ns, censor, isCensorFct, censorFctTakesPath)\n  }\n  return store\n}\n\nfunction has (obj, prop) {\n  return obj !== undefined && obj !== null\n    ? ('hasOwn' in Object ? Object.hasOwn(obj, prop) : Object.prototype.hasOwnProperty.call(obj, prop))\n    : false\n}\n\nfunction specialSet (store, o, k, path, afterPath, censor, isCensorFct, censorFctTakesPath) {\n  const afterPathLen = afterPath.length\n  const lastPathIndex = afterPathLen - 1\n  const originalKey = k\n  var i = -1\n  var n\n  var nv\n  var ov\n  var oov = null\n  var wc = null\n  var kIsWc\n  var wcov\n  var consecutive = false\n  var level = 0\n  // need to track depth of the `redactPath` tree\n  var depth = 0\n  var redactPathCurrent = tree()\n  ov = n = o[k]\n  if (typeof n !== 'object') return\n  while (n != null && ++i < afterPathLen) {\n    depth += 1\n    k = afterPath[i]\n    oov = ov\n    if (k !== '*' && !wc && !(typeof n === 'object' && k in n)) {\n      break\n    }\n    if (k === '*') {\n      if (wc === '*') {\n        consecutive = true\n      }\n      wc = k\n      if (i !== lastPathIndex) {\n        continue\n      }\n    }\n    if (wc) {\n      const wcKeys = Object.keys(n)\n      for (var j = 0; j < wcKeys.length; j++) {\n        const wck = wcKeys[j]\n        wcov = n[wck]\n        kIsWc = k === '*'\n        if (consecutive) {\n          redactPathCurrent = node(redactPathCurrent, wck, depth)\n          level = i\n          ov = iterateNthLevel(wcov, level - 1, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, o[originalKey], depth + 1)\n        } else {\n          if (kIsWc || (typeof wcov === 'object' && wcov !== null && k in wcov)) {\n            if (kIsWc) {\n              ov = wcov\n            } else {\n              ov = wcov[k]\n            }\n            nv = (i !== lastPathIndex)\n              ? ov\n              : (isCensorFct\n                ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n                : censor)\n            if (kIsWc) {\n              const rv = restoreInstr(node(redactPathCurrent, wck, depth), ov, o[originalKey])\n              store.push(rv)\n              n[wck] = nv\n            } else {\n              if (wcov[k] === nv) {\n                // pass\n              } else if ((nv === undefined && censor !== undefined) || (has(wcov, k) && nv === ov)) {\n                redactPathCurrent = node(redactPathCurrent, wck, depth)\n              } else {\n                redactPathCurrent = node(redactPathCurrent, wck, depth)\n                const rv = restoreInstr(node(redactPathCurrent, k, depth + 1), ov, o[originalKey])\n                store.push(rv)\n                wcov[k] = nv\n              }\n            }\n          }\n        }\n      }\n      wc = null\n    } else {\n      ov = n[k]\n      redactPathCurrent = node(redactPathCurrent, k, depth)\n      nv = (i !== lastPathIndex)\n        ? ov\n        : (isCensorFct\n          ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n          : censor)\n      if ((has(n, k) && nv === ov) || (nv === undefined && censor !== undefined)) {\n        // pass\n      } else {\n        const rv = restoreInstr(redactPathCurrent, ov, o[originalKey])\n        store.push(rv)\n        n[k] = nv\n      }\n      n = n[k]\n    }\n    if (typeof n !== 'object') break\n    // prevent circular structure, see https://github.com/pinojs/pino/issues/1513\n    if (ov === oov || typeof ov === 'undefined') {\n      // pass\n    }\n  }\n}\n\nfunction get (o, p) {\n  var i = -1\n  var l = p.length\n  var n = o\n  while (n != null && ++i < l) {\n    n = n[p[i]]\n  }\n  return n\n}\n\nfunction iterateNthLevel (wcov, level, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, parent, depth) {\n  if (level === 0) {\n    if (kIsWc || (typeof wcov === 'object' && wcov !== null && k in wcov)) {\n      if (kIsWc) {\n        ov = wcov\n      } else {\n        ov = wcov[k]\n      }\n      nv = (i !== lastPathIndex)\n        ? ov\n        : (isCensorFct\n          ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n          : censor)\n      if (kIsWc) {\n        const rv = restoreInstr(redactPathCurrent, ov, parent)\n        store.push(rv)\n        n[wck] = nv\n      } else {\n        if (wcov[k] === nv) {\n          // pass\n        } else if ((nv === undefined && censor !== undefined) || (has(wcov, k) && nv === ov)) {\n          // pass\n        } else {\n          const rv = restoreInstr(node(redactPathCurrent, k, depth + 1), ov, parent)\n          store.push(rv)\n          wcov[k] = nv\n        }\n      }\n    }\n  }\n  for (const key in wcov) {\n    if (typeof wcov[key] === 'object') {\n      redactPathCurrent = node(redactPathCurrent, key, depth)\n      iterateNthLevel(wcov[key], level - 1, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, parent, depth + 1)\n    }\n  }\n}\n\n/**\n * @typedef {object} TreeNode\n * @prop {TreeNode} [parent] reference to the parent of this node in the tree, or `null` if there is no parent\n * @prop {string} key the key that this node represents (key here being part of the path being redacted\n * @prop {TreeNode[]} children the child nodes of this node\n * @prop {number} depth the depth of this node in the tree\n */\n\n/**\n * instantiate a new, empty tree\n * @returns {TreeNode}\n */\nfunction tree () {\n  return { parent: null, key: null, children: [], depth: 0 }\n}\n\n/**\n * creates a new node in the tree, attaching it as a child of the provided parent node\n * if the specified depth matches the parent depth, adds the new node as a _sibling_ of the parent instead\n  * @param {TreeNode} parent the parent node to add a new node to (if the parent depth matches the provided `depth` value, will instead add as a sibling of this\n  * @param {string} key the key that the new node represents (key here being part of the path being redacted)\n  * @param {number} depth the depth of the new node in the tree - used to determing whether to add the new node as a child or sibling of the provided `parent` node\n  * @returns {TreeNode} a reference to the newly created node in the tree\n */\nfunction node (parent, key, depth) {\n  if (parent.depth === depth) {\n    return node(parent.parent, key, depth)\n  }\n\n  var child = {\n    parent,\n    key,\n    depth,\n    children: []\n  }\n\n  parent.children.push(child)\n\n  return child\n}\n\n/**\n * @typedef {object} RestoreInstruction\n * @prop {string[]} path a reverse-order path that can be used to find the correct insertion point to restore a `value` for the given `parent` object\n * @prop {*} value the value to restore\n * @prop {object} target the object to restore the `value` in\n */\n\n/**\n * create a restore instruction for the given redactPath node\n * generates a path in reverse order by walking up the redactPath tree\n * @param {TreeNode} node a tree node that should be at the bottom of the redact path (i.e. have no children) - this will be used to walk up the redact path tree to construct the path needed to restore\n * @param {*} value the value to restore\n * @param {object} target a reference to the parent object to apply the restore instruction to\n * @returns {RestoreInstruction} an instruction used to restore a nested value for a specific object\n */\nfunction restoreInstr (node, value, target) {\n  let current = node\n  const path = []\n  do {\n    path.push(current.key)\n    current = current.parent\n  } while (current.parent != null)\n\n  return { path, value, target }\n}\n","'use strict'\n\nconst { groupRestore, nestedRestore } = require('./modifiers')\n\nmodule.exports = restorer\n\nfunction restorer () {\n  return function compileRestore () {\n    if (this.restore) {\n      this.restore.state.secret = this.secret\n      return\n    }\n    const { secret, wcLen } = this\n    const paths = Object.keys(secret)\n    const resetters = resetTmpl(secret, paths)\n    const hasWildcards = wcLen > 0\n    const state = hasWildcards ? { secret, groupRestore, nestedRestore } : { secret }\n    /* eslint-disable-next-line */\n    this.restore = Function(\n      'o',\n      restoreTmpl(resetters, paths, hasWildcards)\n    ).bind(state)\n    this.restore.state = state\n  }\n}\n\n/**\n * Mutates the original object to be censored by restoring its original values\n * prior to censoring.\n *\n * @param {object} secret Compiled object describing which target fields should\n * be censored and the field states.\n * @param {string[]} paths The list of paths to censor as provided at\n * initialization time.\n *\n * @returns {string} String of JavaScript to be used by `Function()`. The\n * string compiles to the function that does the work in the description.\n */\nfunction resetTmpl (secret, paths) {\n  return paths.map((path) => {\n    const { circle, escPath, leadingBracket } = secret[path]\n    const delim = leadingBracket ? '' : '.'\n    const reset = circle\n      ? `o.${circle} = secret[${escPath}].val`\n      : `o${delim}${path} = secret[${escPath}].val`\n    const clear = `secret[${escPath}].val = undefined`\n    return `\n      if (secret[${escPath}].val !== undefined) {\n        try { ${reset} } catch (e) {}\n        ${clear}\n      }\n    `\n  }).join('')\n}\n\n/**\n * Creates the body of the restore function\n *\n * Restoration of the redacted object happens\n * backwards, in reverse order of redactions,\n * so that repeated redactions on the same object\n * property can be eventually rolled back to the\n * original value.\n *\n * This way dynamic redactions are restored first,\n * starting from the last one working backwards and\n * followed by the static ones.\n *\n * @returns {string} the body of the restore function\n */\nfunction restoreTmpl (resetters, paths, hasWildcards) {\n  const dynamicReset = hasWildcards === true ? `\n    const keys = Object.keys(secret)\n    const len = keys.length\n    for (var i = len - 1; i >= ${paths.length}; i--) {\n      const k = keys[i]\n      const o = secret[k]\n      if (o) {\n        if (o.flat === true) this.groupRestore(o)\n        else this.nestedRestore(o)\n        secret[k] = null\n      }\n    }\n  ` : ''\n\n  return `\n    const secret = this.secret\n    ${dynamicReset}\n    ${resetters}\n    return o\n  `\n}\n","'use strict'\n\nmodule.exports = state\n\nfunction state (o) {\n  const {\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  } = o\n  const builder = [{ secret, censor, compileRestore }]\n  if (serialize !== false) builder.push({ serialize })\n  if (wcLen > 0) builder.push({ groupRedact, nestedRedact, wildcards, wcLen })\n  return Object.assign(...builder)\n}\n","'use strict'\n\nconst validator = require('./lib/validator')\nconst parse = require('./lib/parse')\nconst redactor = require('./lib/redactor')\nconst restorer = require('./lib/restorer')\nconst { groupRedact, nestedRedact } = require('./lib/modifiers')\nconst state = require('./lib/state')\nconst rx = require('./lib/rx')\nconst validate = validator()\nconst noop = (o) => o\nnoop.restore = noop\n\nconst DEFAULT_CENSOR = '[REDACTED]'\nfastRedact.rx = rx\nfastRedact.validator = validator\n\nmodule.exports = fastRedact\n\nfunction fastRedact (opts = {}) {\n  const paths = Array.from(new Set(opts.paths || []))\n  const serialize = 'serialize' in opts ? (\n    opts.serialize === false ? opts.serialize\n      : (typeof opts.serialize === 'function' ? opts.serialize : JSON.stringify)\n  ) : JSON.stringify\n  const remove = opts.remove\n  if (remove === true && serialize !== JSON.stringify) {\n    throw Error('fast-redact – remove option may only be set when serializer is JSON.stringify')\n  }\n  const censor = remove === true\n    ? undefined\n    : 'censor' in opts ? opts.censor : DEFAULT_CENSOR\n\n  const isCensorFct = typeof censor === 'function'\n  const censorFctTakesPath = isCensorFct && censor.length > 1\n\n  if (paths.length === 0) return serialize || noop\n\n  validate({ paths, serialize, censor })\n\n  const { wildcards, wcLen, secret } = parse({ paths, censor })\n\n  const compileRestore = restorer()\n  const strict = 'strict' in opts ? opts.strict : true\n\n  return redactor({ secret, wcLen, serialize, strict, isCensorFct, censorFctTakesPath }, state({\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  }))\n}\n","'use strict'\n\nconst setLevelSym = Symbol('pino.setLevel')\nconst getLevelSym = Symbol('pino.getLevel')\nconst levelValSym = Symbol('pino.levelVal')\nconst levelCompSym = Symbol('pino.levelComp')\nconst useLevelLabelsSym = Symbol('pino.useLevelLabels')\nconst useOnlyCustomLevelsSym = Symbol('pino.useOnlyCustomLevels')\nconst mixinSym = Symbol('pino.mixin')\n\nconst lsCacheSym = Symbol('pino.lsCache')\nconst chindingsSym = Symbol('pino.chindings')\n\nconst asJsonSym = Symbol('pino.asJson')\nconst writeSym = Symbol('pino.write')\nconst redactFmtSym = Symbol('pino.redactFmt')\n\nconst timeSym = Symbol('pino.time')\nconst timeSliceIndexSym = Symbol('pino.timeSliceIndex')\nconst streamSym = Symbol('pino.stream')\nconst stringifySym = Symbol('pino.stringify')\nconst stringifySafeSym = Symbol('pino.stringifySafe')\nconst stringifiersSym = Symbol('pino.stringifiers')\nconst endSym = Symbol('pino.end')\nconst formatOptsSym = Symbol('pino.formatOpts')\nconst messageKeySym = Symbol('pino.messageKey')\nconst errorKeySym = Symbol('pino.errorKey')\nconst nestedKeySym = Symbol('pino.nestedKey')\nconst nestedKeyStrSym = Symbol('pino.nestedKeyStr')\nconst mixinMergeStrategySym = Symbol('pino.mixinMergeStrategy')\nconst msgPrefixSym = Symbol('pino.msgPrefix')\n\nconst wildcardFirstSym = Symbol('pino.wildcardFirst')\n\n// public symbols, no need to use the same pino\n// version for these\nconst serializersSym = Symbol.for('pino.serializers')\nconst formattersSym = Symbol.for('pino.formatters')\nconst hooksSym = Symbol.for('pino.hooks')\nconst needsMetadataGsym = Symbol.for('pino.metadata')\n\nmodule.exports = {\n  setLevelSym,\n  getLevelSym,\n  levelValSym,\n  levelCompSym,\n  useLevelLabelsSym,\n  mixinSym,\n  lsCacheSym,\n  chindingsSym,\n  asJsonSym,\n  writeSym,\n  serializersSym,\n  redactFmtSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifySafeSym,\n  stringifiersSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeySym,\n  wildcardFirstSym,\n  needsMetadataGsym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym,\n  nestedKeyStrSym,\n  mixinMergeStrategySym,\n  msgPrefixSym\n}\n","'use strict'\n\nconst fastRedact = require('fast-redact')\nconst { redactFmtSym, wildcardFirstSym } = require('./symbols')\nconst { rx, validator } = fastRedact\n\nconst validate = validator({\n  ERR_PATHS_MUST_BE_STRINGS: () => 'pino – redacted paths must be strings',\n  ERR_INVALID_PATH: (s) => `pino – redact paths array contains an invalid path (${s})`\n})\n\nconst CENSOR = '[Redacted]'\nconst strict = false // TODO should this be configurable?\n\nfunction redaction (opts, serialize) {\n  const { paths, censor } = handle(opts)\n\n  const shape = paths.reduce((o, str) => {\n    rx.lastIndex = 0\n    const first = rx.exec(str)\n    const next = rx.exec(str)\n\n    // ns is the top-level path segment, brackets + quoting removed.\n    let ns = first[1] !== undefined\n      ? first[1].replace(/^(?:\"|'|`)(.*)(?:\"|'|`)$/, '$1')\n      : first[0]\n\n    if (ns === '*') {\n      ns = wildcardFirstSym\n    }\n\n    // top level key:\n    if (next === null) {\n      o[ns] = null\n      return o\n    }\n\n    // path with at least two segments:\n    // if ns is already redacted at the top level, ignore lower level redactions\n    if (o[ns] === null) {\n      return o\n    }\n\n    const { index } = next\n    const nextPath = `${str.substr(index, str.length - 1)}`\n\n    o[ns] = o[ns] || []\n\n    // shape is a mix of paths beginning with literal values and wildcard\n    // paths [ \"a.b.c\", \"*.b.z\" ] should reduce to a shape of\n    // { \"a\": [ \"b.c\", \"b.z\" ], *: [ \"b.z\" ] }\n    // note: \"b.z\" is in both \"a\" and * arrays because \"a\" matches the wildcard.\n    // (* entry has wildcardFirstSym as key)\n    if (ns !== wildcardFirstSym && o[ns].length === 0) {\n      // first time ns's get all '*' redactions so far\n      o[ns].push(...(o[wildcardFirstSym] || []))\n    }\n\n    if (ns === wildcardFirstSym) {\n      // new * path gets added to all previously registered literal ns's.\n      Object.keys(o).forEach(function (k) {\n        if (o[k]) {\n          o[k].push(nextPath)\n        }\n      })\n    }\n\n    o[ns].push(nextPath)\n    return o\n  }, {})\n\n  // the redactor assigned to the format symbol key\n  // provides top level redaction for instances where\n  // an object is interpolated into the msg string\n  const result = {\n    [redactFmtSym]: fastRedact({ paths, censor, serialize, strict })\n  }\n\n  const topCensor = (...args) => {\n    return typeof censor === 'function' ? serialize(censor(...args)) : serialize(censor)\n  }\n\n  return [...Object.keys(shape), ...Object.getOwnPropertySymbols(shape)].reduce((o, k) => {\n    // top level key:\n    if (shape[k] === null) {\n      o[k] = (value) => topCensor(value, [k])\n    } else {\n      const wrappedCensor = typeof censor === 'function'\n        ? (value, path) => {\n            return censor(value, [k, ...path])\n          }\n        : censor\n      o[k] = fastRedact({\n        paths: shape[k],\n        censor: wrappedCensor,\n        serialize,\n        strict\n      })\n    }\n    return o\n  }, result)\n}\n\nfunction handle (opts) {\n  if (Array.isArray(opts)) {\n    opts = { paths: opts, censor: CENSOR }\n    validate(opts)\n    return opts\n  }\n  let { paths, censor = CENSOR, remove } = opts\n  if (Array.isArray(paths) === false) { throw Error('pino – redact must contain an array of strings') }\n  if (remove === true) censor = undefined\n  validate({ paths, censor })\n\n  return { paths, censor }\n}\n\nmodule.exports = redaction\n","'use strict'\n\nconst nullTime = () => ''\n\nconst epochTime = () => `,\"time\":${Date.now()}`\n\nconst unixTime = () => `,\"time\":${Math.round(Date.now() / 1000.0)}`\n\nconst isoTime = () => `,\"time\":\"${new Date(Date.now()).toISOString()}\"` // using Date.now() for testability\n\nmodule.exports = { nullTime, epochTime, unixTime, isoTime }\n","'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n","'use strict'\n\n/* global SharedArrayBuffer, Atomics */\n\nif (typeof SharedArrayBuffer !== 'undefined' && typeof Atomics !== 'undefined') {\n  const nil = new Int32Array(new SharedArrayBuffer(4))\n\n  function sleep (ms) {\n    // also filters out NaN, non-number types, including empty strings, but allows bigints\n    const valid = ms > 0 && ms < Infinity \n    if (valid === false) {\n      if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n        throw TypeError('sleep: ms must be a number')\n      }\n      throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity')\n    }\n\n    Atomics.wait(nil, 0, 0, Number(ms))\n  }\n  module.exports = sleep\n} else {\n\n  function sleep (ms) {\n    // also filters out NaN, non-number types, including empty strings, but allows bigints\n    const valid = ms > 0 && ms < Infinity \n    if (valid === false) {\n      if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n        throw TypeError('sleep: ms must be a number')\n      }\n      throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity')\n    }\n    const target = Date.now() + Number(ms)\n    while (target > Date.now()){}\n  }\n\n  module.exports = sleep\n\n}\n","'use strict'\n\nconst fs = require('fs')\nconst EventEmitter = require('events')\nconst inherits = require('util').inherits\nconst path = require('path')\nconst sleep = require('atomic-sleep')\nconst assert = require('assert')\n\nconst BUSY_WRITE_TIMEOUT = 100\nconst kEmptyBuffer = Buffer.allocUnsafe(0)\n\n// 16 KB. Don't write more than docker buffer size.\n// https://github.com/moby/moby/blob/513ec73831269947d38a644c278ce3cac36783b2/daemon/logger/copier.go#L13\nconst MAX_WRITE = 16 * 1024\n\nconst kContentModeBuffer = 'buffer'\nconst kContentModeUtf8 = 'utf8'\n\nconst [major, minor] = (process.versions.node || '0.0').split('.').map(Number)\nconst kCopyBuffer = major >= 22 && minor >= 7\n\nfunction openFile (file, sonic) {\n  sonic._opening = true\n  sonic._writing = true\n  sonic._asyncDrainScheduled = false\n\n  // NOTE: 'error' and 'ready' events emitted below only relevant when sonic.sync===false\n  // for sync mode, there is no way to add a listener that will receive these\n\n  function fileOpened (err, fd) {\n    if (err) {\n      sonic._reopening = false\n      sonic._writing = false\n      sonic._opening = false\n\n      if (sonic.sync) {\n        process.nextTick(() => {\n          if (sonic.listenerCount('error') > 0) {\n            sonic.emit('error', err)\n          }\n        })\n      } else {\n        sonic.emit('error', err)\n      }\n      return\n    }\n\n    const reopening = sonic._reopening\n\n    sonic.fd = fd\n    sonic.file = file\n    sonic._reopening = false\n    sonic._opening = false\n    sonic._writing = false\n\n    if (sonic.sync) {\n      process.nextTick(() => sonic.emit('ready'))\n    } else {\n      sonic.emit('ready')\n    }\n\n    if (sonic.destroyed) {\n      return\n    }\n\n    // start\n    if ((!sonic._writing && sonic._len > sonic.minLength) || sonic._flushPending) {\n      sonic._actualWrite()\n    } else if (reopening) {\n      process.nextTick(() => sonic.emit('drain'))\n    }\n  }\n\n  const flags = sonic.append ? 'a' : 'w'\n  const mode = sonic.mode\n\n  if (sonic.sync) {\n    try {\n      if (sonic.mkdir) fs.mkdirSync(path.dirname(file), { recursive: true })\n      const fd = fs.openSync(file, flags, mode)\n      fileOpened(null, fd)\n    } catch (err) {\n      fileOpened(err)\n      throw err\n    }\n  } else if (sonic.mkdir) {\n    fs.mkdir(path.dirname(file), { recursive: true }, (err) => {\n      if (err) return fileOpened(err)\n      fs.open(file, flags, mode, fileOpened)\n    })\n  } else {\n    fs.open(file, flags, mode, fileOpened)\n  }\n}\n\nfunction SonicBoom (opts) {\n  if (!(this instanceof SonicBoom)) {\n    return new SonicBoom(opts)\n  }\n\n  let { fd, dest, minLength, maxLength, maxWrite, periodicFlush, sync, append = true, mkdir, retryEAGAIN, fsync, contentMode, mode } = opts || {}\n\n  fd = fd || dest\n\n  this._len = 0\n  this.fd = -1\n  this._bufs = []\n  this._lens = []\n  this._writing = false\n  this._ending = false\n  this._reopening = false\n  this._asyncDrainScheduled = false\n  this._flushPending = false\n  this._hwm = Math.max(minLength || 0, 16387)\n  this.file = null\n  this.destroyed = false\n  this.minLength = minLength || 0\n  this.maxLength = maxLength || 0\n  this.maxWrite = maxWrite || MAX_WRITE\n  this._periodicFlush = periodicFlush || 0\n  this._periodicFlushTimer = undefined\n  this.sync = sync || false\n  this.writable = true\n  this._fsync = fsync || false\n  this.append = append || false\n  this.mode = mode\n  this.retryEAGAIN = retryEAGAIN || (() => true)\n  this.mkdir = mkdir || false\n\n  let fsWriteSync\n  let fsWrite\n  if (contentMode === kContentModeBuffer) {\n    this._writingBuf = kEmptyBuffer\n    this.write = writeBuffer\n    this.flush = flushBuffer\n    this.flushSync = flushBufferSync\n    this._actualWrite = actualWriteBuffer\n    fsWriteSync = () => fs.writeSync(this.fd, this._writingBuf)\n    fsWrite = () => fs.write(this.fd, this._writingBuf, this.release)\n  } else if (contentMode === undefined || contentMode === kContentModeUtf8) {\n    this._writingBuf = ''\n    this.write = write\n    this.flush = flush\n    this.flushSync = flushSync\n    this._actualWrite = actualWrite\n    fsWriteSync = () => fs.writeSync(this.fd, this._writingBuf, 'utf8')\n    fsWrite = () => fs.write(this.fd, this._writingBuf, 'utf8', this.release)\n  } else {\n    throw new Error(`SonicBoom supports \"${kContentModeUtf8}\" and \"${kContentModeBuffer}\", but passed ${contentMode}`)\n  }\n\n  if (typeof fd === 'number') {\n    this.fd = fd\n    process.nextTick(() => this.emit('ready'))\n  } else if (typeof fd === 'string') {\n    openFile(fd, this)\n  } else {\n    throw new Error('SonicBoom supports only file descriptors and files')\n  }\n  if (this.minLength >= this.maxWrite) {\n    throw new Error(`minLength should be smaller than maxWrite (${this.maxWrite})`)\n  }\n\n  this.release = (err, n) => {\n    if (err) {\n      if ((err.code === 'EAGAIN' || err.code === 'EBUSY') && this.retryEAGAIN(err, this._writingBuf.length, this._len - this._writingBuf.length)) {\n        if (this.sync) {\n          // This error code should not happen in sync mode, because it is\n          // not using the underlining operating system asynchronous functions.\n          // However it happens, and so we handle it.\n          // Ref: https://github.com/pinojs/pino/issues/783\n          try {\n            sleep(BUSY_WRITE_TIMEOUT)\n            this.release(undefined, 0)\n          } catch (err) {\n            this.release(err)\n          }\n        } else {\n          // Let's give the destination some time to process the chunk.\n          setTimeout(fsWrite, BUSY_WRITE_TIMEOUT)\n        }\n      } else {\n        this._writing = false\n\n        this.emit('error', err)\n      }\n      return\n    }\n\n    this.emit('write', n)\n    const releasedBufObj = releaseWritingBuf(this._writingBuf, this._len, n)\n    this._len = releasedBufObj.len\n    this._writingBuf = releasedBufObj.writingBuf\n\n    if (this._writingBuf.length) {\n      if (!this.sync) {\n        fsWrite()\n        return\n      }\n\n      try {\n        do {\n          const n = fsWriteSync()\n          const releasedBufObj = releaseWritingBuf(this._writingBuf, this._len, n)\n          this._len = releasedBufObj.len\n          this._writingBuf = releasedBufObj.writingBuf\n        } while (this._writingBuf.length)\n      } catch (err) {\n        this.release(err)\n        return\n      }\n    }\n\n    if (this._fsync) {\n      fs.fsyncSync(this.fd)\n    }\n\n    const len = this._len\n    if (this._reopening) {\n      this._writing = false\n      this._reopening = false\n      this.reopen()\n    } else if (len > this.minLength) {\n      this._actualWrite()\n    } else if (this._ending) {\n      if (len > 0) {\n        this._actualWrite()\n      } else {\n        this._writing = false\n        actualClose(this)\n      }\n    } else {\n      this._writing = false\n      if (this.sync) {\n        if (!this._asyncDrainScheduled) {\n          this._asyncDrainScheduled = true\n          process.nextTick(emitDrain, this)\n        }\n      } else {\n        this.emit('drain')\n      }\n    }\n  }\n\n  this.on('newListener', function (name) {\n    if (name === 'drain') {\n      this._asyncDrainScheduled = false\n    }\n  })\n\n  if (this._periodicFlush !== 0) {\n    this._periodicFlushTimer = setInterval(() => this.flush(null), this._periodicFlush)\n    this._periodicFlushTimer.unref()\n  }\n}\n\n/**\n * Release the writingBuf after fs.write n bytes data\n * @param {string | Buffer} writingBuf - currently writing buffer, usually be instance._writingBuf.\n * @param {number} len - currently buffer length, usually be instance._len.\n * @param {number} n - number of bytes fs already written\n * @returns {{writingBuf: string | Buffer, len: number}} released writingBuf and length\n */\nfunction releaseWritingBuf (writingBuf, len, n) {\n  // if Buffer.byteLength is equal to n, that means writingBuf contains no multi-byte character\n  if (typeof writingBuf === 'string' && Buffer.byteLength(writingBuf) !== n) {\n    // Since the fs.write callback parameter `n` means how many bytes the passed of string\n    // We calculate the original string length for avoiding the multi-byte character issue\n    n = Buffer.from(writingBuf).subarray(0, n).toString().length\n  }\n  len = Math.max(len - n, 0)\n  writingBuf = writingBuf.slice(n)\n  return { writingBuf, len }\n}\n\nfunction emitDrain (sonic) {\n  const hasListeners = sonic.listenerCount('drain') > 0\n  if (!hasListeners) return\n  sonic._asyncDrainScheduled = false\n  sonic.emit('drain')\n}\n\ninherits(SonicBoom, EventEmitter)\n\nfunction mergeBuf (bufs, len) {\n  if (bufs.length === 0) {\n    return kEmptyBuffer\n  }\n\n  if (bufs.length === 1) {\n    return bufs[0]\n  }\n\n  return Buffer.concat(bufs, len)\n}\n\nfunction write (data) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  const len = this._len + data.length\n  const bufs = this._bufs\n\n  if (this.maxLength && len > this.maxLength) {\n    this.emit('drop', data)\n    return this._len < this._hwm\n  }\n\n  if (\n    bufs.length === 0 ||\n    bufs[bufs.length - 1].length + data.length > this.maxWrite\n  ) {\n    bufs.push('' + data)\n  } else {\n    bufs[bufs.length - 1] += data\n  }\n\n  this._len = len\n\n  if (!this._writing && this._len >= this.minLength) {\n    this._actualWrite()\n  }\n\n  return this._len < this._hwm\n}\n\nfunction writeBuffer (data) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  const len = this._len + data.length\n  const bufs = this._bufs\n  const lens = this._lens\n\n  if (this.maxLength && len > this.maxLength) {\n    this.emit('drop', data)\n    return this._len < this._hwm\n  }\n\n  if (\n    bufs.length === 0 ||\n    lens[lens.length - 1] + data.length > this.maxWrite\n  ) {\n    bufs.push([data])\n    lens.push(data.length)\n  } else {\n    bufs[bufs.length - 1].push(data)\n    lens[lens.length - 1] += data.length\n  }\n\n  this._len = len\n\n  if (!this._writing && this._len >= this.minLength) {\n    this._actualWrite()\n  }\n\n  return this._len < this._hwm\n}\n\nfunction callFlushCallbackOnDrain (cb) {\n  this._flushPending = true\n  const onDrain = () => {\n    // only if _fsync is false to avoid double fsync\n    if (!this._fsync) {\n      try {\n        fs.fsync(this.fd, (err) => {\n          this._flushPending = false\n          cb(err)\n        })\n      } catch (err) {\n        cb(err)\n      }\n    } else {\n      this._flushPending = false\n      cb()\n    }\n    this.off('error', onError)\n  }\n  const onError = (err) => {\n    this._flushPending = false\n    cb(err)\n    this.off('drain', onDrain)\n  }\n\n  this.once('drain', onDrain)\n  this.once('error', onError)\n}\n\nfunction flush (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw new Error('flush cb must be a function')\n  }\n\n  if (this.destroyed) {\n    const error = new Error('SonicBoom destroyed')\n    if (cb) {\n      cb(error)\n      return\n    }\n\n    throw error\n  }\n\n  if (this.minLength <= 0) {\n    cb?.()\n    return\n  }\n\n  if (cb) {\n    callFlushCallbackOnDrain.call(this, cb)\n  }\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._bufs.length === 0) {\n    this._bufs.push('')\n  }\n\n  this._actualWrite()\n}\n\nfunction flushBuffer (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw new Error('flush cb must be a function')\n  }\n\n  if (this.destroyed) {\n    const error = new Error('SonicBoom destroyed')\n    if (cb) {\n      cb(error)\n      return\n    }\n\n    throw error\n  }\n\n  if (this.minLength <= 0) {\n    cb?.()\n    return\n  }\n\n  if (cb) {\n    callFlushCallbackOnDrain.call(this, cb)\n  }\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._bufs.length === 0) {\n    this._bufs.push([])\n    this._lens.push(0)\n  }\n\n  this._actualWrite()\n}\n\nSonicBoom.prototype.reopen = function (file) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.reopen(file)\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  if (!this.file) {\n    throw new Error('Unable to reopen a file descriptor, you must pass a file to SonicBoom')\n  }\n\n  if (file) {\n    this.file = file\n  }\n  this._reopening = true\n\n  if (this._writing) {\n    return\n  }\n\n  const fd = this.fd\n  this.once('ready', () => {\n    if (fd !== this.fd) {\n      fs.close(fd, (err) => {\n        if (err) {\n          return this.emit('error', err)\n        }\n      })\n    }\n  })\n\n  openFile(this.file, this)\n}\n\nSonicBoom.prototype.end = function () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.end()\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  this._ending = true\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._len > 0 && this.fd >= 0) {\n    this._actualWrite()\n  } else {\n    actualClose(this)\n  }\n}\n\nfunction flushSync () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this.fd < 0) {\n    throw new Error('sonic boom is not ready yet')\n  }\n\n  if (!this._writing && this._writingBuf.length > 0) {\n    this._bufs.unshift(this._writingBuf)\n    this._writingBuf = ''\n  }\n\n  let buf = ''\n  while (this._bufs.length || buf) {\n    if (buf.length <= 0) {\n      buf = this._bufs[0]\n    }\n    try {\n      const n = fs.writeSync(this.fd, buf, 'utf8')\n      const releasedBufObj = releaseWritingBuf(buf, this._len, n)\n      buf = releasedBufObj.writingBuf\n      this._len = releasedBufObj.len\n      if (buf.length <= 0) {\n        this._bufs.shift()\n      }\n    } catch (err) {\n      const shouldRetry = err.code === 'EAGAIN' || err.code === 'EBUSY'\n      if (shouldRetry && !this.retryEAGAIN(err, buf.length, this._len - buf.length)) {\n        throw err\n      }\n\n      sleep(BUSY_WRITE_TIMEOUT)\n    }\n  }\n\n  try {\n    fs.fsyncSync(this.fd)\n  } catch {\n    // Skip the error. The fd might not support fsync.\n  }\n}\n\nfunction flushBufferSync () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this.fd < 0) {\n    throw new Error('sonic boom is not ready yet')\n  }\n\n  if (!this._writing && this._writingBuf.length > 0) {\n    this._bufs.unshift([this._writingBuf])\n    this._writingBuf = kEmptyBuffer\n  }\n\n  let buf = kEmptyBuffer\n  while (this._bufs.length || buf.length) {\n    if (buf.length <= 0) {\n      buf = mergeBuf(this._bufs[0], this._lens[0])\n    }\n    try {\n      const n = fs.writeSync(this.fd, buf)\n      buf = buf.subarray(n)\n      this._len = Math.max(this._len - n, 0)\n      if (buf.length <= 0) {\n        this._bufs.shift()\n        this._lens.shift()\n      }\n    } catch (err) {\n      const shouldRetry = err.code === 'EAGAIN' || err.code === 'EBUSY'\n      if (shouldRetry && !this.retryEAGAIN(err, buf.length, this._len - buf.length)) {\n        throw err\n      }\n\n      sleep(BUSY_WRITE_TIMEOUT)\n    }\n  }\n}\n\nSonicBoom.prototype.destroy = function () {\n  if (this.destroyed) {\n    return\n  }\n  actualClose(this)\n}\n\nfunction actualWrite () {\n  const release = this.release\n  this._writing = true\n  this._writingBuf = this._writingBuf || this._bufs.shift() || ''\n\n  if (this.sync) {\n    try {\n      const written = fs.writeSync(this.fd, this._writingBuf, 'utf8')\n      release(null, written)\n    } catch (err) {\n      release(err)\n    }\n  } else {\n    fs.write(this.fd, this._writingBuf, 'utf8', release)\n  }\n}\n\nfunction actualWriteBuffer () {\n  const release = this.release\n  this._writing = true\n  this._writingBuf = this._writingBuf.length ? this._writingBuf : mergeBuf(this._bufs.shift(), this._lens.shift())\n\n  if (this.sync) {\n    try {\n      const written = fs.writeSync(this.fd, this._writingBuf)\n      release(null, written)\n    } catch (err) {\n      release(err)\n    }\n  } else {\n    // fs.write will need to copy string to buffer anyway so\n    // we do it here to avoid the overhead of calculating the buffer size\n    // in releaseWritingBuf.\n    if (kCopyBuffer) {\n      this._writingBuf = Buffer.from(this._writingBuf)\n    }\n    fs.write(this.fd, this._writingBuf, release)\n  }\n}\n\nfunction actualClose (sonic) {\n  if (sonic.fd === -1) {\n    sonic.once('ready', actualClose.bind(null, sonic))\n    return\n  }\n\n  if (sonic._periodicFlushTimer !== undefined) {\n    clearInterval(sonic._periodicFlushTimer)\n  }\n\n  sonic.destroyed = true\n  sonic._bufs = []\n  sonic._lens = []\n\n  assert(typeof sonic.fd === 'number', `sonic.fd must be a number, got ${typeof sonic.fd}`)\n  try {\n    fs.fsync(sonic.fd, closeWrapped)\n  } catch {\n  }\n\n  function closeWrapped () {\n    // We skip errors in fsync\n\n    if (sonic.fd !== 1 && sonic.fd !== 2) {\n      fs.close(sonic.fd, done)\n    } else {\n      done()\n    }\n  }\n\n  function done (err) {\n    if (err) {\n      sonic.emit('error', err)\n      return\n    }\n\n    if (sonic._ending && !sonic._writing) {\n      sonic.emit('finish')\n    }\n    sonic.emit('close')\n  }\n}\n\n/**\n * These export configurations enable JS and TS developers\n * to consumer SonicBoom in whatever way best suits their needs.\n * Some examples of supported import syntax includes:\n * - `const SonicBoom = require('SonicBoom')`\n * - `const { SonicBoom } = require('SonicBoom')`\n * - `import * as SonicBoom from 'SonicBoom'`\n * - `import { SonicBoom } from 'SonicBoom'`\n * - `import SonicBoom from 'SonicBoom'`\n */\nSonicBoom.SonicBoom = SonicBoom\nSonicBoom.default = SonicBoom\nmodule.exports = SonicBoom\n","'use strict'\n\nconst refs = {\n  exit: [],\n  beforeExit: []\n}\nconst functions = {\n  exit: onExit,\n  beforeExit: onBeforeExit\n}\n\nlet registry\n\nfunction ensureRegistry () {\n  if (registry === undefined) {\n    registry = new FinalizationRegistry(clear)\n  }\n}\n\nfunction install (event) {\n  if (refs[event].length > 0) {\n    return\n  }\n\n  process.on(event, functions[event])\n}\n\nfunction uninstall (event) {\n  if (refs[event].length > 0) {\n    return\n  }\n  process.removeListener(event, functions[event])\n  if (refs.exit.length === 0 && refs.beforeExit.length === 0) {\n    registry = undefined\n  }\n}\n\nfunction onExit () {\n  callRefs('exit')\n}\n\nfunction onBeforeExit () {\n  callRefs('beforeExit')\n}\n\nfunction callRefs (event) {\n  for (const ref of refs[event]) {\n    const obj = ref.deref()\n    const fn = ref.fn\n\n    // This should always happen, however GC is\n    // undeterministic so it might not happen.\n    /* istanbul ignore else */\n    if (obj !== undefined) {\n      fn(obj, event)\n    }\n  }\n  refs[event] = []\n}\n\nfunction clear (ref) {\n  for (const event of ['exit', 'beforeExit']) {\n    const index = refs[event].indexOf(ref)\n    refs[event].splice(index, index + 1)\n    uninstall(event)\n  }\n}\n\nfunction _register (event, obj, fn) {\n  if (obj === undefined) {\n    throw new Error('the object can\\'t be undefined')\n  }\n  install(event)\n  const ref = new WeakRef(obj)\n  ref.fn = fn\n\n  ensureRegistry()\n  registry.register(obj, ref)\n  refs[event].push(ref)\n}\n\nfunction register (obj, fn) {\n  _register('exit', obj, fn)\n}\n\nfunction registerBeforeExit (obj, fn) {\n  _register('beforeExit', obj, fn)\n}\n\nfunction unregister (obj) {\n  if (registry === undefined) {\n    return\n  }\n  registry.unregister(obj)\n  for (const event of ['exit', 'beforeExit']) {\n    refs[event] = refs[event].filter((ref) => {\n      const _obj = ref.deref()\n      return _obj && _obj !== obj\n    })\n    uninstall(event)\n  }\n}\n\nmodule.exports = {\n  register,\n  registerBeforeExit,\n  unregister\n}\n","{\n  \"name\": \"thread-stream\",\n  \"version\": \"3.1.0\",\n  \"description\": \"A streaming way to send data to a Node.js Worker Thread\",\n  \"main\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"dependencies\": {\n    \"real-require\": \"^0.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20.1.0\",\n    \"@types/tap\": \"^15.0.0\",\n    \"@yao-pkg/pkg\": \"^5.11.5\",\n    \"desm\": \"^1.3.0\",\n    \"fastbench\": \"^1.0.1\",\n    \"husky\": \"^9.0.6\",\n    \"pino-elasticsearch\": \"^8.0.0\",\n    \"sonic-boom\": \"^4.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"tap\": \"^16.2.0\",\n    \"ts-node\": \"^10.8.0\",\n    \"typescript\": \"^5.3.2\",\n    \"why-is-node-running\": \"^2.2.2\"\n  },\n  \"scripts\": {\n    \"build\": \"tsc --noEmit\",\n    \"test\": \"standard && npm run build && npm run transpile && tap \\\"test/**/*.test.*js\\\" && tap --ts test/*.test.*ts\",\n    \"test:ci\": \"standard && npm run transpile && npm run test:ci:js && npm run test:ci:ts\",\n    \"test:ci:js\": \"tap --no-check-coverage --timeout=120 --coverage-report=lcovonly \\\"test/**/*.test.*js\\\"\",\n    \"test:ci:ts\": \"tap --ts --no-check-coverage --coverage-report=lcovonly \\\"test/**/*.test.*ts\\\"\",\n    \"test:yarn\": \"npm run transpile && tap \\\"test/**/*.test.js\\\" --no-check-coverage\",\n    \"transpile\": \"sh ./test/ts/transpile.sh\",\n    \"prepare\": \"husky install\"\n  },\n  \"standard\": {\n    \"ignore\": [\n      \"test/ts/**/*\",\n      \"test/syntax-error.mjs\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/mcollina/thread-stream.git\"\n  },\n  \"keywords\": [\n    \"worker\",\n    \"thread\",\n    \"threads\",\n    \"stream\"\n  ],\n  \"author\": \"Matteo Collina <hello@matteocollina.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mcollina/thread-stream/issues\"\n  },\n  \"homepage\": \"https://github.com/mcollina/thread-stream#readme\"\n}\n","'use strict'\n\nconst MAX_TIMEOUT = 1000\n\nfunction wait (state, index, expected, timeout, done) {\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current === expected) {\n    done(null, 'ok')\n    return\n  }\n  let prior = current\n  const check = (backoff) => {\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        prior = current\n        current = Atomics.load(state, index)\n        if (current === prior) {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        } else {\n          if (current === expected) done(null, 'ok')\n          else done(null, 'not-equal')\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\n// let waitDiffCount = 0\nfunction waitDiff (state, index, expected, timeout, done) {\n  // const id = waitDiffCount++\n  // process._rawDebug(`>>> waitDiff ${id}`)\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current !== expected) {\n    done(null, 'ok')\n    return\n  }\n  const check = (backoff) => {\n    // process._rawDebug(`${id} ${index} current ${current} expected ${expected}`)\n    // process._rawDebug('' + backoff)\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        current = Atomics.load(state, index)\n        if (current !== expected) {\n          done(null, 'ok')\n        } else {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\nmodule.exports = { wait, waitDiff }\n","'use strict'\n\nconst WRITE_INDEX = 4\nconst READ_INDEX = 8\n\nmodule.exports = {\n  WRITE_INDEX,\n  READ_INDEX\n}\n","'use strict'\n\nconst { version } = require('./package.json')\nconst { EventEmitter } = require('events')\nconst { Worker } = require('worker_threads')\nconst { join } = require('path')\nconst { pathToFileURL } = require('url')\nconst { wait } = require('./lib/wait')\nconst {\n  WRITE_INDEX,\n  READ_INDEX\n} = require('./lib/indexes')\nconst buffer = require('buffer')\nconst assert = require('assert')\n\nconst kImpl = Symbol('kImpl')\n\n// V8 limit for string size\nconst MAX_STRING = buffer.constants.MAX_STRING_LENGTH\n\nclass FakeWeakRef {\n  constructor (value) {\n    this._value = value\n  }\n\n  deref () {\n    return this._value\n  }\n}\n\nclass FakeFinalizationRegistry {\n  register () {}\n\n  unregister () {}\n}\n\n// Currently using FinalizationRegistry with code coverage breaks the world\n// Ref: https://github.com/nodejs/node/issues/49344\nconst FinalizationRegistry = process.env.NODE_V8_COVERAGE ? FakeFinalizationRegistry : global.FinalizationRegistry || FakeFinalizationRegistry\nconst WeakRef = process.env.NODE_V8_COVERAGE ? FakeWeakRef : global.WeakRef || FakeWeakRef\n\nconst registry = new FinalizationRegistry((worker) => {\n  if (worker.exited) {\n    return\n  }\n  worker.terminate()\n})\n\nfunction createWorker (stream, opts) {\n  const { filename, workerData } = opts\n\n  const bundlerOverrides = '__bundlerPathsOverrides' in globalThis ? globalThis.__bundlerPathsOverrides : {}\n  const toExecute = bundlerOverrides['thread-stream-worker'] || join(__dirname, 'lib', 'worker.js')\n\n  const worker = new Worker(toExecute, {\n    ...opts.workerOpts,\n    trackUnmanagedFds: false,\n    workerData: {\n      filename: filename.indexOf('file://') === 0\n        ? filename\n        : pathToFileURL(filename).href,\n      dataBuf: stream[kImpl].dataBuf,\n      stateBuf: stream[kImpl].stateBuf,\n      workerData: {\n        $context: {\n          threadStreamVersion: version\n        },\n        ...workerData\n      }\n    }\n  })\n\n  // We keep a strong reference for now,\n  // we need to start writing first\n  worker.stream = new FakeWeakRef(stream)\n\n  worker.on('message', onWorkerMessage)\n  worker.on('exit', onWorkerExit)\n  registry.register(stream, worker)\n\n  return worker\n}\n\nfunction drain (stream) {\n  assert(!stream[kImpl].sync)\n  if (stream[kImpl].needDrain) {\n    stream[kImpl].needDrain = false\n    stream.emit('drain')\n  }\n}\n\nfunction nextFlush (stream) {\n  const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n  let leftover = stream[kImpl].data.length - writeIndex\n\n  if (leftover > 0) {\n    if (stream[kImpl].buf.length === 0) {\n      stream[kImpl].flushing = false\n\n      if (stream[kImpl].ending) {\n        end(stream)\n      } else if (stream[kImpl].needDrain) {\n        process.nextTick(drain, stream)\n      }\n\n      return\n    }\n\n    let toWrite = stream[kImpl].buf.slice(0, leftover)\n    let toWriteBytes = Buffer.byteLength(toWrite)\n    if (toWriteBytes <= leftover) {\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      // process._rawDebug('writing ' + toWrite.length)\n      write(stream, toWrite, nextFlush.bind(null, stream))\n    } else {\n      // multi-byte utf-8\n      stream.flush(() => {\n        // err is already handled in flush()\n        if (stream.destroyed) {\n          return\n        }\n\n        Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n        Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n\n        // Find a toWrite length that fits the buffer\n        // it must exists as the buffer is at least 4 bytes length\n        // and the max utf-8 length for a char is 4 bytes.\n        while (toWriteBytes > stream[kImpl].data.length) {\n          leftover = leftover / 2\n          toWrite = stream[kImpl].buf.slice(0, leftover)\n          toWriteBytes = Buffer.byteLength(toWrite)\n        }\n        stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n        write(stream, toWrite, nextFlush.bind(null, stream))\n      })\n    }\n  } else if (leftover === 0) {\n    if (writeIndex === 0 && stream[kImpl].buf.length === 0) {\n      // we had a flushSync in the meanwhile\n      return\n    }\n    stream.flush(() => {\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n      nextFlush(stream)\n    })\n  } else {\n    // This should never happen\n    destroy(stream, new Error('overwritten'))\n  }\n}\n\nfunction onWorkerMessage (msg) {\n  const stream = this.stream.deref()\n  if (stream === undefined) {\n    this.exited = true\n    // Terminate the worker.\n    this.terminate()\n    return\n  }\n\n  switch (msg.code) {\n    case 'READY':\n      // Replace the FakeWeakRef with a\n      // proper one.\n      this.stream = new WeakRef(stream)\n\n      stream.flush(() => {\n        stream[kImpl].ready = true\n        stream.emit('ready')\n      })\n      break\n    case 'ERROR':\n      destroy(stream, msg.err)\n      break\n    case 'EVENT':\n      if (Array.isArray(msg.args)) {\n        stream.emit(msg.name, ...msg.args)\n      } else {\n        stream.emit(msg.name, msg.args)\n      }\n      break\n    case 'WARNING':\n      process.emitWarning(msg.err)\n      break\n    default:\n      destroy(stream, new Error('this should not happen: ' + msg.code))\n  }\n}\n\nfunction onWorkerExit (code) {\n  const stream = this.stream.deref()\n  if (stream === undefined) {\n    // Nothing to do, the worker already exit\n    return\n  }\n  registry.unregister(stream)\n  stream.worker.exited = true\n  stream.worker.off('exit', onWorkerExit)\n  destroy(stream, code !== 0 ? new Error('the worker thread exited') : null)\n}\n\nclass ThreadStream extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    if (opts.bufferSize < 4) {\n      throw new Error('bufferSize must at least fit a 4-byte utf-8 char')\n    }\n\n    this[kImpl] = {}\n    this[kImpl].stateBuf = new SharedArrayBuffer(128)\n    this[kImpl].state = new Int32Array(this[kImpl].stateBuf)\n    this[kImpl].dataBuf = new SharedArrayBuffer(opts.bufferSize || 4 * 1024 * 1024)\n    this[kImpl].data = Buffer.from(this[kImpl].dataBuf)\n    this[kImpl].sync = opts.sync || false\n    this[kImpl].ending = false\n    this[kImpl].ended = false\n    this[kImpl].needDrain = false\n    this[kImpl].destroyed = false\n    this[kImpl].flushing = false\n    this[kImpl].ready = false\n    this[kImpl].finished = false\n    this[kImpl].errored = null\n    this[kImpl].closed = false\n    this[kImpl].buf = ''\n\n    // TODO (fix): Make private?\n    this.worker = createWorker(this, opts) // TODO (fix): make private\n    this.on('message', (message, transferList) => {\n      this.worker.postMessage(message, transferList)\n    })\n  }\n\n  write (data) {\n    if (this[kImpl].destroyed) {\n      error(this, new Error('the worker has exited'))\n      return false\n    }\n\n    if (this[kImpl].ending) {\n      error(this, new Error('the worker is ending'))\n      return false\n    }\n\n    if (this[kImpl].flushing && this[kImpl].buf.length + data.length >= MAX_STRING) {\n      try {\n        writeSync(this)\n        this[kImpl].flushing = true\n      } catch (err) {\n        destroy(this, err)\n        return false\n      }\n    }\n\n    this[kImpl].buf += data\n\n    if (this[kImpl].sync) {\n      try {\n        writeSync(this)\n        return true\n      } catch (err) {\n        destroy(this, err)\n        return false\n      }\n    }\n\n    if (!this[kImpl].flushing) {\n      this[kImpl].flushing = true\n      setImmediate(nextFlush, this)\n    }\n\n    this[kImpl].needDrain = this[kImpl].data.length - this[kImpl].buf.length - Atomics.load(this[kImpl].state, WRITE_INDEX) <= 0\n    return !this[kImpl].needDrain\n  }\n\n  end () {\n    if (this[kImpl].destroyed) {\n      return\n    }\n\n    this[kImpl].ending = true\n    end(this)\n  }\n\n  flush (cb) {\n    if (this[kImpl].destroyed) {\n      if (typeof cb === 'function') {\n        process.nextTick(cb, new Error('the worker has exited'))\n      }\n      return\n    }\n\n    // TODO write all .buf\n    const writeIndex = Atomics.load(this[kImpl].state, WRITE_INDEX)\n    // process._rawDebug(`(flush) readIndex (${Atomics.load(this.state, READ_INDEX)}) writeIndex (${Atomics.load(this.state, WRITE_INDEX)})`)\n    wait(this[kImpl].state, READ_INDEX, writeIndex, Infinity, (err, res) => {\n      if (err) {\n        destroy(this, err)\n        process.nextTick(cb, err)\n        return\n      }\n      if (res === 'not-equal') {\n        // TODO handle deadlock\n        this.flush(cb)\n        return\n      }\n      process.nextTick(cb)\n    })\n  }\n\n  flushSync () {\n    if (this[kImpl].destroyed) {\n      return\n    }\n\n    writeSync(this)\n    flushSync(this)\n  }\n\n  unref () {\n    this.worker.unref()\n  }\n\n  ref () {\n    this.worker.ref()\n  }\n\n  get ready () {\n    return this[kImpl].ready\n  }\n\n  get destroyed () {\n    return this[kImpl].destroyed\n  }\n\n  get closed () {\n    return this[kImpl].closed\n  }\n\n  get writable () {\n    return !this[kImpl].destroyed && !this[kImpl].ending\n  }\n\n  get writableEnded () {\n    return this[kImpl].ending\n  }\n\n  get writableFinished () {\n    return this[kImpl].finished\n  }\n\n  get writableNeedDrain () {\n    return this[kImpl].needDrain\n  }\n\n  get writableObjectMode () {\n    return false\n  }\n\n  get writableErrored () {\n    return this[kImpl].errored\n  }\n}\n\nfunction error (stream, err) {\n  setImmediate(() => {\n    stream.emit('error', err)\n  })\n}\n\nfunction destroy (stream, err) {\n  if (stream[kImpl].destroyed) {\n    return\n  }\n  stream[kImpl].destroyed = true\n\n  if (err) {\n    stream[kImpl].errored = err\n    error(stream, err)\n  }\n\n  if (!stream.worker.exited) {\n    stream.worker.terminate()\n      .catch(() => {})\n      .then(() => {\n        stream[kImpl].closed = true\n        stream.emit('close')\n      })\n  } else {\n    setImmediate(() => {\n      stream[kImpl].closed = true\n      stream.emit('close')\n    })\n  }\n}\n\nfunction write (stream, data, cb) {\n  // data is smaller than the shared buffer length\n  const current = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n  const length = Buffer.byteLength(data)\n  stream[kImpl].data.write(data, current)\n  Atomics.store(stream[kImpl].state, WRITE_INDEX, current + length)\n  Atomics.notify(stream[kImpl].state, WRITE_INDEX)\n  cb()\n  return true\n}\n\nfunction end (stream) {\n  if (stream[kImpl].ended || !stream[kImpl].ending || stream[kImpl].flushing) {\n    return\n  }\n  stream[kImpl].ended = true\n\n  try {\n    stream.flushSync()\n\n    let readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n    // process._rawDebug('writing index')\n    Atomics.store(stream[kImpl].state, WRITE_INDEX, -1)\n    // process._rawDebug(`(end) readIndex (${Atomics.load(stream.state, READ_INDEX)}) writeIndex (${Atomics.load(stream.state, WRITE_INDEX)})`)\n    Atomics.notify(stream[kImpl].state, WRITE_INDEX)\n\n    // Wait for the process to complete\n    let spins = 0\n    while (readIndex !== -1) {\n      // process._rawDebug(`read = ${read}`)\n      Atomics.wait(stream[kImpl].state, READ_INDEX, readIndex, 1000)\n      readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n      if (readIndex === -2) {\n        destroy(stream, new Error('end() failed'))\n        return\n      }\n\n      if (++spins === 10) {\n        destroy(stream, new Error('end() took too long (10s)'))\n        return\n      }\n    }\n\n    process.nextTick(() => {\n      stream[kImpl].finished = true\n      stream.emit('finish')\n    })\n  } catch (err) {\n    destroy(stream, err)\n  }\n  // process._rawDebug('end finished...')\n}\n\nfunction writeSync (stream) {\n  const cb = () => {\n    if (stream[kImpl].ending) {\n      end(stream)\n    } else if (stream[kImpl].needDrain) {\n      process.nextTick(drain, stream)\n    }\n  }\n  stream[kImpl].flushing = false\n\n  while (stream[kImpl].buf.length !== 0) {\n    const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n    let leftover = stream[kImpl].data.length - writeIndex\n    if (leftover === 0) {\n      flushSync(stream)\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n      continue\n    } else if (leftover < 0) {\n      // stream should never happen\n      throw new Error('overwritten')\n    }\n\n    let toWrite = stream[kImpl].buf.slice(0, leftover)\n    let toWriteBytes = Buffer.byteLength(toWrite)\n    if (toWriteBytes <= leftover) {\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      // process._rawDebug('writing ' + toWrite.length)\n      write(stream, toWrite, cb)\n    } else {\n      // multi-byte utf-8\n      flushSync(stream)\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n\n      // Find a toWrite length that fits the buffer\n      // it must exists as the buffer is at least 4 bytes length\n      // and the max utf-8 length for a char is 4 bytes.\n      while (toWriteBytes > stream[kImpl].buf.length) {\n        leftover = leftover / 2\n        toWrite = stream[kImpl].buf.slice(0, leftover)\n        toWriteBytes = Buffer.byteLength(toWrite)\n      }\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      write(stream, toWrite, cb)\n    }\n  }\n}\n\nfunction flushSync (stream) {\n  if (stream[kImpl].flushing) {\n    throw new Error('unable to flush while flushing')\n  }\n\n  // process._rawDebug('flushSync started')\n\n  const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n\n  let spins = 0\n\n  // TODO handle deadlock\n  while (true) {\n    const readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n    if (readIndex === -2) {\n      throw Error('_flushSync failed')\n    }\n\n    // process._rawDebug(`(flushSync) readIndex (${readIndex}) writeIndex (${writeIndex})`)\n    if (readIndex !== writeIndex) {\n      // TODO stream timeouts for some reason.\n      Atomics.wait(stream[kImpl].state, READ_INDEX, readIndex, 1000)\n    } else {\n      break\n    }\n\n    if (++spins === 10) {\n      throw new Error('_flushSync took too long (10s)')\n    }\n  }\n  // process._rawDebug('flushSync finished')\n}\n\nmodule.exports = ThreadStream\n","'use strict'\n\nconst { createRequire } = require('module')\nconst getCallers = require('./caller')\nconst { join, isAbsolute, sep } = require('node:path')\nconst sleep = require('atomic-sleep')\nconst onExit = require('on-exit-leak-free')\nconst ThreadStream = require('thread-stream')\n\nfunction setupOnExit (stream) {\n  // This is leak free, it does not leave event handlers\n  onExit.register(stream, autoEnd)\n  onExit.registerBeforeExit(stream, flush)\n\n  stream.on('close', function () {\n    onExit.unregister(stream)\n  })\n}\n\nfunction buildStream (filename, workerData, workerOpts, sync) {\n  const stream = new ThreadStream({\n    filename,\n    workerData,\n    workerOpts,\n    sync\n  })\n\n  stream.on('ready', onReady)\n  stream.on('close', function () {\n    process.removeListener('exit', onExit)\n  })\n\n  process.on('exit', onExit)\n\n  function onReady () {\n    process.removeListener('exit', onExit)\n    stream.unref()\n\n    if (workerOpts.autoEnd !== false) {\n      setupOnExit(stream)\n    }\n  }\n\n  function onExit () {\n    /* istanbul ignore next */\n    if (stream.closed) {\n      return\n    }\n    stream.flushSync()\n    // Apparently there is a very sporadic race condition\n    // that in certain OS would prevent the messages to be flushed\n    // because the thread might not have been created still.\n    // Unfortunately we need to sleep(100) in this case.\n    sleep(100)\n    stream.end()\n  }\n\n  return stream\n}\n\nfunction autoEnd (stream) {\n  stream.ref()\n  stream.flushSync()\n  stream.end()\n  stream.once('close', function () {\n    stream.unref()\n  })\n}\n\nfunction flush (stream) {\n  stream.flushSync()\n}\n\nfunction transport (fullOptions) {\n  const { pipeline, targets, levels, dedupe, worker = {}, caller = getCallers(), sync = false } = fullOptions\n\n  const options = {\n    ...fullOptions.options\n  }\n\n  // Backwards compatibility\n  const callers = typeof caller === 'string' ? [caller] : caller\n\n  // This will be eventually modified by bundlers\n  const bundlerOverrides = '__bundlerPathsOverrides' in globalThis ? globalThis.__bundlerPathsOverrides : {}\n\n  let target = fullOptions.target\n\n  if (target && targets) {\n    throw new Error('only one of target or targets can be specified')\n  }\n\n  if (targets) {\n    target = bundlerOverrides['pino-worker'] || join(__dirname, 'worker.js')\n    options.targets = targets.filter(dest => dest.target).map((dest) => {\n      return {\n        ...dest,\n        target: fixTarget(dest.target)\n      }\n    })\n    options.pipelines = targets.filter(dest => dest.pipeline).map((dest) => {\n      return dest.pipeline.map((t) => {\n        return {\n          ...t,\n          level: dest.level, // duplicate the pipeline `level` property defined in the upper level\n          target: fixTarget(t.target)\n        }\n      })\n    })\n  } else if (pipeline) {\n    target = bundlerOverrides['pino-worker'] || join(__dirname, 'worker.js')\n    options.pipelines = [pipeline.map((dest) => {\n      return {\n        ...dest,\n        target: fixTarget(dest.target)\n      }\n    })]\n  }\n\n  if (levels) {\n    options.levels = levels\n  }\n\n  if (dedupe) {\n    options.dedupe = dedupe\n  }\n\n  options.pinoWillSendConfig = true\n\n  return buildStream(fixTarget(target), options, worker, sync)\n\n  function fixTarget (origin) {\n    origin = bundlerOverrides[origin] || origin\n\n    if (isAbsolute(origin) || origin.indexOf('file://') === 0) {\n      return origin\n    }\n\n    if (origin === 'pino/file') {\n      return join(__dirname, '..', 'file.js')\n    }\n\n    let fixTarget\n\n    for (const filePath of callers) {\n      try {\n        const context = filePath === 'node:repl'\n          ? process.cwd() + sep\n          : filePath\n\n        fixTarget = createRequire(context).resolve(origin)\n        break\n      } catch (err) {\n        // Silent catch\n        continue\n      }\n    }\n\n    if (!fixTarget) {\n      throw new Error(`unable to determine transport target for \"${origin}\"`)\n    }\n\n    return fixTarget\n  }\n}\n\nmodule.exports = transport\n","'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst format = require('quick-format-unescaped')\nconst { mapHttpRequest, mapHttpResponse } = require('pino-std-serializers')\nconst SonicBoom = require('sonic-boom')\nconst onExit = require('on-exit-leak-free')\nconst {\n  lsCacheSym,\n  chindingsSym,\n  writeSym,\n  serializersSym,\n  formatOptsSym,\n  endSym,\n  stringifiersSym,\n  stringifySym,\n  stringifySafeSym,\n  wildcardFirstSym,\n  nestedKeySym,\n  formattersSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeyStrSym,\n  msgPrefixSym\n} = require('./symbols')\nconst { isMainThread } = require('worker_threads')\nconst transport = require('./transport')\n\nfunction noop () {\n}\n\nfunction genLog (level, hook) {\n  if (!hook) return LOG\n\n  return function hookWrappedLog (...args) {\n    hook.call(this, args, LOG, level)\n  }\n\n  function LOG (o, ...n) {\n    if (typeof o === 'object') {\n      let msg = o\n      if (o !== null) {\n        if (o.method && o.headers && o.socket) {\n          o = mapHttpRequest(o)\n        } else if (typeof o.setHeader === 'function') {\n          o = mapHttpResponse(o)\n        }\n      }\n      let formatParams\n      if (msg === null && n.length === 0) {\n        formatParams = [null]\n      } else {\n        msg = n.shift()\n        formatParams = n\n      }\n      // We do not use a coercive check for `msg` as it is\n      // measurably slower than the explicit checks.\n      if (typeof this[msgPrefixSym] === 'string' && msg !== undefined && msg !== null) {\n        msg = this[msgPrefixSym] + msg\n      }\n      this[writeSym](o, format(msg, formatParams, this[formatOptsSym]), level)\n    } else {\n      let msg = o === undefined ? n.shift() : o\n\n      // We do not use a coercive check for `msg` as it is\n      // measurably slower than the explicit checks.\n      if (typeof this[msgPrefixSym] === 'string' && msg !== undefined && msg !== null) {\n        msg = this[msgPrefixSym] + msg\n      }\n      this[writeSym](null, format(msg, n, this[formatOptsSym]), level)\n    }\n  }\n}\n\n// magically escape strings for json\n// relying on their charCodeAt\n// everything below 32 needs JSON.stringify()\n// 34 and 92 happens all the time, so we\n// have a fast case for them\nfunction asString (str) {\n  let result = ''\n  let last = 0\n  let found = false\n  let point = 255\n  const l = str.length\n  if (l > 100) {\n    return JSON.stringify(str)\n  }\n  for (var i = 0; i < l && point >= 32; i++) {\n    point = str.charCodeAt(i)\n    if (point === 34 || point === 92) {\n      result += str.slice(last, i) + '\\\\'\n      last = i\n      found = true\n    }\n  }\n  if (!found) {\n    result = str\n  } else {\n    result += str.slice(last)\n  }\n  return point < 32 ? JSON.stringify(str) : '\"' + result + '\"'\n}\n\nfunction asJson (obj, msg, num, time) {\n  const stringify = this[stringifySym]\n  const stringifySafe = this[stringifySafeSym]\n  const stringifiers = this[stringifiersSym]\n  const end = this[endSym]\n  const chindings = this[chindingsSym]\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const messageKey = this[messageKeySym]\n  const errorKey = this[errorKeySym]\n  let data = this[lsCacheSym][num] + time\n\n  // we need the child bindings added to the output first so instance logged\n  // objects can take precedence when JSON.parse-ing the resulting log line\n  data = data + chindings\n\n  let value\n  if (formatters.log) {\n    obj = formatters.log(obj)\n  }\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  let propStr = ''\n  for (const key in obj) {\n    value = obj[key]\n    if (Object.prototype.hasOwnProperty.call(obj, key) && value !== undefined) {\n      if (serializers[key]) {\n        value = serializers[key](value)\n      } else if (key === errorKey && serializers.err) {\n        value = serializers.err(value)\n      }\n\n      const stringifier = stringifiers[key] || wildcardStringifier\n\n      switch (typeof value) {\n        case 'undefined':\n        case 'function':\n          continue\n        case 'number':\n          /* eslint no-fallthrough: \"off\" */\n          if (Number.isFinite(value) === false) {\n            value = null\n          }\n        // this case explicitly falls through to the next one\n        case 'boolean':\n          if (stringifier) value = stringifier(value)\n          break\n        case 'string':\n          value = (stringifier || asString)(value)\n          break\n        default:\n          value = (stringifier || stringify)(value, stringifySafe)\n      }\n      if (value === undefined) continue\n      const strKey = asString(key)\n      propStr += ',' + strKey + ':' + value\n    }\n  }\n\n  let msgStr = ''\n  if (msg !== undefined) {\n    value = serializers[messageKey] ? serializers[messageKey](msg) : msg\n    const stringifier = stringifiers[messageKey] || wildcardStringifier\n\n    switch (typeof value) {\n      case 'function':\n        break\n      case 'number':\n        /* eslint no-fallthrough: \"off\" */\n        if (Number.isFinite(value) === false) {\n          value = null\n        }\n      // this case explicitly falls through to the next one\n      case 'boolean':\n        if (stringifier) value = stringifier(value)\n        msgStr = ',\"' + messageKey + '\":' + value\n        break\n      case 'string':\n        value = (stringifier || asString)(value)\n        msgStr = ',\"' + messageKey + '\":' + value\n        break\n      default:\n        value = (stringifier || stringify)(value, stringifySafe)\n        msgStr = ',\"' + messageKey + '\":' + value\n    }\n  }\n\n  if (this[nestedKeySym] && propStr) {\n    // place all the obj properties under the specified key\n    // the nested key is already formatted from the constructor\n    return data + this[nestedKeyStrSym] + propStr.slice(1) + '}' + msgStr + end\n  } else {\n    return data + propStr + msgStr + end\n  }\n}\n\nfunction asChindings (instance, bindings) {\n  let value\n  let data = instance[chindingsSym]\n  const stringify = instance[stringifySym]\n  const stringifySafe = instance[stringifySafeSym]\n  const stringifiers = instance[stringifiersSym]\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  const serializers = instance[serializersSym]\n  const formatter = instance[formattersSym].bindings\n  bindings = formatter(bindings)\n\n  for (const key in bindings) {\n    value = bindings[key]\n    const valid = key !== 'level' &&\n      key !== 'serializers' &&\n      key !== 'formatters' &&\n      key !== 'customLevels' &&\n      bindings.hasOwnProperty(key) &&\n      value !== undefined\n    if (valid === true) {\n      value = serializers[key] ? serializers[key](value) : value\n      value = (stringifiers[key] || wildcardStringifier || stringify)(value, stringifySafe)\n      if (value === undefined) continue\n      data += ',\"' + key + '\":' + value\n    }\n  }\n  return data\n}\n\nfunction hasBeenTampered (stream) {\n  return stream.write !== stream.constructor.prototype.write\n}\n\nfunction buildSafeSonicBoom (opts) {\n  const stream = new SonicBoom(opts)\n  stream.on('error', filterBrokenPipe)\n  // If we are sync: false, we must flush on exit\n  if (!opts.sync && isMainThread) {\n    onExit.register(stream, autoEnd)\n\n    stream.on('close', function () {\n      onExit.unregister(stream)\n    })\n  }\n  return stream\n\n  function filterBrokenPipe (err) {\n    // Impossible to replicate across all operating systems\n    /* istanbul ignore next */\n    if (err.code === 'EPIPE') {\n      // If we get EPIPE, we should stop logging here\n      // however we have no control to the consumer of\n      // SonicBoom, so we just overwrite the write method\n      stream.write = noop\n      stream.end = noop\n      stream.flushSync = noop\n      stream.destroy = noop\n      return\n    }\n    stream.removeListener('error', filterBrokenPipe)\n    stream.emit('error', err)\n  }\n}\n\nfunction autoEnd (stream, eventName) {\n  // This check is needed only on some platforms\n  /* istanbul ignore next */\n  if (stream.destroyed) {\n    return\n  }\n\n  if (eventName === 'beforeExit') {\n    // We still have an event loop, let's use it\n    stream.flush()\n    stream.on('drain', function () {\n      stream.end()\n    })\n  } else {\n    // For some reason istanbul is not detecting this, but it's there\n    /* istanbul ignore next */\n    // We do not have an event loop, so flush synchronously\n    stream.flushSync()\n  }\n}\n\nfunction createArgsNormalizer (defaultOptions) {\n  return function normalizeArgs (instance, caller, opts = {}, stream) {\n    // support stream as a string\n    if (typeof opts === 'string') {\n      stream = buildSafeSonicBoom({ dest: opts })\n      opts = {}\n    } else if (typeof stream === 'string') {\n      if (opts && opts.transport) {\n        throw Error('only one of option.transport or stream can be specified')\n      }\n      stream = buildSafeSonicBoom({ dest: stream })\n    } else if (opts instanceof SonicBoom || opts.writable || opts._writableState) {\n      stream = opts\n      opts = {}\n    } else if (opts.transport) {\n      if (opts.transport instanceof SonicBoom || opts.transport.writable || opts.transport._writableState) {\n        throw Error('option.transport do not allow stream, please pass to option directly. e.g. pino(transport)')\n      }\n      if (opts.transport.targets && opts.transport.targets.length && opts.formatters && typeof opts.formatters.level === 'function') {\n        throw Error('option.transport.targets do not allow custom level formatters')\n      }\n\n      let customLevels\n      if (opts.customLevels) {\n        customLevels = opts.useOnlyCustomLevels ? opts.customLevels : Object.assign({}, opts.levels, opts.customLevels)\n      }\n      stream = transport({ caller, ...opts.transport, levels: customLevels })\n    }\n    opts = Object.assign({}, defaultOptions, opts)\n    opts.serializers = Object.assign({}, defaultOptions.serializers, opts.serializers)\n    opts.formatters = Object.assign({}, defaultOptions.formatters, opts.formatters)\n\n    if (opts.prettyPrint) {\n      throw new Error('prettyPrint option is no longer supported, see the pino-pretty package (https://github.com/pinojs/pino-pretty)')\n    }\n\n    const { enabled, onChild } = opts\n    if (enabled === false) opts.level = 'silent'\n    if (!onChild) opts.onChild = noop\n    if (!stream) {\n      if (!hasBeenTampered(process.stdout)) {\n        // If process.stdout.fd is undefined, it means that we are running\n        // in a worker thread. Let's assume we are logging to file descriptor 1.\n        stream = buildSafeSonicBoom({ fd: process.stdout.fd || 1 })\n      } else {\n        stream = process.stdout\n      }\n    }\n    return { opts, stream }\n  }\n}\n\nfunction stringify (obj, stringifySafeFn) {\n  try {\n    return JSON.stringify(obj)\n  } catch (_) {\n    try {\n      const stringify = stringifySafeFn || this[stringifySafeSym]\n      return stringify(obj)\n    } catch (_) {\n      return '\"[unable to serialize, circular reference is too complex to analyze]\"'\n    }\n  }\n}\n\nfunction buildFormatters (level, bindings, log) {\n  return {\n    level,\n    bindings,\n    log\n  }\n}\n\n/**\n * Convert a string integer file descriptor to a proper native integer\n * file descriptor.\n *\n * @param {string} destination The file descriptor string to attempt to convert.\n *\n * @returns {Number}\n */\nfunction normalizeDestFileDescriptor (destination) {\n  const fd = Number(destination)\n  if (typeof destination === 'string' && Number.isFinite(fd)) {\n    return fd\n  }\n  // destination could be undefined if we are in a worker\n  if (destination === undefined) {\n    // This is stdout in UNIX systems\n    return 1\n  }\n  return destination\n}\n\nmodule.exports = {\n  noop,\n  buildSafeSonicBoom,\n  asChindings,\n  asJson,\n  genLog,\n  createArgsNormalizer,\n  stringify,\n  buildFormatters,\n  normalizeDestFileDescriptor\n}\n","/**\n * Represents default log level values\n *\n * @enum {number}\n */\nconst DEFAULT_LEVELS = {\n  trace: 10,\n  debug: 20,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60\n}\n\n/**\n * Represents sort order direction: `ascending` or `descending`\n *\n * @enum {string}\n */\nconst SORTING_ORDER = {\n  ASC: 'ASC',\n  DESC: 'DESC'\n}\n\nmodule.exports = {\n  DEFAULT_LEVELS,\n  SORTING_ORDER\n}\n","'use strict'\n/* eslint no-prototype-builtins: 0 */\nconst {\n  lsCacheSym,\n  levelValSym,\n  useOnlyCustomLevelsSym,\n  streamSym,\n  formattersSym,\n  hooksSym,\n  levelCompSym\n} = require('./symbols')\nconst { noop, genLog } = require('./tools')\nconst { DEFAULT_LEVELS, SORTING_ORDER } = require('./constants')\n\nconst levelMethods = {\n  fatal: (hook) => {\n    const logFatal = genLog(DEFAULT_LEVELS.fatal, hook)\n    return function (...args) {\n      const stream = this[streamSym]\n      logFatal.call(this, ...args)\n      if (typeof stream.flushSync === 'function') {\n        try {\n          stream.flushSync()\n        } catch (e) {\n          // https://github.com/pinojs/pino/pull/740#discussion_r346788313\n        }\n      }\n    }\n  },\n  error: (hook) => genLog(DEFAULT_LEVELS.error, hook),\n  warn: (hook) => genLog(DEFAULT_LEVELS.warn, hook),\n  info: (hook) => genLog(DEFAULT_LEVELS.info, hook),\n  debug: (hook) => genLog(DEFAULT_LEVELS.debug, hook),\n  trace: (hook) => genLog(DEFAULT_LEVELS.trace, hook)\n}\n\nconst nums = Object.keys(DEFAULT_LEVELS).reduce((o, k) => {\n  o[DEFAULT_LEVELS[k]] = k\n  return o\n}, {})\n\nconst initialLsCache = Object.keys(nums).reduce((o, k) => {\n  o[k] = '{\"level\":' + Number(k)\n  return o\n}, {})\n\nfunction genLsCache (instance) {\n  const formatter = instance[formattersSym].level\n  const { labels } = instance.levels\n  const cache = {}\n  for (const label in labels) {\n    const level = formatter(labels[label], Number(label))\n    cache[label] = JSON.stringify(level).slice(0, -1)\n  }\n  instance[lsCacheSym] = cache\n  return instance\n}\n\nfunction isStandardLevel (level, useOnlyCustomLevels) {\n  if (useOnlyCustomLevels) {\n    return false\n  }\n\n  switch (level) {\n    case 'fatal':\n    case 'error':\n    case 'warn':\n    case 'info':\n    case 'debug':\n    case 'trace':\n      return true\n    default:\n      return false\n  }\n}\n\nfunction setLevel (level) {\n  const { labels, values } = this.levels\n  if (typeof level === 'number') {\n    if (labels[level] === undefined) throw Error('unknown level value' + level)\n    level = labels[level]\n  }\n  if (values[level] === undefined) throw Error('unknown level ' + level)\n  const preLevelVal = this[levelValSym]\n  const levelVal = this[levelValSym] = values[level]\n  const useOnlyCustomLevelsVal = this[useOnlyCustomLevelsSym]\n  const levelComparison = this[levelCompSym]\n  const hook = this[hooksSym].logMethod\n\n  for (const key in values) {\n    if (levelComparison(values[key], levelVal) === false) {\n      this[key] = noop\n      continue\n    }\n    this[key] = isStandardLevel(key, useOnlyCustomLevelsVal) ? levelMethods[key](hook) : genLog(values[key], hook)\n  }\n\n  this.emit(\n    'level-change',\n    level,\n    levelVal,\n    labels[preLevelVal],\n    preLevelVal,\n    this\n  )\n}\n\nfunction getLevel (level) {\n  const { levels, levelVal } = this\n  // protection against potential loss of Pino scope from serializers (edge case with circular refs - https://github.com/pinojs/pino/issues/833)\n  return (levels && levels.labels) ? levels.labels[levelVal] : ''\n}\n\nfunction isLevelEnabled (logLevel) {\n  const { values } = this.levels\n  const logLevelVal = values[logLevel]\n  return logLevelVal !== undefined && this[levelCompSym](logLevelVal, this[levelValSym])\n}\n\n/**\n * Determine if the given `current` level is enabled by comparing it\n * against the current threshold (`expected`).\n *\n * @param {SORTING_ORDER} direction comparison direction \"ASC\" or \"DESC\"\n * @param {number} current current log level number representation\n * @param {number} expected threshold value to compare with\n * @returns {boolean}\n */\nfunction compareLevel (direction, current, expected) {\n  if (direction === SORTING_ORDER.DESC) {\n    return current <= expected\n  }\n\n  return current >= expected\n}\n\n/**\n * Create a level comparison function based on `levelComparison`\n * it could a default function which compares levels either in \"ascending\" or \"descending\" order or custom comparison function\n *\n * @param {SORTING_ORDER | Function} levelComparison sort levels order direction or custom comparison function\n * @returns Function\n */\nfunction genLevelComparison (levelComparison) {\n  if (typeof levelComparison === 'string') {\n    return compareLevel.bind(null, levelComparison)\n  }\n\n  return levelComparison\n}\n\nfunction mappings (customLevels = null, useOnlyCustomLevels = false) {\n  const customNums = customLevels\n    /* eslint-disable */\n    ? Object.keys(customLevels).reduce((o, k) => {\n        o[customLevels[k]] = k\n        return o\n      }, {})\n    : null\n    /* eslint-enable */\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { Infinity: { value: 'silent' } }),\n    useOnlyCustomLevels ? null : nums,\n    customNums\n  )\n  const values = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : DEFAULT_LEVELS,\n    customLevels\n  )\n  return { labels, values }\n}\n\nfunction assertDefaultLevelFound (defaultLevel, customLevels, useOnlyCustomLevels) {\n  if (typeof defaultLevel === 'number') {\n    const values = [].concat(\n      Object.keys(customLevels || {}).map(key => customLevels[key]),\n      useOnlyCustomLevels ? [] : Object.keys(nums).map(level => +level),\n      Infinity\n    )\n    if (!values.includes(defaultLevel)) {\n      throw Error(`default level:${defaultLevel} must be included in custom levels`)\n    }\n    return\n  }\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : DEFAULT_LEVELS,\n    customLevels\n  )\n  if (!(defaultLevel in labels)) {\n    throw Error(`default level:${defaultLevel} must be included in custom levels`)\n  }\n}\n\nfunction assertNoLevelCollisions (levels, customLevels) {\n  const { labels, values } = levels\n  for (const k in customLevels) {\n    if (k in values) {\n      throw Error('levels cannot be overridden')\n    }\n    if (customLevels[k] in labels) {\n      throw Error('pre-existing level values cannot be used for new levels')\n    }\n  }\n}\n\n/**\n * Validates whether `levelComparison` is correct\n *\n * @throws Error\n * @param {SORTING_ORDER | Function} levelComparison - value to validate\n * @returns\n */\nfunction assertLevelComparison (levelComparison) {\n  if (typeof levelComparison === 'function') {\n    return\n  }\n\n  if (typeof levelComparison === 'string' && Object.values(SORTING_ORDER).includes(levelComparison)) {\n    return\n  }\n\n  throw new Error('Levels comparison should be one of \"ASC\", \"DESC\" or \"function\" type')\n}\n\nmodule.exports = {\n  initialLsCache,\n  genLsCache,\n  levelMethods,\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  assertNoLevelCollisions,\n  assertDefaultLevelFound,\n  genLevelComparison,\n  assertLevelComparison\n}\n","'use strict'\n\nmodule.exports = { version: '9.7.0' }\n","'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst { EventEmitter } = require('node:events')\nconst {\n  lsCacheSym,\n  levelValSym,\n  setLevelSym,\n  getLevelSym,\n  chindingsSym,\n  parsedChindingsSym,\n  mixinSym,\n  asJsonSym,\n  writeSym,\n  mixinMergeStrategySym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  serializersSym,\n  formattersSym,\n  errorKeySym,\n  messageKeySym,\n  useOnlyCustomLevelsSym,\n  needsMetadataGsym,\n  redactFmtSym,\n  stringifySym,\n  formatOptsSym,\n  stringifiersSym,\n  msgPrefixSym,\n  hooksSym\n} = require('./symbols')\nconst {\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  initialLsCache,\n  genLsCache,\n  assertNoLevelCollisions\n} = require('./levels')\nconst {\n  asChindings,\n  asJson,\n  buildFormatters,\n  stringify\n} = require('./tools')\nconst {\n  version\n} = require('./meta')\nconst redaction = require('./redaction')\n\n// note: use of class is satirical\n// https://github.com/pinojs/pino/pull/433#pullrequestreview-127703127\nconst constructor = class Pino {}\nconst prototype = {\n  constructor,\n  child,\n  bindings,\n  setBindings,\n  flush,\n  isLevelEnabled,\n  version,\n  get level () { return this[getLevelSym]() },\n  set level (lvl) { this[setLevelSym](lvl) },\n  get levelVal () { return this[levelValSym] },\n  set levelVal (n) { throw Error('levelVal is read-only') },\n  [lsCacheSym]: initialLsCache,\n  [writeSym]: write,\n  [asJsonSym]: asJson,\n  [getLevelSym]: getLevel,\n  [setLevelSym]: setLevel\n}\n\nObject.setPrototypeOf(prototype, EventEmitter.prototype)\n\n// exporting and consuming the prototype object using factory pattern fixes scoping issues with getters when serializing\nmodule.exports = function () {\n  return Object.create(prototype)\n}\n\nconst resetChildingsFormatter = bindings => bindings\nfunction child (bindings, options) {\n  if (!bindings) {\n    throw Error('missing bindings for child Pino')\n  }\n  options = options || {} // default options to empty object\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const instance = Object.create(this)\n\n  if (options.hasOwnProperty('serializers') === true) {\n    instance[serializersSym] = Object.create(null)\n\n    for (const k in serializers) {\n      instance[serializersSym][k] = serializers[k]\n    }\n    const parentSymbols = Object.getOwnPropertySymbols(serializers)\n    /* eslint no-var: off */\n    for (var i = 0; i < parentSymbols.length; i++) {\n      const ks = parentSymbols[i]\n      instance[serializersSym][ks] = serializers[ks]\n    }\n\n    for (const bk in options.serializers) {\n      instance[serializersSym][bk] = options.serializers[bk]\n    }\n    const bindingsSymbols = Object.getOwnPropertySymbols(options.serializers)\n    for (var bi = 0; bi < bindingsSymbols.length; bi++) {\n      const bks = bindingsSymbols[bi]\n      instance[serializersSym][bks] = options.serializers[bks]\n    }\n  } else instance[serializersSym] = serializers\n  if (options.hasOwnProperty('formatters')) {\n    const { level, bindings: chindings, log } = options.formatters\n    instance[formattersSym] = buildFormatters(\n      level || formatters.level,\n      chindings || resetChildingsFormatter,\n      log || formatters.log\n    )\n  } else {\n    instance[formattersSym] = buildFormatters(\n      formatters.level,\n      resetChildingsFormatter,\n      formatters.log\n    )\n  }\n  if (options.hasOwnProperty('customLevels') === true) {\n    assertNoLevelCollisions(this.levels, options.customLevels)\n    instance.levels = mappings(options.customLevels, instance[useOnlyCustomLevelsSym])\n    genLsCache(instance)\n  }\n\n  // redact must place before asChindings and only replace if exist\n  if ((typeof options.redact === 'object' && options.redact !== null) || Array.isArray(options.redact)) {\n    instance.redact = options.redact // replace redact directly\n    const stringifiers = redaction(instance.redact, stringify)\n    const formatOpts = { stringify: stringifiers[redactFmtSym] }\n    instance[stringifySym] = stringify\n    instance[stringifiersSym] = stringifiers\n    instance[formatOptsSym] = formatOpts\n  }\n\n  if (typeof options.msgPrefix === 'string') {\n    instance[msgPrefixSym] = (this[msgPrefixSym] || '') + options.msgPrefix\n  }\n\n  instance[chindingsSym] = asChindings(instance, bindings)\n  const childLevel = options.level || this.level\n  instance[setLevelSym](childLevel)\n  this.onChild(instance)\n  return instance\n}\n\nfunction bindings () {\n  const chindings = this[chindingsSym]\n  const chindingsJson = `{${chindings.substr(1)}}` // at least contains ,\"pid\":7068,\"hostname\":\"myMac\"\n  const bindingsFromJson = JSON.parse(chindingsJson)\n  delete bindingsFromJson.pid\n  delete bindingsFromJson.hostname\n  return bindingsFromJson\n}\n\nfunction setBindings (newBindings) {\n  const chindings = asChindings(this, newBindings)\n  this[chindingsSym] = chindings\n  delete this[parsedChindingsSym]\n}\n\n/**\n * Default strategy for creating `mergeObject` from arguments and the result from `mixin()`.\n * Fields from `mergeObject` have higher priority in this strategy.\n *\n * @param {Object} mergeObject The object a user has supplied to the logging function.\n * @param {Object} mixinObject The result of the `mixin` method.\n * @return {Object}\n */\nfunction defaultMixinMergeStrategy (mergeObject, mixinObject) {\n  return Object.assign(mixinObject, mergeObject)\n}\n\nfunction write (_obj, msg, num) {\n  const t = this[timeSym]()\n  const mixin = this[mixinSym]\n  const errorKey = this[errorKeySym]\n  const messageKey = this[messageKeySym]\n  const mixinMergeStrategy = this[mixinMergeStrategySym] || defaultMixinMergeStrategy\n  let obj\n  const streamWriteHook = this[hooksSym].streamWrite\n\n  if (_obj === undefined || _obj === null) {\n    obj = {}\n  } else if (_obj instanceof Error) {\n    obj = { [errorKey]: _obj }\n    if (msg === undefined) {\n      msg = _obj.message\n    }\n  } else {\n    obj = _obj\n    if (msg === undefined && _obj[messageKey] === undefined && _obj[errorKey]) {\n      msg = _obj[errorKey].message\n    }\n  }\n\n  if (mixin) {\n    obj = mixinMergeStrategy(obj, mixin(obj, num, this))\n  }\n\n  const s = this[asJsonSym](obj, msg, num, t)\n\n  const stream = this[streamSym]\n  if (stream[needsMetadataGsym] === true) {\n    stream.lastLevel = num\n    stream.lastObj = obj\n    stream.lastMsg = msg\n    stream.lastTime = t.slice(this[timeSliceIndexSym])\n    stream.lastLogger = this // for child loggers\n  }\n  stream.write(streamWriteHook ? streamWriteHook(s) : s)\n}\n\nfunction noop () {}\n\nfunction flush (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw Error('callback must be a function')\n  }\n\n  const stream = this[streamSym]\n\n  if (typeof stream.flush === 'function') {\n    stream.flush(cb || noop)\n  } else if (cb) cb()\n}\n","'use strict'\n\nconst { hasOwnProperty } = Object.prototype\n\nconst stringify = configure()\n\n// @ts-expect-error\nstringify.configure = configure\n// @ts-expect-error\nstringify.stringify = stringify\n\n// @ts-expect-error\nstringify.default = stringify\n\n// @ts-expect-error used for named export\nexports.stringify = stringify\n// @ts-expect-error used for named export\nexports.configure = configure\n\nmodule.exports = stringify\n\n// eslint-disable-next-line no-control-regex\nconst strEscapeSequencesRegExp = /[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]/\n\n// Escape C0 control characters, double quotes, the backslash and every code\n// unit with a numeric value in the inclusive range 0xD800 to 0xDFFF.\nfunction strEscape (str) {\n  // Some magic numbers that worked out fine while benchmarking with v8 8.0\n  if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) {\n    return `\"${str}\"`\n  }\n  return JSON.stringify(str)\n}\n\nfunction sort (array, comparator) {\n  // Insertion sort is very efficient for small input sizes, but it has a bad\n  // worst case complexity. Thus, use native array sort for bigger values.\n  if (array.length > 2e2 || comparator) {\n    return array.sort(comparator)\n  }\n  for (let i = 1; i < array.length; i++) {\n    const currentValue = array[i]\n    let position = i\n    while (position !== 0 && array[position - 1] > currentValue) {\n      array[position] = array[position - 1]\n      position--\n    }\n    array[position] = currentValue\n  }\n  return array\n}\n\nconst typedArrayPrototypeGetSymbolToStringTag =\n  Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        new Int8Array()\n      )\n    ),\n    Symbol.toStringTag\n  ).get\n\nfunction isTypedArrayWithEntries (value) {\n  return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0\n}\n\nfunction stringifyTypedArray (array, separator, maximumBreadth) {\n  if (array.length < maximumBreadth) {\n    maximumBreadth = array.length\n  }\n  const whitespace = separator === ',' ? '' : ' '\n  let res = `\"0\":${whitespace}${array[0]}`\n  for (let i = 1; i < maximumBreadth; i++) {\n    res += `${separator}\"${i}\":${whitespace}${array[i]}`\n  }\n  return res\n}\n\nfunction getCircularValueOption (options) {\n  if (hasOwnProperty.call(options, 'circularValue')) {\n    const circularValue = options.circularValue\n    if (typeof circularValue === 'string') {\n      return `\"${circularValue}\"`\n    }\n    if (circularValue == null) {\n      return circularValue\n    }\n    if (circularValue === Error || circularValue === TypeError) {\n      return {\n        toString () {\n          throw new TypeError('Converting circular structure to JSON')\n        }\n      }\n    }\n    throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined')\n  }\n  return '\"[Circular]\"'\n}\n\nfunction getDeterministicOption (options) {\n  let value\n  if (hasOwnProperty.call(options, 'deterministic')) {\n    value = options.deterministic\n    if (typeof value !== 'boolean' && typeof value !== 'function') {\n      throw new TypeError('The \"deterministic\" argument must be of type boolean or comparator function')\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getBooleanOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'boolean') {\n      throw new TypeError(`The \"${key}\" argument must be of type boolean`)\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getPositiveIntegerOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'number') {\n      throw new TypeError(`The \"${key}\" argument must be of type number`)\n    }\n    if (!Number.isInteger(value)) {\n      throw new TypeError(`The \"${key}\" argument must be an integer`)\n    }\n    if (value < 1) {\n      throw new RangeError(`The \"${key}\" argument must be >= 1`)\n    }\n  }\n  return value === undefined ? Infinity : value\n}\n\nfunction getItemCount (number) {\n  if (number === 1) {\n    return '1 item'\n  }\n  return `${number} items`\n}\n\nfunction getUniqueReplacerSet (replacerArray) {\n  const replacerSet = new Set()\n  for (const value of replacerArray) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      replacerSet.add(String(value))\n    }\n  }\n  return replacerSet\n}\n\nfunction getStrictOption (options) {\n  if (hasOwnProperty.call(options, 'strict')) {\n    const value = options.strict\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The \"strict\" argument must be of type boolean')\n    }\n    if (value) {\n      return (value) => {\n        let message = `Object can not safely be stringified. Received type ${typeof value}`\n        if (typeof value !== 'function') message += ` (${value.toString()})`\n        throw new Error(message)\n      }\n    }\n  }\n}\n\nfunction configure (options) {\n  options = { ...options }\n  const fail = getStrictOption(options)\n  if (fail) {\n    if (options.bigint === undefined) {\n      options.bigint = false\n    }\n    if (!('circularValue' in options)) {\n      options.circularValue = Error\n    }\n  }\n  const circularValue = getCircularValueOption(options)\n  const bigint = getBooleanOption(options, 'bigint')\n  const deterministic = getDeterministicOption(options)\n  const comparator = typeof deterministic === 'function' ? deterministic : undefined\n  const maximumDepth = getPositiveIntegerOption(options, 'maximumDepth')\n  const maximumBreadth = getPositiveIntegerOption(options, 'maximumBreadth')\n\n  function stringifyFnReplacer (key, parent, stack, replacer, spacer, indentation) {\n    let value = parent[key]\n\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n    value = replacer.call(parent, key, value)\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n        let join = ','\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let whitespace = ''\n        let separator = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        const maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (deterministic && !isTypedArrayWithEntries(value)) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyFnReplacer(key, value, stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":${whitespace}\"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyArrayReplacer (key, value, stack, replacer, spacer, indentation) {\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        const originalIndentation = indentation\n        let res = ''\n        let join = ','\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n        stack.push(value)\n        let whitespace = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        let separator = ''\n        for (const key of replacer) {\n          const tmp = stringifyArrayReplacer(key, value[key], stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyIndent (key, value, stack, spacer, indentation) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again.\n          if (typeof value !== 'object') {\n            return stringifyIndent(key, value, stack, spacer, indentation)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          indentation += spacer\n          let res = `\\n${indentation}`\n          const join = `,\\n${indentation}`\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          res += `\\n${originalIndentation}`\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        indentation += spacer\n        const join = `,\\n${indentation}`\n        let res = ''\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, join, maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = join\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyIndent(key, value[key], stack, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}: ${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\": \"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (separator !== '') {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifySimple (key, value, stack) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again\n          if (typeof value !== 'object') {\n            return stringifySimple(key, value, stack)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n\n        const hasLength = value.length !== undefined\n        if (hasLength && Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifySimple(String(i), value[i], stack)\n            res += tmp !== undefined ? tmp : 'null'\n            res += ','\n          }\n          const tmp = stringifySimple(String(i), value[i], stack)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `,\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (hasLength && isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, ',', maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = ','\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifySimple(key, value[key], stack)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${tmp}`\n            separator = ','\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":\"${getItemCount(removedKeys)} not stringified\"`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringify (value, replacer, space) {\n    if (arguments.length > 1) {\n      let spacer = ''\n      if (typeof space === 'number') {\n        spacer = ' '.repeat(Math.min(space, 10))\n      } else if (typeof space === 'string') {\n        spacer = space.slice(0, 10)\n      }\n      if (replacer != null) {\n        if (typeof replacer === 'function') {\n          return stringifyFnReplacer('', { '': value }, [], replacer, spacer, '')\n        }\n        if (Array.isArray(replacer)) {\n          return stringifyArrayReplacer('', value, [], getUniqueReplacerSet(replacer), spacer, '')\n        }\n      }\n      if (spacer.length !== 0) {\n        return stringifyIndent('', value, [], spacer, '')\n      }\n    }\n    return stringifySimple('', value, [])\n  }\n\n  return stringify\n}\n","'use strict'\n\nconst metadata = Symbol.for('pino.metadata')\nconst { DEFAULT_LEVELS } = require('./constants')\n\nconst DEFAULT_INFO_LEVEL = DEFAULT_LEVELS.info\n\nfunction multistream (streamsArray, opts) {\n  let counter = 0\n  streamsArray = streamsArray || []\n  opts = opts || { dedupe: false }\n\n  const streamLevels = Object.create(DEFAULT_LEVELS)\n  streamLevels.silent = Infinity\n  if (opts.levels && typeof opts.levels === 'object') {\n    Object.keys(opts.levels).forEach(i => {\n      streamLevels[i] = opts.levels[i]\n    })\n  }\n\n  const res = {\n    write,\n    add,\n    emit,\n    flushSync,\n    end,\n    minLevel: 0,\n    streams: [],\n    clone,\n    [metadata]: true,\n    streamLevels\n  }\n\n  if (Array.isArray(streamsArray)) {\n    streamsArray.forEach(add, res)\n  } else {\n    add.call(res, streamsArray)\n  }\n\n  // clean this object up\n  // or it will stay allocated forever\n  // as it is closed on the following closures\n  streamsArray = null\n\n  return res\n\n  // we can exit early because the streams are ordered by level\n  function write (data) {\n    let dest\n    const level = this.lastLevel\n    const { streams } = this\n    // for handling situation when several streams has the same level\n    let recordedLevel = 0\n    let stream\n\n    // if dedupe set to true we send logs to the stream with the highest level\n    // therefore, we have to change sorting order\n    for (let i = initLoopVar(streams.length, opts.dedupe); checkLoopVar(i, streams.length, opts.dedupe); i = adjustLoopVar(i, opts.dedupe)) {\n      dest = streams[i]\n      if (dest.level <= level) {\n        if (recordedLevel !== 0 && recordedLevel !== dest.level) {\n          break\n        }\n        stream = dest.stream\n        if (stream[metadata]) {\n          const { lastTime, lastMsg, lastObj, lastLogger } = this\n          stream.lastLevel = level\n          stream.lastTime = lastTime\n          stream.lastMsg = lastMsg\n          stream.lastObj = lastObj\n          stream.lastLogger = lastLogger\n        }\n        stream.write(data)\n        if (opts.dedupe) {\n          recordedLevel = dest.level\n        }\n      } else if (!opts.dedupe) {\n        break\n      }\n    }\n  }\n\n  function emit (...args) {\n    for (const { stream } of this.streams) {\n      if (typeof stream.emit === 'function') {\n        stream.emit(...args)\n      }\n    }\n  }\n\n  function flushSync () {\n    for (const { stream } of this.streams) {\n      if (typeof stream.flushSync === 'function') {\n        stream.flushSync()\n      }\n    }\n  }\n\n  function add (dest) {\n    if (!dest) {\n      return res\n    }\n\n    // Check that dest implements either StreamEntry or DestinationStream\n    const isStream = typeof dest.write === 'function' || dest.stream\n    const stream_ = dest.write ? dest : dest.stream\n    // This is necessary to provide a meaningful error message, otherwise it throws somewhere inside write()\n    if (!isStream) {\n      throw Error('stream object needs to implement either StreamEntry or DestinationStream interface')\n    }\n\n    const { streams, streamLevels } = this\n\n    let level\n    if (typeof dest.levelVal === 'number') {\n      level = dest.levelVal\n    } else if (typeof dest.level === 'string') {\n      level = streamLevels[dest.level]\n    } else if (typeof dest.level === 'number') {\n      level = dest.level\n    } else {\n      level = DEFAULT_INFO_LEVEL\n    }\n\n    const dest_ = {\n      stream: stream_,\n      level,\n      levelVal: undefined,\n      id: counter++\n    }\n\n    streams.unshift(dest_)\n    streams.sort(compareByLevel)\n\n    this.minLevel = streams[0].level\n\n    return res\n  }\n\n  function end () {\n    for (const { stream } of this.streams) {\n      if (typeof stream.flushSync === 'function') {\n        stream.flushSync()\n      }\n      stream.end()\n    }\n  }\n\n  function clone (level) {\n    const streams = new Array(this.streams.length)\n\n    for (let i = 0; i < streams.length; i++) {\n      streams[i] = {\n        level,\n        stream: this.streams[i].stream\n      }\n    }\n\n    return {\n      write,\n      add,\n      minLevel: level,\n      streams,\n      clone,\n      emit,\n      flushSync,\n      [metadata]: true\n    }\n  }\n}\n\nfunction compareByLevel (a, b) {\n  return a.level - b.level\n}\n\nfunction initLoopVar (length, dedupe) {\n  return dedupe ? length - 1 : 0\n}\n\nfunction adjustLoopVar (i, dedupe) {\n  return dedupe ? i - 1 : i + 1\n}\n\nfunction checkLoopVar (i, length, dedupe) {\n  return dedupe ? i >= 0 : i < length\n}\n\nmodule.exports = multistream\n","'use strict'\n\nconst os = require('node:os')\nconst stdSerializers = require('pino-std-serializers')\nconst caller = require('./lib/caller')\nconst redaction = require('./lib/redaction')\nconst time = require('./lib/time')\nconst proto = require('./lib/proto')\nconst symbols = require('./lib/symbols')\nconst { configure } = require('safe-stable-stringify')\nconst { assertDefaultLevelFound, mappings, genLsCache, genLevelComparison, assertLevelComparison } = require('./lib/levels')\nconst { DEFAULT_LEVELS, SORTING_ORDER } = require('./lib/constants')\nconst {\n  createArgsNormalizer,\n  asChindings,\n  buildSafeSonicBoom,\n  buildFormatters,\n  stringify,\n  normalizeDestFileDescriptor,\n  noop\n} = require('./lib/tools')\nconst { version } = require('./lib/meta')\nconst {\n  chindingsSym,\n  redactFmtSym,\n  serializersSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifySafeSym,\n  stringifiersSym,\n  setLevelSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeySym,\n  mixinSym,\n  levelCompSym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym,\n  nestedKeyStrSym,\n  mixinMergeStrategySym,\n  msgPrefixSym\n} = symbols\nconst { epochTime, nullTime } = time\nconst { pid } = process\nconst hostname = os.hostname()\nconst defaultErrorSerializer = stdSerializers.err\nconst defaultOptions = {\n  level: 'info',\n  levelComparison: SORTING_ORDER.ASC,\n  levels: DEFAULT_LEVELS,\n  messageKey: 'msg',\n  errorKey: 'err',\n  nestedKey: null,\n  enabled: true,\n  base: { pid, hostname },\n  serializers: Object.assign(Object.create(null), {\n    err: defaultErrorSerializer\n  }),\n  formatters: Object.assign(Object.create(null), {\n    bindings (bindings) {\n      return bindings\n    },\n    level (label, number) {\n      return { level: number }\n    }\n  }),\n  hooks: {\n    logMethod: undefined,\n    streamWrite: undefined\n  },\n  timestamp: epochTime,\n  name: undefined,\n  redact: null,\n  customLevels: null,\n  useOnlyCustomLevels: false,\n  depthLimit: 5,\n  edgeLimit: 100\n}\n\nconst normalize = createArgsNormalizer(defaultOptions)\n\nconst serializers = Object.assign(Object.create(null), stdSerializers)\n\nfunction pino (...args) {\n  const instance = {}\n  const { opts, stream } = normalize(instance, caller(), ...args)\n\n  if (opts.level && typeof opts.level === 'string' && DEFAULT_LEVELS[opts.level.toLowerCase()] !== undefined) opts.level = opts.level.toLowerCase()\n\n  const {\n    redact,\n    crlf,\n    serializers,\n    timestamp,\n    messageKey,\n    errorKey,\n    nestedKey,\n    base,\n    name,\n    level,\n    customLevels,\n    levelComparison,\n    mixin,\n    mixinMergeStrategy,\n    useOnlyCustomLevels,\n    formatters,\n    hooks,\n    depthLimit,\n    edgeLimit,\n    onChild,\n    msgPrefix\n  } = opts\n\n  const stringifySafe = configure({\n    maximumDepth: depthLimit,\n    maximumBreadth: edgeLimit\n  })\n\n  const allFormatters = buildFormatters(\n    formatters.level,\n    formatters.bindings,\n    formatters.log\n  )\n\n  const stringifyFn = stringify.bind({\n    [stringifySafeSym]: stringifySafe\n  })\n  const stringifiers = redact ? redaction(redact, stringifyFn) : {}\n  const formatOpts = redact\n    ? { stringify: stringifiers[redactFmtSym] }\n    : { stringify: stringifyFn }\n  const end = '}' + (crlf ? '\\r\\n' : '\\n')\n  const coreChindings = asChindings.bind(null, {\n    [chindingsSym]: '',\n    [serializersSym]: serializers,\n    [stringifiersSym]: stringifiers,\n    [stringifySym]: stringify,\n    [stringifySafeSym]: stringifySafe,\n    [formattersSym]: allFormatters\n  })\n\n  let chindings = ''\n  if (base !== null) {\n    if (name === undefined) {\n      chindings = coreChindings(base)\n    } else {\n      chindings = coreChindings(Object.assign({}, base, { name }))\n    }\n  }\n\n  const time = (timestamp instanceof Function)\n    ? timestamp\n    : (timestamp ? epochTime : nullTime)\n  const timeSliceIndex = time().indexOf(':') + 1\n\n  if (useOnlyCustomLevels && !customLevels) throw Error('customLevels is required if useOnlyCustomLevels is set true')\n  if (mixin && typeof mixin !== 'function') throw Error(`Unknown mixin type \"${typeof mixin}\" - expected \"function\"`)\n  if (msgPrefix && typeof msgPrefix !== 'string') throw Error(`Unknown msgPrefix type \"${typeof msgPrefix}\" - expected \"string\"`)\n\n  assertDefaultLevelFound(level, customLevels, useOnlyCustomLevels)\n  const levels = mappings(customLevels, useOnlyCustomLevels)\n\n  if (typeof stream.emit === 'function') {\n    stream.emit('message', { code: 'PINO_CONFIG', config: { levels, messageKey, errorKey } })\n  }\n\n  assertLevelComparison(levelComparison)\n  const levelCompFunc = genLevelComparison(levelComparison)\n\n  Object.assign(instance, {\n    levels,\n    [levelCompSym]: levelCompFunc,\n    [useOnlyCustomLevelsSym]: useOnlyCustomLevels,\n    [streamSym]: stream,\n    [timeSym]: time,\n    [timeSliceIndexSym]: timeSliceIndex,\n    [stringifySym]: stringify,\n    [stringifySafeSym]: stringifySafe,\n    [stringifiersSym]: stringifiers,\n    [endSym]: end,\n    [formatOptsSym]: formatOpts,\n    [messageKeySym]: messageKey,\n    [errorKeySym]: errorKey,\n    [nestedKeySym]: nestedKey,\n    // protect against injection\n    [nestedKeyStrSym]: nestedKey ? `,${JSON.stringify(nestedKey)}:{` : '',\n    [serializersSym]: serializers,\n    [mixinSym]: mixin,\n    [mixinMergeStrategySym]: mixinMergeStrategy,\n    [chindingsSym]: chindings,\n    [formattersSym]: allFormatters,\n    [hooksSym]: hooks,\n    silent: noop,\n    onChild,\n    [msgPrefixSym]: msgPrefix\n  })\n\n  Object.setPrototypeOf(instance, proto())\n\n  genLsCache(instance)\n\n  instance[setLevelSym](level)\n\n  return instance\n}\n\nmodule.exports = pino\n\nmodule.exports.destination = (dest = process.stdout.fd) => {\n  if (typeof dest === 'object') {\n    dest.dest = normalizeDestFileDescriptor(dest.dest || process.stdout.fd)\n    return buildSafeSonicBoom(dest)\n  } else {\n    return buildSafeSonicBoom({ dest: normalizeDestFileDescriptor(dest), minLength: 0 })\n  }\n}\n\nmodule.exports.transport = require('./lib/transport')\nmodule.exports.multistream = require('./lib/multistream')\n\nmodule.exports.levels = mappings()\nmodule.exports.stdSerializers = serializers\nmodule.exports.stdTimeFunctions = Object.assign({}, time)\nmodule.exports.symbols = symbols\nmodule.exports.version = version\n\n// Enables default and name export with TypeScript and Babel\nmodule.exports.default = pino\nmodule.exports.pino = pino\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tty = require('tty');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar tty__namespace = /*#__PURE__*/_interopNamespace(tty);\n\nconst {\n  env = {},\n  argv = [],\n  platform = \"\",\n} = typeof process === \"undefined\" ? {} : process;\n\nconst isDisabled = \"NO_COLOR\" in env || argv.includes(\"--no-color\");\nconst isForced = \"FORCE_COLOR\" in env || argv.includes(\"--color\");\nconst isWindows = platform === \"win32\";\nconst isDumbTerminal = env.TERM === \"dumb\";\n\nconst isCompatibleTerminal =\n  tty__namespace && tty__namespace.isatty && tty__namespace.isatty(1) && env.TERM && !isDumbTerminal;\n\nconst isCI =\n  \"CI\" in env &&\n  (\"GITHUB_ACTIONS\" in env || \"GITLAB_CI\" in env || \"CIRCLECI\" in env);\n\nconst isColorSupported =\n  !isDisabled &&\n  (isForced || (isWindows && !isDumbTerminal) || isCompatibleTerminal || isCI);\n\nconst replaceClose = (\n  index,\n  string,\n  close,\n  replace,\n  head = string.substring(0, index) + replace,\n  tail = string.substring(index + close.length),\n  next = tail.indexOf(close)\n) => head + (next < 0 ? tail : replaceClose(next, tail, close, replace));\n\nconst clearBleed = (index, string, open, close, replace) =>\n  index < 0\n    ? open + string + close\n    : open + replaceClose(index, string, close, replace) + close;\n\nconst filterEmpty =\n  (open, close, replace = open, at = open.length + 1) =>\n  (string) =>\n    string || !(string === \"\" || string === undefined)\n      ? clearBleed(\n          (\"\" + string).indexOf(close, at),\n          string,\n          open,\n          close,\n          replace\n        )\n      : \"\";\n\nconst init = (open, close, replace) =>\n  filterEmpty(`\\x1b[${open}m`, `\\x1b[${close}m`, replace);\n\nconst colors = {\n  reset: init(0, 0),\n  bold: init(1, 22, \"\\x1b[22m\\x1b[1m\"),\n  dim: init(2, 22, \"\\x1b[22m\\x1b[2m\"),\n  italic: init(3, 23),\n  underline: init(4, 24),\n  inverse: init(7, 27),\n  hidden: init(8, 28),\n  strikethrough: init(9, 29),\n  black: init(30, 39),\n  red: init(31, 39),\n  green: init(32, 39),\n  yellow: init(33, 39),\n  blue: init(34, 39),\n  magenta: init(35, 39),\n  cyan: init(36, 39),\n  white: init(37, 39),\n  gray: init(90, 39),\n  bgBlack: init(40, 49),\n  bgRed: init(41, 49),\n  bgGreen: init(42, 49),\n  bgYellow: init(43, 49),\n  bgBlue: init(44, 49),\n  bgMagenta: init(45, 49),\n  bgCyan: init(46, 49),\n  bgWhite: init(47, 49),\n  blackBright: init(90, 39),\n  redBright: init(91, 39),\n  greenBright: init(92, 39),\n  yellowBright: init(93, 39),\n  blueBright: init(94, 39),\n  magentaBright: init(95, 39),\n  cyanBright: init(96, 39),\n  whiteBright: init(97, 39),\n  bgBlackBright: init(100, 49),\n  bgRedBright: init(101, 49),\n  bgGreenBright: init(102, 49),\n  bgYellowBright: init(103, 49),\n  bgBlueBright: init(104, 49),\n  bgMagentaBright: init(105, 49),\n  bgCyanBright: init(106, 49),\n  bgWhiteBright: init(107, 49),\n};\n\nconst createColors = ({ useColor = isColorSupported } = {}) =>\n  useColor\n    ? colors\n    : Object.keys(colors).reduce(\n        (colors, key) => ({ ...colors, [key]: String }),\n        {}\n      );\n\nconst {\n  reset,\n  bold,\n  dim,\n  italic,\n  underline,\n  inverse,\n  hidden,\n  strikethrough,\n  black,\n  red,\n  green,\n  yellow,\n  blue,\n  magenta,\n  cyan,\n  white,\n  gray,\n  bgBlack,\n  bgRed,\n  bgGreen,\n  bgYellow,\n  bgBlue,\n  bgMagenta,\n  bgCyan,\n  bgWhite,\n  blackBright,\n  redBright,\n  greenBright,\n  yellowBright,\n  blueBright,\n  magentaBright,\n  cyanBright,\n  whiteBright,\n  bgBlackBright,\n  bgRedBright,\n  bgGreenBright,\n  bgYellowBright,\n  bgBlueBright,\n  bgMagentaBright,\n  bgCyanBright,\n  bgWhiteBright,\n} = createColors();\n\nexports.bgBlack = bgBlack;\nexports.bgBlackBright = bgBlackBright;\nexports.bgBlue = bgBlue;\nexports.bgBlueBright = bgBlueBright;\nexports.bgCyan = bgCyan;\nexports.bgCyanBright = bgCyanBright;\nexports.bgGreen = bgGreen;\nexports.bgGreenBright = bgGreenBright;\nexports.bgMagenta = bgMagenta;\nexports.bgMagentaBright = bgMagentaBright;\nexports.bgRed = bgRed;\nexports.bgRedBright = bgRedBright;\nexports.bgWhite = bgWhite;\nexports.bgWhiteBright = bgWhiteBright;\nexports.bgYellow = bgYellow;\nexports.bgYellowBright = bgYellowBright;\nexports.black = black;\nexports.blackBright = blackBright;\nexports.blue = blue;\nexports.blueBright = blueBright;\nexports.bold = bold;\nexports.createColors = createColors;\nexports.cyan = cyan;\nexports.cyanBright = cyanBright;\nexports.dim = dim;\nexports.gray = gray;\nexports.green = green;\nexports.greenBright = greenBright;\nexports.hidden = hidden;\nexports.inverse = inverse;\nexports.isColorSupported = isColorSupported;\nexports.italic = italic;\nexports.magenta = magenta;\nexports.magentaBright = magentaBright;\nexports.red = red;\nexports.redBright = redBright;\nexports.reset = reset;\nexports.strikethrough = strikethrough;\nexports.underline = underline;\nexports.white = white;\nexports.whiteBright = whiteBright;\nexports.yellow = yellow;\nexports.yellowBright = yellowBright;\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","var once = require('once');\n\nvar noop = function() {};\n\nvar qnt = global.Bare ? queueMicrotask : process.nextTick.bind(process);\n\nvar isRequest = function(stream) {\n\treturn stream.setHeader && typeof stream.abort === 'function';\n};\n\nvar isChildProcess = function(stream) {\n\treturn stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3\n};\n\nvar eos = function(stream, opts, callback) {\n\tif (typeof opts === 'function') return eos(stream, null, opts);\n\tif (!opts) opts = {};\n\n\tcallback = once(callback || noop);\n\n\tvar ws = stream._writableState;\n\tvar rs = stream._readableState;\n\tvar readable = opts.readable || (opts.readable !== false && stream.readable);\n\tvar writable = opts.writable || (opts.writable !== false && stream.writable);\n\tvar cancelled = false;\n\n\tvar onlegacyfinish = function() {\n\t\tif (!stream.writable) onfinish();\n\t};\n\n\tvar onfinish = function() {\n\t\twritable = false;\n\t\tif (!readable) callback.call(stream);\n\t};\n\n\tvar onend = function() {\n\t\treadable = false;\n\t\tif (!writable) callback.call(stream);\n\t};\n\n\tvar onexit = function(exitCode) {\n\t\tcallback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);\n\t};\n\n\tvar onerror = function(err) {\n\t\tcallback.call(stream, err);\n\t};\n\n\tvar onclose = function() {\n\t\tqnt(onclosenexttick);\n\t};\n\n\tvar onclosenexttick = function() {\n\t\tif (cancelled) return;\n\t\tif (readable && !(rs && (rs.ended && !rs.destroyed))) return callback.call(stream, new Error('premature close'));\n\t\tif (writable && !(ws && (ws.ended && !ws.destroyed))) return callback.call(stream, new Error('premature close'));\n\t};\n\n\tvar onrequest = function() {\n\t\tstream.req.on('finish', onfinish);\n\t};\n\n\tif (isRequest(stream)) {\n\t\tstream.on('complete', onfinish);\n\t\tstream.on('abort', onclose);\n\t\tif (stream.req) onrequest();\n\t\telse stream.on('request', onrequest);\n\t} else if (writable && !ws) { // legacy streams\n\t\tstream.on('end', onlegacyfinish);\n\t\tstream.on('close', onlegacyfinish);\n\t}\n\n\tif (isChildProcess(stream)) stream.on('exit', onexit);\n\n\tstream.on('end', onend);\n\tstream.on('finish', onfinish);\n\tif (opts.error !== false) stream.on('error', onerror);\n\tstream.on('close', onclose);\n\n\treturn function() {\n\t\tcancelled = true;\n\t\tstream.removeListener('complete', onfinish);\n\t\tstream.removeListener('abort', onclose);\n\t\tstream.removeListener('request', onrequest);\n\t\tif (stream.req) stream.req.removeListener('finish', onfinish);\n\t\tstream.removeListener('end', onlegacyfinish);\n\t\tstream.removeListener('close', onlegacyfinish);\n\t\tstream.removeListener('finish', onfinish);\n\t\tstream.removeListener('exit', onexit);\n\t\tstream.removeListener('end', onend);\n\t\tstream.removeListener('error', onerror);\n\t\tstream.removeListener('close', onclose);\n\t};\n};\n\nmodule.exports = eos;\n","var once = require('once')\nvar eos = require('end-of-stream')\nvar fs\n\ntry {\n  fs = require('fs') // we only need fs to get the ReadStream and WriteStream prototypes\n} catch (e) {}\n\nvar noop = function () {}\nvar ancient = typeof process === 'undefined' ? false : /^v?\\.0/.test(process.version)\n\nvar isFn = function (fn) {\n  return typeof fn === 'function'\n}\n\nvar isFS = function (stream) {\n  if (!ancient) return false // newer node version do not need to care about fs is a special way\n  if (!fs) return false // browser\n  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)\n}\n\nvar isRequest = function (stream) {\n  return stream.setHeader && isFn(stream.abort)\n}\n\nvar destroyer = function (stream, reading, writing, callback) {\n  callback = once(callback)\n\n  var closed = false\n  stream.on('close', function () {\n    closed = true\n  })\n\n  eos(stream, {readable: reading, writable: writing}, function (err) {\n    if (err) return callback(err)\n    closed = true\n    callback()\n  })\n\n  var destroyed = false\n  return function (err) {\n    if (closed) return\n    if (destroyed) return\n    destroyed = true\n\n    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks\n    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want\n\n    if (isFn(stream.destroy)) return stream.destroy()\n\n    callback(err || new Error('stream was destroyed'))\n  }\n}\n\nvar call = function (fn) {\n  fn()\n}\n\nvar pipe = function (from, to) {\n  return from.pipe(to)\n}\n\nvar pump = function () {\n  var streams = Array.prototype.slice.call(arguments)\n  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop\n\n  if (Array.isArray(streams[0])) streams = streams[0]\n  if (streams.length < 2) throw new Error('pump requires two streams per minimum')\n\n  var error\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1\n    var writing = i > 0\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err\n      if (err) destroys.forEach(call)\n      if (reading) return\n      destroys.forEach(call)\n      callback(error)\n    })\n  })\n\n  return streams.reduce(pipe)\n}\n\nmodule.exports = pump\n","/*\nCopyright (c) 2014-2021, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  let list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    const buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (let i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) {\n    cb(new Error('maximum buffer reached'))\n    return\n  }\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp) && !matcher[Symbol.split]) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.autoDestroy = true\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow || false\n  stream.overflow = false\n  stream._destroy = function (err, cb) {\n    // Weird Node v12 bug that we need to work around\n    this._writableState.errorEmitted = false\n    cb(err)\n  }\n\n  return stream\n}\n\nmodule.exports = split\n","'use strict'\n\nconst metadata = Symbol.for('pino.metadata')\nconst split = require('split2')\nconst { Duplex } = require('stream')\nconst { parentPort, workerData } = require('worker_threads')\n\nfunction createDeferred () {\n  let resolve\n  let reject\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  })\n  promise.resolve = resolve\n  promise.reject = reject\n  return promise\n}\n\nmodule.exports = function build (fn, opts = {}) {\n  const waitForConfig = opts.expectPinoConfig === true && workerData?.workerData?.pinoWillSendConfig === true\n  const parseLines = opts.parse === 'lines'\n  const parseLine = typeof opts.parseLine === 'function' ? opts.parseLine : JSON.parse\n  const close = opts.close || defaultClose\n  const stream = split(function (line) {\n    let value\n\n    try {\n      value = parseLine(line)\n    } catch (error) {\n      this.emit('unknown', line, error)\n      return\n    }\n\n    if (value === null) {\n      this.emit('unknown', line, 'Null value ignored')\n      return\n    }\n\n    if (typeof value !== 'object') {\n      value = {\n        data: value,\n        time: Date.now()\n      }\n    }\n\n    if (stream[metadata]) {\n      stream.lastTime = value.time\n      stream.lastLevel = value.level\n      stream.lastObj = value\n    }\n\n    if (parseLines) {\n      return line\n    }\n\n    return value\n  }, { autoDestroy: true })\n\n  stream._destroy = function (err, cb) {\n    const promise = close(err, cb)\n    if (promise && typeof promise.then === 'function') {\n      promise.then(cb, cb)\n    }\n  }\n\n  if (opts.expectPinoConfig === true && workerData?.workerData?.pinoWillSendConfig !== true) {\n    setImmediate(() => {\n      stream.emit('error', new Error('This transport is not compatible with the current version of pino. Please upgrade pino to the latest version.'))\n    })\n  }\n\n  if (opts.metadata !== false) {\n    stream[metadata] = true\n    stream.lastTime = 0\n    stream.lastLevel = 0\n    stream.lastObj = null\n  }\n\n  if (waitForConfig) {\n    let pinoConfig = {}\n    const configReceived = createDeferred()\n    parentPort.on('message', function handleMessage (message) {\n      if (message.code === 'PINO_CONFIG') {\n        pinoConfig = message.config\n        configReceived.resolve()\n        parentPort.off('message', handleMessage)\n      }\n    })\n\n    Object.defineProperties(stream, {\n      levels: {\n        get () { return pinoConfig.levels }\n      },\n      messageKey: {\n        get () { return pinoConfig.messageKey }\n      },\n      errorKey: {\n        get () { return pinoConfig.errorKey }\n      }\n    })\n\n    return configReceived.then(finish)\n  }\n\n  return finish()\n\n  function finish () {\n    let res = fn(stream)\n\n    if (res && typeof res.catch === 'function') {\n      res.catch((err) => {\n        stream.destroy(err)\n      })\n\n      // set it to null to not retain a reference to the promise\n      res = null\n    } else if (opts.enablePipelining && res) {\n      return Duplex.from({ writable: stream, readable: res })\n    }\n\n    return stream\n  }\n}\n\nfunction defaultClose (err, cb) {\n  process.nextTick(cb, err)\n}\n","'use strict'\n\n/**\n * A set of property names that indicate the value represents an error object.\n *\n * @typedef {string[]} K_ERROR_LIKE_KEYS\n */\n\nmodule.exports = {\n  DATE_FORMAT: 'yyyy-mm-dd HH:MM:ss.l o',\n  DATE_FORMAT_SIMPLE: 'HH:MM:ss.l',\n\n  /**\n   * @type {K_ERROR_LIKE_KEYS}\n   */\n  ERROR_LIKE_KEYS: ['err', 'error'],\n\n  MESSAGE_KEY: 'msg',\n\n  LEVEL_KEY: 'level',\n\n  LEVEL_LABEL: 'levelLabel',\n\n  TIMESTAMP_KEY: 'time',\n\n  LEVELS: {\n    default: 'USERLVL',\n    60: 'FATAL',\n    50: 'ERROR',\n    40: 'WARN',\n    30: 'INFO',\n    20: 'DEBUG',\n    10: 'TRACE'\n  },\n\n  LEVEL_NAMES: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n\n  // Object keys that probably came from a logger like Pino or Bunyan.\n  LOGGER_KEYS: [\n    'pid',\n    'hostname',\n    'name',\n    'level',\n    'time',\n    'timestamp',\n    'caller'\n  ]\n}\n","'use strict'\n\nmodule.exports = getLevelLabelData\nconst { LEVELS, LEVEL_NAMES } = require('../constants')\n\n/**\n * Given initial settings for custom levels/names and use of only custom props\n * get the level label that corresponds with a given level number\n *\n * @param {boolean} useOnlyCustomProps\n * @param {object} customLevels\n * @param {object} customLevelNames\n *\n * @returns {function} A function that takes a number level and returns the level's label string\n */\nfunction getLevelLabelData (useOnlyCustomProps, customLevels, customLevelNames) {\n  const levels = useOnlyCustomProps ? customLevels || LEVELS : Object.assign({}, LEVELS, customLevels)\n  const levelNames = useOnlyCustomProps ? customLevelNames || LEVEL_NAMES : Object.assign({}, LEVEL_NAMES, customLevelNames)\n  return function (level) {\n    let levelNum = 'default'\n    if (Number.isInteger(+level)) {\n      levelNum = Object.prototype.hasOwnProperty.call(levels, level) ? level : levelNum\n    } else {\n      levelNum = Object.prototype.hasOwnProperty.call(levelNames, level.toLowerCase()) ? levelNames[level.toLowerCase()] : levelNum\n    }\n\n    return [levels[levelNum], levelNum]\n  }\n}\n","'use strict'\n\nconst nocolor = input => input\nconst plain = {\n  default: nocolor,\n  60: nocolor,\n  50: nocolor,\n  40: nocolor,\n  30: nocolor,\n  20: nocolor,\n  10: nocolor,\n  message: nocolor,\n  greyMessage: nocolor\n}\n\nconst { createColors } = require('colorette')\nconst getLevelLabelData = require('./utils/get-level-label-data')\nconst availableColors = createColors({ useColor: true })\nconst { white, bgRed, red, yellow, green, blue, gray, cyan } = availableColors\n\nconst colored = {\n  default: white,\n  60: bgRed,\n  50: red,\n  40: yellow,\n  30: green,\n  20: blue,\n  10: gray,\n  message: cyan,\n  greyMessage: gray\n}\n\nfunction resolveCustomColoredColorizer (customColors) {\n  return customColors.reduce(\n    function (agg, [level, color]) {\n      agg[level] = typeof availableColors[color] === 'function' ? availableColors[color] : white\n\n      return agg\n    },\n    { default: white, message: cyan, greyMessage: gray }\n  )\n}\n\nfunction colorizeLevel (useOnlyCustomProps) {\n  return function (level, colorizer, { customLevels, customLevelNames } = {}) {\n    const [levelStr, levelNum] = getLevelLabelData(useOnlyCustomProps, customLevels, customLevelNames)(level)\n\n    return Object.prototype.hasOwnProperty.call(colorizer, levelNum) ? colorizer[levelNum](levelStr) : colorizer.default(levelStr)\n  }\n}\n\nfunction plainColorizer (useOnlyCustomProps) {\n  const newPlainColorizer = colorizeLevel(useOnlyCustomProps)\n  const customColoredColorizer = function (level, opts) {\n    return newPlainColorizer(level, plain, opts)\n  }\n  customColoredColorizer.message = plain.message\n  customColoredColorizer.greyMessage = plain.greyMessage\n  customColoredColorizer.colors = createColors({ useColor: false })\n  return customColoredColorizer\n}\n\nfunction coloredColorizer (useOnlyCustomProps) {\n  const newColoredColorizer = colorizeLevel(useOnlyCustomProps)\n  const customColoredColorizer = function (level, opts) {\n    return newColoredColorizer(level, colored, opts)\n  }\n  customColoredColorizer.message = colored.message\n  customColoredColorizer.greyMessage = colored.greyMessage\n  customColoredColorizer.colors = availableColors\n  return customColoredColorizer\n}\n\nfunction customColoredColorizerFactory (customColors, useOnlyCustomProps) {\n  const onlyCustomColored = resolveCustomColoredColorizer(customColors)\n  const customColored = useOnlyCustomProps ? onlyCustomColored : Object.assign({}, colored, onlyCustomColored)\n  const colorizeLevelCustom = colorizeLevel(useOnlyCustomProps)\n\n  const customColoredColorizer = function (level, opts) {\n    return colorizeLevelCustom(level, customColored, opts)\n  }\n  customColoredColorizer.colors = availableColors\n  customColoredColorizer.message = customColoredColorizer.message || customColored.message\n  customColoredColorizer.greyMessage = customColoredColorizer.greyMessage || customColored.greyMessage\n\n  return customColoredColorizer\n}\n\n/**\n * Applies colorization, if possible, to a string representing the passed in\n * `level`. For example, the default colorizer will return a \"green\" colored\n * string for the \"info\" level.\n *\n * @typedef {function} ColorizerFunc\n * @param {string|number} level In either case, the input will map to a color\n * for the specified level or to the color for `USERLVL` if the level is not\n * recognized.\n * @property {function} message Accepts one string parameter that will be\n * colorized to a predefined color.\n * @property {Colorette.Colorette} colors Available color functions based on `useColor` (or `colorize`) context\n */\n\n/**\n * Factory function get a function to colorized levels. The returned function\n * also includes a `.message(str)` method to colorize strings.\n *\n * @param {boolean} [useColors=false] When `true` a function that applies standard\n * terminal colors is returned.\n * @param {array[]} [customColors] Tuple where first item of each array is the\n * level index and the second item is the color\n * @param {boolean} [useOnlyCustomProps] When `true`, only use the provided\n * custom colors provided and not fallback to default\n *\n * @returns {ColorizerFunc} `function (level) {}` has a `.message(str)` method to\n * apply colorization to a string. The core function accepts either an integer\n * `level` or a `string` level. The integer level will map to a known level\n * string or to `USERLVL` if not known.  The string `level` will map to the same\n * colors as the integer `level` and will also default to `USERLVL` if the given\n * string is not a recognized level name.\n */\nmodule.exports = function getColorizer (useColors = false, customColors, useOnlyCustomProps) {\n  if (useColors && customColors !== undefined) {\n    return customColoredColorizerFactory(customColors, useOnlyCustomProps)\n  } else if (useColors) {\n    return coloredColorizer(useOnlyCustomProps)\n  }\n\n  return plainColorizer(useOnlyCustomProps)\n}\n","'use strict'\n\nmodule.exports = function noop () {}\n","'use strict'\n\nmodule.exports = buildSafeSonicBoom\n\nconst { isMainThread } = require('worker_threads')\nconst SonicBoom = require('sonic-boom')\nconst noop = require('./noop')\n\n/**\n * Creates a safe SonicBoom instance\n *\n * @param {object} opts Options for SonicBoom\n *\n * @returns {object} A new SonicBoom stream\n */\nfunction buildSafeSonicBoom (opts) {\n  const stream = new SonicBoom(opts)\n  stream.on('error', filterBrokenPipe)\n  // if we are sync: false, we must flush on exit\n  // NODE_V8_COVERAGE must breaks everything\n  // https://github.com/nodejs/node/issues/49344\n  if (!process.env.NODE_V8_COVERAGE && !opts.sync && isMainThread) {\n    setupOnExit(stream)\n  }\n  return stream\n\n  function filterBrokenPipe (err) {\n    if (err.code === 'EPIPE') {\n      stream.write = noop\n      stream.end = noop\n      stream.flushSync = noop\n      stream.destroy = noop\n      return\n    }\n    stream.removeListener('error', filterBrokenPipe)\n  }\n}\n\nfunction setupOnExit (stream) {\n  /* istanbul ignore next */\n  if (global.WeakRef && global.WeakMap && global.FinalizationRegistry) {\n    // This is leak free, it does not leave event handlers\n    const onExit = require('on-exit-leak-free')\n\n    onExit.register(stream, autoEnd)\n\n    stream.on('close', function () {\n      onExit.unregister(stream)\n    })\n  }\n}\n\n/* istanbul ignore next */\nfunction autoEnd (stream, eventName) {\n  // This check is needed only on some platforms\n\n  if (stream.destroyed) {\n    return\n  }\n\n  if (eventName === 'beforeExit') {\n    // We still have an event loop, let's use it\n    stream.flush()\n    stream.on('drain', function () {\n      stream.end()\n    })\n  } else {\n    // We do not have an event loop, so flush synchronously\n    stream.flushSync()\n  }\n}\n","'use strict'\n\nmodule.exports = isValidDate\n\n/**\n * Checks if the argument is a JS Date and not 'Invalid Date'.\n *\n * @param {Date} date The date to check.\n *\n * @returns {boolean} true if the argument is a JS Date and not 'Invalid Date'.\n */\nfunction isValidDate (date) {\n  return date instanceof Date && !Number.isNaN(date.getTime())\n}\n","'use strict'\n\nmodule.exports = createDate\n\nconst isValidDate = require('./is-valid-date')\n\n/**\n * Constructs a JS Date from a number or string. Accepts any single number\n * or single string argument that is valid for the Date() constructor,\n * or an epoch as a string.\n *\n * @param {string|number} epoch The representation of the Date.\n *\n * @returns {Date} The constructed Date.\n */\nfunction createDate (epoch) {\n  // If epoch is already a valid argument, return the valid Date\n  let date = new Date(epoch)\n  if (isValidDate(date)) {\n    return date\n  }\n\n  // Convert to a number to permit epoch as a string\n  date = new Date(+epoch)\n  return date\n}\n","'use strict'\n\nmodule.exports = splitPropertyKey\n\n/**\n * Splits the property key delimited by a dot character but not when it is preceded\n * by a backslash.\n *\n * @param {string} key A string identifying the property.\n *\n * @returns {string[]} Returns a list of string containing each delimited property.\n * e.g. `'prop2\\.domain\\.corp.prop2'` should return [ 'prop2.domain.com', 'prop2' ]\n */\nfunction splitPropertyKey (key) {\n  const result = []\n  let backslash = false\n  let segment = ''\n\n  for (let i = 0; i < key.length; i++) {\n    const c = key.charAt(i)\n\n    if (c === '\\\\') {\n      backslash = true\n      continue\n    }\n\n    if (backslash) {\n      backslash = false\n      segment += c\n      continue\n    }\n\n    /* Non-escaped dot, push to result */\n    if (c === '.') {\n      result.push(segment)\n      segment = ''\n      continue\n    }\n\n    segment += c\n  }\n\n  /* Push last entry to result */\n  if (segment.length) {\n    result.push(segment)\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = getPropertyValue\n\nconst splitPropertyKey = require('./split-property-key')\n\n/**\n * Gets a specified property from an object if it exists.\n *\n * @param {object} obj The object to be searched.\n * @param {string|string[]} property A string, or an array of strings, identifying\n * the property to be retrieved from the object.\n * Accepts nested properties delimited by a `.`.\n * Delimiter can be escaped to preserve property names that contain the delimiter.\n * e.g. `'prop1.prop2'` or `'prop2\\.domain\\.corp.prop2'`.\n *\n * @returns {*}\n */\nfunction getPropertyValue (obj, property) {\n  const props = Array.isArray(property) ? property : splitPropertyKey(property)\n\n  for (const prop of props) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      return\n    }\n    obj = obj[prop]\n  }\n\n  return obj\n}\n","'use strict'\n\nmodule.exports = deleteLogProperty\n\nconst getPropertyValue = require('./get-property-value')\nconst splitPropertyKey = require('./split-property-key')\n\n/**\n * Deletes a specified property from a log object if it exists.\n * This function mutates the passed in `log` object.\n *\n * @param {object} log The log object to be modified.\n * @param {string} property A string identifying the property to be deleted from\n * the log object. Accepts nested properties delimited by a `.`\n * Delimiter can be escaped to preserve property names that contain the delimiter.\n * e.g. `'prop1.prop2'` or `'prop2\\.domain\\.corp.prop2'`\n */\nfunction deleteLogProperty (log, property) {\n  const props = splitPropertyKey(property)\n  const propToDelete = props.pop()\n\n  log = getPropertyValue(log, props)\n\n  /* istanbul ignore else */\n  if (log !== null && typeof log === 'object' && Object.prototype.hasOwnProperty.call(log, propToDelete)) {\n    delete log[propToDelete]\n  }\n}\n","export interface Cache {\n  has: (value: any) => boolean;\n  set: (key: any, value: any) => void;\n  get: (key: any) => any;\n}\n\nconst { toString: toStringFunction } = Function.prototype;\nconst { create } = Object;\nconst { toString: toStringObject } = Object.prototype;\n\n/**\n * @classdesc Fallback cache for when WeakMap is not natively supported\n */\nclass LegacyCache {\n  private _keys: any[] = [];\n  private _values: any[] = [];\n\n  has(key: any) {\n    return !!~this._keys.indexOf(key);\n  }\n\n  get(key: any) {\n    return this._values[this._keys.indexOf(key)];\n  }\n\n  set(key: any, value: any) {\n    this._keys.push(key);\n    this._values.push(value);\n  }\n}\n\nfunction createCacheLegacy(): Cache {\n  return new LegacyCache();\n}\n\nfunction createCacheModern(): Cache {\n  return new WeakMap();\n}\n\n/**\n * Get a new cache object to prevent circular references.\n */\nexport const createCache =\n  typeof WeakMap !== 'undefined' ? createCacheModern : createCacheLegacy;\n\n/**\n * Get an empty version of the object with the same prototype it has.\n */\nexport function getCleanClone(prototype: any): any {\n  if (!prototype) {\n    return create(null);\n  }\n\n  const Constructor = prototype.constructor;\n\n  if (Constructor === Object) {\n    return prototype === Object.prototype ? {} : create(prototype);\n  }\n\n  if (\n    Constructor &&\n    ~toStringFunction.call(Constructor).indexOf('[native code]')\n  ) {\n    try {\n      return new Constructor();\n    } catch {}\n  }\n\n  return create(prototype);\n}\n\nfunction getRegExpFlagsLegacy(regExp: RegExp): string {\n  let flags = '';\n\n  if (regExp.global) {\n    flags += 'g';\n  }\n\n  if (regExp.ignoreCase) {\n    flags += 'i';\n  }\n\n  if (regExp.multiline) {\n    flags += 'm';\n  }\n\n  if (regExp.unicode) {\n    flags += 'u';\n  }\n\n  if (regExp.sticky) {\n    flags += 'y';\n  }\n\n  return flags;\n}\n\nfunction getRegExpFlagsModern(regExp: RegExp): string {\n  return regExp.flags;\n}\n\n/**\n * Get the flags to apply to the copied regexp.\n */\nexport const getRegExpFlags =\n  /test/g.flags === 'g' ? getRegExpFlagsModern : getRegExpFlagsLegacy;\n\nfunction getTagLegacy(value: any): string {\n  const type = toStringObject.call(value);\n\n  return type.substring(8, type.length - 1);\n}\n\nfunction getTagModern(value: any): string {\n  return value[Symbol.toStringTag] || getTagLegacy(value);\n}\n\n/**\n * Get the tag of the value passed, so that the correct copier can be used.\n */\nexport const getTag =\n  typeof Symbol !== 'undefined' ? getTagModern : getTagLegacy;\n","import { getCleanClone, getRegExpFlags } from './utils';\n\nimport type { Cache } from './utils';\n\nexport type InternalCopier<Value> = (value: Value, state: State) => Value;\n\nexport interface State {\n  Constructor: any;\n  cache: Cache;\n  copier: InternalCopier<any>;\n  prototype: any;\n}\n\nconst {\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n} = Object;\nconst { hasOwnProperty, propertyIsEnumerable } = Object.prototype;\n\nconst SUPPORTS_SYMBOL = typeof getOwnPropertySymbols === 'function';\n\nfunction getStrictPropertiesModern(object: any): Array<string | symbol> {\n  return (getOwnPropertyNames(object) as Array<string | symbol>).concat(\n    getOwnPropertySymbols(object)\n  );\n}\n\n/**\n * Get the properites used when copying objects strictly. This includes both keys and symbols.\n */\nconst getStrictProperties = SUPPORTS_SYMBOL\n  ? getStrictPropertiesModern\n  : getOwnPropertyNames;\n\n/**\n * Striclty copy all properties contained on the object.\n */\nfunction copyOwnPropertiesStrict<Value>(\n  value: Value,\n  clone: Value,\n  state: State\n): Value {\n  const properties = getStrictProperties(value);\n\n  for (\n    let index = 0, length = properties.length, property, descriptor;\n    index < length;\n    ++index\n  ) {\n    property = properties[index];\n\n    if (property === 'callee' || property === 'caller') {\n      continue;\n    }\n\n    descriptor = getOwnPropertyDescriptor(value, property);\n\n    if (!descriptor) {\n      // In extra edge cases where the property descriptor cannot be retrived, fall back to\n      // the loose assignment.\n      (clone as any)[property] = state.copier((value as any)[property], state);\n      continue;\n    }\n\n    // Only clone the value if actually a value, not a getter / setter.\n    if (!descriptor.get && !descriptor.set) {\n      descriptor.value = state.copier(descriptor.value, state);\n    }\n\n    try {\n      defineProperty(clone, property, descriptor);\n    } catch (error) {\n      // Tee above can fail on node in edge cases, so fall back to the loose assignment.\n      (clone as any)[property] = descriptor.value;\n    }\n  }\n\n  return clone;\n}\n\n/**\n * Deeply copy the indexed values in the array.\n */\nexport function copyArrayLoose(array: any[], state: State) {\n  const clone = new state.Constructor();\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(array, clone);\n\n  for (let index = 0, length = array.length; index < length; ++index) {\n    clone[index] = state.copier(array[index], state);\n  }\n\n  return clone;\n}\n\n/**\n * Deeply copy the indexed values in the array, as well as any custom properties.\n */\nexport function copyArrayStrict<Value extends any[]>(\n  array: Value,\n  state: State\n) {\n  const clone = new state.Constructor() as Value;\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(array, clone);\n\n  return copyOwnPropertiesStrict(array, clone, state);\n}\n\n/**\n * Copy the contents of the ArrayBuffer.\n */\nexport function copyArrayBuffer<Value extends ArrayBuffer>(\n  arrayBuffer: Value,\n  _state: State\n): Value {\n  return arrayBuffer.slice(0) as Value;\n}\n\n/**\n * Create a new Blob with the contents of the original.\n */\nexport function copyBlob<Value extends Blob>(\n  blob: Value,\n  _state: State\n): Value {\n  return blob.slice(0, blob.size, blob.type) as Value;\n}\n\n/**\n * Create a new DataView with the contents of the original.\n */\nexport function copyDataView<Value extends DataView>(\n  dataView: Value,\n  state: State\n): Value {\n  return new state.Constructor(copyArrayBuffer(dataView.buffer, state));\n}\n\n/**\n * Create a new Date based on the time of the original.\n */\nexport function copyDate<Value extends Date>(date: Value, state: State): Value {\n  return new state.Constructor(date.getTime());\n}\n\n/**\n * Deeply copy the keys and values of the original.\n */\nexport function copyMapLoose<Value extends Map<any, any>>(\n  map: Value,\n  state: State\n): Value {\n  const clone = new state.Constructor() as Value;\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(map, clone);\n\n  map.forEach((value, key) => {\n    clone.set(key, state.copier(value, state));\n  });\n\n  return clone;\n}\n\n/**\n * Deeply copy the keys and values of the original, as well as any custom properties.\n */\nexport function copyMapStrict<Value extends Map<any, any>>(\n  map: Value,\n  state: State\n) {\n  return copyOwnPropertiesStrict(map, copyMapLoose(map, state), state);\n}\n\nfunction copyObjectLooseLegacy<Value extends Record<string, any>>(\n  object: Value,\n  state: State\n): Value {\n  const clone: any = getCleanClone(state.prototype);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(object, clone);\n\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      clone[key] = state.copier(object[key], state);\n    }\n  }\n\n  return clone;\n}\n\nfunction copyObjectLooseModern<Value extends Record<string, any>>(\n  object: Value,\n  state: State\n): Value {\n  const clone = getCleanClone(state.prototype);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(object, clone);\n\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      clone[key] = state.copier(object[key], state);\n    }\n  }\n\n  const symbols = getOwnPropertySymbols(object);\n\n  for (\n    let index = 0, length = symbols.length, symbol;\n    index < length;\n    ++index\n  ) {\n    symbol = symbols[index];\n\n    if (propertyIsEnumerable.call(object, symbol)) {\n      clone[symbol] = state.copier((object as any)[symbol], state);\n    }\n  }\n\n  return clone;\n}\n\n/**\n * Deeply copy the properties (keys and symbols) and values of the original.\n */\nexport const copyObjectLoose = SUPPORTS_SYMBOL\n  ? copyObjectLooseModern\n  : copyObjectLooseLegacy;\n\n/**\n * Deeply copy the properties (keys and symbols) and values of the original, as well\n * as any hidden or non-enumerable properties.\n */\nexport function copyObjectStrict<Value extends Record<string, any>>(\n  object: Value,\n  state: State\n): Value {\n  const clone = getCleanClone(state.prototype);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(object, clone);\n\n  return copyOwnPropertiesStrict(object, clone, state);\n}\n\n/**\n * Create a new primitive wrapper from the value of the original.\n */\nexport function copyPrimitiveWrapper<\n  // Specifically use the object constructor types\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  Value extends Boolean | Number | String\n>(primitiveObject: Value, state: State): Value {\n  return new state.Constructor(primitiveObject.valueOf());\n}\n\n/**\n * Create a new RegExp based on the value and flags of the original.\n */\nexport function copyRegExp<Value extends RegExp>(\n  regExp: Value,\n  state: State\n): Value {\n  const clone = new state.Constructor(\n    regExp.source,\n    getRegExpFlags(regExp)\n  ) as Value;\n\n  clone.lastIndex = regExp.lastIndex;\n\n  return clone;\n}\n\n/**\n * Return the original value (an identity function).\n *\n * @note\n * THis is used for objects that cannot be copied, such as WeakMap.\n */\nexport function copySelf<Value>(value: Value, _state: State): Value {\n  return value;\n}\n\n/**\n * Deeply copy the values of the original.\n */\nexport function copySetLoose<Value extends Set<any>>(\n  set: Value,\n  state: State\n): Value {\n  const clone = new state.Constructor() as Value;\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(set, clone);\n\n  set.forEach((value) => {\n    clone.add(state.copier(value, state));\n  });\n\n  return clone;\n}\n\n/**\n * Deeply copy the values of the original, as well as any custom properties.\n */\nexport function copySetStrict<Value extends Set<any>>(\n  set: Value,\n  state: State\n): Value {\n  return copyOwnPropertiesStrict(set, copySetLoose(set, state), state);\n}\n","import {\n  copyArrayBuffer,\n  copyArrayLoose,\n  copyArrayStrict,\n  copyBlob,\n  copyDataView,\n  copyDate,\n  copyMapLoose,\n  copyMapStrict,\n  copyObjectLoose,\n  copyObjectStrict,\n  copyPrimitiveWrapper,\n  copyRegExp,\n  copySelf,\n  copySetLoose,\n  copySetStrict,\n} from './copier';\nimport { createCache, getTag } from './utils';\n\nimport type { InternalCopier, State } from './copier';\n\nexport type { State } from './copier';\n\nconst { isArray } = Array;\nconst { assign } = Object;\nconst getPrototypeOf = Object.getPrototypeOf || ((obj) => obj.__proto__)\n\nexport interface CreateCopierOptions {\n  array?: InternalCopier<any[]>;\n  arrayBuffer?: InternalCopier<ArrayBuffer>;\n  blob?: InternalCopier<Blob>;\n  dataView?: InternalCopier<DataView>;\n  date?: InternalCopier<Date>;\n  error?: InternalCopier<any>;\n  map?: InternalCopier<Map<any, any>>;\n  object?: InternalCopier<Record<string, any>>;\n  regExp?: InternalCopier<RegExp>;\n  set?: InternalCopier<Set<any>>;\n}\n\nconst DEFAULT_LOOSE_OPTIONS: Required<CreateCopierOptions> = {\n  array: copyArrayLoose,\n  arrayBuffer: copyArrayBuffer,\n  blob: copyBlob,\n  dataView: copyDataView,\n  date: copyDate,\n  error: copySelf,\n  map: copyMapLoose,\n  object: copyObjectLoose,\n  regExp: copyRegExp,\n  set: copySetLoose,\n};\nconst DEFAULT_STRICT_OPTIONS: Required<CreateCopierOptions> = assign(\n  {},\n  DEFAULT_LOOSE_OPTIONS,\n  {\n    array: copyArrayStrict,\n    map: copyMapStrict,\n    object: copyObjectStrict,\n    set: copySetStrict,\n  }\n);\n\n/**\n * Get the copiers used for each specific object tag.\n */\nfunction getTagSpecificCopiers(\n  options: Required<CreateCopierOptions>\n): Record<string, InternalCopier<any>> {\n  return {\n    Arguments: options.object,\n    Array: options.array,\n    ArrayBuffer: options.arrayBuffer,\n    Blob: options.blob,\n    Boolean: copyPrimitiveWrapper,\n    DataView: options.dataView,\n    Date: options.date,\n    Error: options.error,\n    Float32Array: options.arrayBuffer,\n    Float64Array: options.arrayBuffer,\n    Int8Array: options.arrayBuffer,\n    Int16Array: options.arrayBuffer,\n    Int32Array: options.arrayBuffer,\n    Map: options.map,\n    Number: copyPrimitiveWrapper,\n    Object: options.object,\n    Promise: copySelf,\n    RegExp: options.regExp,\n    Set: options.set,\n    String: copyPrimitiveWrapper,\n    WeakMap: copySelf,\n    WeakSet: copySelf,\n    Uint8Array: options.arrayBuffer,\n    Uint8ClampedArray: options.arrayBuffer,\n    Uint16Array: options.arrayBuffer,\n    Uint32Array: options.arrayBuffer,\n    Uint64Array: options.arrayBuffer,\n  };\n}\n\n/**\n * Create a custom copier based on the object-specific copy methods passed.\n */\nexport function createCopier(options: CreateCopierOptions) {\n  const normalizedOptions = assign({}, DEFAULT_LOOSE_OPTIONS, options);\n  const tagSpecificCopiers = getTagSpecificCopiers(normalizedOptions);\n  const { Array: array, Object: object } = tagSpecificCopiers;\n\n  function copier(value: any, state: State): any {\n    state.prototype = state.Constructor = undefined;\n\n    if (!value || typeof value !== 'object') {\n      return value;\n    }\n\n    if (state.cache.has(value)) {\n      return state.cache.get(value);\n    }\n\n    state.prototype = getPrototypeOf(value);\n    state.Constructor = state.prototype && state.prototype.constructor;\n\n    // plain objects\n    if (!state.Constructor || state.Constructor === Object) {\n      return object(value, state);\n    }\n\n    // arrays\n    if (isArray(value)) {\n      return array(value, state);\n    }\n\n    const tagSpecificCopier = tagSpecificCopiers[getTag(value)];\n\n    if (tagSpecificCopier) {\n      return tagSpecificCopier(value, state);\n    }\n\n    return typeof value.then === 'function' ? value : object(value, state);\n  }\n\n  return function copy<Value>(value: Value): Value {\n    return copier(value, {\n      Constructor: undefined,\n      cache: createCache(),\n      copier,\n      prototype: undefined,\n    });\n  };\n}\n\n/**\n * Create a custom copier based on the object-specific copy methods passed, defaulting to the\n * same internals as `copyStrict`.\n */\nexport function createStrictCopier(options: CreateCopierOptions) {\n  return createCopier(assign({}, DEFAULT_STRICT_OPTIONS, options));\n}\n\n/**\n * Copy an value deeply as much as possible, where strict recreation of object properties\n * are maintained. All properties (including non-enumerable ones) are copied with their\n * original property descriptors on both objects and arrays.\n */\nexport const copyStrict = createStrictCopier({});\n\n/**\n * Copy an value deeply as much as possible.\n */\nexport default createCopier({});\n","'use strict'\n\nmodule.exports = filterLog\n\nconst { createCopier } = require('fast-copy')\nconst fastCopy = createCopier({})\n\nconst deleteLogProperty = require('./delete-log-property')\n\n/**\n * @typedef {object} FilterLogParams\n * @property {object} log The log object to be modified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Filter a log object by removing or including keys accordingly.\n * When `includeKeys` is passed, `ignoredKeys` will be ignored.\n * One of ignoreKeys or includeKeys must be pass in.\n *\n * @param {FilterLogParams} input\n *\n * @returns {object} A new `log` object instance that\n *  either only includes the keys in ignoreKeys\n *  or does not include those in ignoredKeys.\n */\nfunction filterLog ({ log, context }) {\n  const { ignoreKeys, includeKeys } = context\n  const logCopy = fastCopy(log)\n\n  if (includeKeys) {\n    const logIncluded = {}\n\n    includeKeys.forEach((key) => {\n      logIncluded[key] = logCopy[key]\n    })\n    return logIncluded\n  }\n\n  ignoreKeys.forEach((ignoreKey) => {\n    deleteLogProperty(logCopy, ignoreKey)\n  })\n  return logCopy\n}\n","\"use strict\";function _typeof(obj){\"@babel/helpers - typeof\";if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj}}return _typeof(obj)}(function(global){var _arguments=arguments;var dateFormat=function(){var token=/d{1,4}|D{3,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|W{1,2}|[LlopSZN]|\"[^\"]*\"|'[^']*'/g;var timezone=/\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;var timezoneClip=/[^-+\\dA-Z]/g;return function(date,mask,utc,gmt){if(_arguments.length===1&&kindOf(date)===\"string\"&&!/\\d/.test(date)){mask=date;date=undefined}date=date||date===0?date:new Date;if(!(date instanceof Date)){date=new Date(date)}if(isNaN(date)){throw TypeError(\"Invalid date\")}mask=String(dateFormat.masks[mask]||mask||dateFormat.masks[\"default\"]);var maskSlice=mask.slice(0,4);if(maskSlice===\"UTC:\"||maskSlice===\"GMT:\"){mask=mask.slice(4);utc=true;if(maskSlice===\"GMT:\"){gmt=true}}var _=function _(){return utc?\"getUTC\":\"get\"};var _d=function d(){return date[_()+\"Date\"]()};var D=function D(){return date[_()+\"Day\"]()};var _m=function m(){return date[_()+\"Month\"]()};var y=function y(){return date[_()+\"FullYear\"]()};var _H=function H(){return date[_()+\"Hours\"]()};var _M=function M(){return date[_()+\"Minutes\"]()};var _s=function s(){return date[_()+\"Seconds\"]()};var _L=function L(){return date[_()+\"Milliseconds\"]()};var _o=function o(){return utc?0:date.getTimezoneOffset()};var _W=function W(){return getWeek(date)};var _N=function N(){return getDayOfWeek(date)};var flags={d:function d(){return _d()},dd:function dd(){return pad(_d())},ddd:function ddd(){return dateFormat.i18n.dayNames[D()]},DDD:function DDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:dateFormat.i18n.dayNames[D()],short:true})},dddd:function dddd(){return dateFormat.i18n.dayNames[D()+7]},DDDD:function DDDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:dateFormat.i18n.dayNames[D()+7]})},m:function m(){return _m()+1},mm:function mm(){return pad(_m()+1)},mmm:function mmm(){return dateFormat.i18n.monthNames[_m()]},mmmm:function mmmm(){return dateFormat.i18n.monthNames[_m()+12]},yy:function yy(){return String(y()).slice(2)},yyyy:function yyyy(){return pad(y(),4)},h:function h(){return _H()%12||12},hh:function hh(){return pad(_H()%12||12)},H:function H(){return _H()},HH:function HH(){return pad(_H())},M:function M(){return _M()},MM:function MM(){return pad(_M())},s:function s(){return _s()},ss:function ss(){return pad(_s())},l:function l(){return pad(_L(),3)},L:function L(){return pad(Math.floor(_L()/10))},t:function t(){return _H()<12?dateFormat.i18n.timeNames[0]:dateFormat.i18n.timeNames[1]},tt:function tt(){return _H()<12?dateFormat.i18n.timeNames[2]:dateFormat.i18n.timeNames[3]},T:function T(){return _H()<12?dateFormat.i18n.timeNames[4]:dateFormat.i18n.timeNames[5]},TT:function TT(){return _H()<12?dateFormat.i18n.timeNames[6]:dateFormat.i18n.timeNames[7]},Z:function Z(){return gmt?\"GMT\":utc?\"UTC\":(String(date).match(timezone)||[\"\"]).pop().replace(timezoneClip,\"\").replace(/GMT\\+0000/g,\"UTC\")},o:function o(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60)*100+Math.abs(_o())%60,4)},p:function p(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60),2)+\":\"+pad(Math.floor(Math.abs(_o())%60),2)},S:function S(){return[\"th\",\"st\",\"nd\",\"rd\"][_d()%10>3?0:(_d()%100-_d()%10!=10)*_d()%10]},W:function W(){return _W()},WW:function WW(){return pad(_W())},N:function N(){return _N()}};return mask.replace(token,function(match){if(match in flags){return flags[match]()}return match.slice(1,match.length-1)})}}();dateFormat.masks={default:\"ddd mmm dd yyyy HH:MM:ss\",shortDate:\"m/d/yy\",paddedShortDate:\"mm/dd/yyyy\",mediumDate:\"mmm d, yyyy\",longDate:\"mmmm d, yyyy\",fullDate:\"dddd, mmmm d, yyyy\",shortTime:\"h:MM TT\",mediumTime:\"h:MM:ss TT\",longTime:\"h:MM:ss TT Z\",isoDate:\"yyyy-mm-dd\",isoTime:\"HH:MM:ss\",isoDateTime:\"yyyy-mm-dd'T'HH:MM:sso\",isoUtcDateTime:\"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",expiresHeaderFormat:\"ddd, dd mmm yyyy HH:MM:ss Z\"};dateFormat.i18n={dayNames:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],monthNames:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],timeNames:[\"a\",\"p\",\"am\",\"pm\",\"A\",\"P\",\"AM\",\"PM\"]};var pad=function pad(val,len){val=String(val);len=len||2;while(val.length<len){val=\"0\"+val}return val};var getDayName=function getDayName(_ref){var y=_ref.y,m=_ref.m,d=_ref.d,_=_ref._,dayName=_ref.dayName,_ref$short=_ref[\"short\"],_short=_ref$short===void 0?false:_ref$short;var today=new Date;var yesterday=new Date;yesterday.setDate(yesterday[_+\"Date\"]()-1);var tomorrow=new Date;tomorrow.setDate(tomorrow[_+\"Date\"]()+1);var today_d=function today_d(){return today[_+\"Date\"]()};var today_m=function today_m(){return today[_+\"Month\"]()};var today_y=function today_y(){return today[_+\"FullYear\"]()};var yesterday_d=function yesterday_d(){return yesterday[_+\"Date\"]()};var yesterday_m=function yesterday_m(){return yesterday[_+\"Month\"]()};var yesterday_y=function yesterday_y(){return yesterday[_+\"FullYear\"]()};var tomorrow_d=function tomorrow_d(){return tomorrow[_+\"Date\"]()};var tomorrow_m=function tomorrow_m(){return tomorrow[_+\"Month\"]()};var tomorrow_y=function tomorrow_y(){return tomorrow[_+\"FullYear\"]()};if(today_y()===y&&today_m()===m&&today_d()===d){return _short?\"Tdy\":\"Today\"}else if(yesterday_y()===y&&yesterday_m()===m&&yesterday_d()===d){return _short?\"Ysd\":\"Yesterday\"}else if(tomorrow_y()===y&&tomorrow_m()===m&&tomorrow_d()===d){return _short?\"Tmw\":\"Tomorrow\"}return dayName};var getWeek=function getWeek(date){var targetThursday=new Date(date.getFullYear(),date.getMonth(),date.getDate());targetThursday.setDate(targetThursday.getDate()-(targetThursday.getDay()+6)%7+3);var firstThursday=new Date(targetThursday.getFullYear(),0,4);firstThursday.setDate(firstThursday.getDate()-(firstThursday.getDay()+6)%7+3);var ds=targetThursday.getTimezoneOffset()-firstThursday.getTimezoneOffset();targetThursday.setHours(targetThursday.getHours()-ds);var weekDiff=(targetThursday-firstThursday)/(864e5*7);return 1+Math.floor(weekDiff)};var getDayOfWeek=function getDayOfWeek(date){var dow=date.getDay();if(dow===0){dow=7}return dow};var kindOf=function kindOf(val){if(val===null){return\"null\"}if(val===undefined){return\"undefined\"}if(_typeof(val)!==\"object\"){return _typeof(val)}if(Array.isArray(val)){return\"array\"}return{}.toString.call(val).slice(8,-1).toLowerCase()};if(typeof define===\"function\"&&define.amd){define(function(){return dateFormat})}else if((typeof exports===\"undefined\"?\"undefined\":_typeof(exports))===\"object\"){module.exports=dateFormat}else{global.dateFormat=dateFormat}})(void 0);","'use strict'\n\nmodule.exports = formatTime\n\nconst {\n  DATE_FORMAT,\n  DATE_FORMAT_SIMPLE\n} = require('../constants')\n\nconst dateformat = require('dateformat')\nconst createDate = require('./create-date')\nconst isValidDate = require('./is-valid-date')\n\n/**\n * Converts a given `epoch` to a desired display format.\n *\n * @param {number|string} epoch The time to convert. May be any value that is\n * valid for `new Date()`.\n * @param {boolean|string} [translateTime=false] When `false`, the given `epoch`\n * will simply be returned. When `true`, the given `epoch` will be converted\n * to a string at UTC using the `DATE_FORMAT` constant. If `translateTime` is\n * a string, the following rules are available:\n *\n * - `<format string>`: The string is a literal format string. This format\n * string will be used to interpret the `epoch` and return a display string\n * at UTC.\n * - `SYS:STANDARD`: The returned display string will follow the `DATE_FORMAT`\n * constant at the system's local timezone.\n * - `SYS:<format string>`: The returned display string will follow the given\n * `<format string>` at the system's local timezone.\n * - `UTC:<format string>`: The returned display string will follow the given\n * `<format string>` at UTC.\n *\n * @returns {number|string} The formatted time.\n */\nfunction formatTime (epoch, translateTime = false) {\n  if (translateTime === false) {\n    return epoch\n  }\n\n  const instant = createDate(epoch)\n\n  // If the Date is invalid, do not attempt to format\n  if (!isValidDate(instant)) {\n    return epoch\n  }\n\n  if (translateTime === true) {\n    return dateformat(instant, DATE_FORMAT_SIMPLE)\n  }\n\n  const upperFormat = translateTime.toUpperCase()\n  if (upperFormat === 'SYS:STANDARD') {\n    return dateformat(instant, DATE_FORMAT)\n  }\n\n  const prefix = upperFormat.substr(0, 4)\n  if (prefix === 'SYS:' || prefix === 'UTC:') {\n    if (prefix === 'UTC:') {\n      return dateformat(instant, translateTime)\n    }\n    return dateformat(instant, translateTime.slice(4))\n  }\n\n  return dateformat(instant, `UTC:${translateTime}`)\n}\n","'use strict'\n\nmodule.exports = handleCustomLevelsNamesOpts\n\n/**\n * Parse a CSV string or options object that maps level\n * labels to level values.\n *\n * @param {string|object} cLevels An object mapping level\n * names to level values, e.g. `{ info: 30, debug: 65 }`, or a\n * CSV string in the format `level_name:level_value`, e.g.\n * `info:30,debug:65`.\n *\n * @returns {object} An object mapping levels names to level values\n * e.g. `{ info: 30, debug: 65 }`.\n */\nfunction handleCustomLevelsNamesOpts (cLevels) {\n  if (!cLevels) return {}\n\n  if (typeof cLevels === 'string') {\n    return cLevels\n      .split(',')\n      .reduce((agg, value, idx) => {\n        const [levelName, levelNum = idx] = value.split(':')\n        agg[levelName.toLowerCase()] = levelNum\n        return agg\n      }, {})\n  } else if (Object.prototype.toString.call(cLevels) === '[object Object]') {\n    return Object\n      .keys(cLevels)\n      .reduce((agg, levelName) => {\n        agg[levelName.toLowerCase()] = cLevels[levelName]\n        return agg\n      }, {})\n  } else {\n    return {}\n  }\n}\n","'use strict'\n\nmodule.exports = handleCustomLevelsOpts\n\n/**\n * Parse a CSV string or options object that specifies\n * configuration for custom levels.\n *\n * @param {string|object} cLevels An object mapping level\n * names to values, e.g. `{ info: 30, debug: 65 }`, or a\n * CSV string in the format `level_name:level_value`, e.g.\n * `info:30,debug:65`.\n *\n * @returns {object} An object mapping levels to labels that\n * appear in logs, e.g. `{ '30': 'INFO', '65': 'DEBUG' }`.\n */\nfunction handleCustomLevelsOpts (cLevels) {\n  if (!cLevels) return {}\n\n  if (typeof cLevels === 'string') {\n    return cLevels\n      .split(',')\n      .reduce((agg, value, idx) => {\n        const [levelName, levelNum = idx] = value.split(':')\n        agg[levelNum] = levelName.toUpperCase()\n        return agg\n      },\n      { default: 'USERLVL' })\n  } else if (Object.prototype.toString.call(cLevels) === '[object Object]') {\n    return Object\n      .keys(cLevels)\n      .reduce((agg, levelName) => {\n        agg[cLevels[levelName]] = levelName.toUpperCase()\n        return agg\n      }, { default: 'USERLVL' })\n  } else {\n    return {}\n  }\n}\n","'use strict'\n\nmodule.exports = interpretConditionals\n\nconst getPropertyValue = require('./get-property-value')\n\n/**\n * Translates all conditional blocks from within the messageFormat. Translates\n * any matching {if key}{key}{end} statements and returns everything between\n * if and else blocks if the key provided was found in log.\n *\n * @param {MessageFormatString|MessageFormatFunction} messageFormat A format\n * string or function that defines how the logged message should be\n * conditionally formatted.\n * @param {object} log The log object to be modified.\n *\n * @returns {string} The parsed messageFormat.\n */\nfunction interpretConditionals (messageFormat, log) {\n  messageFormat = messageFormat.replace(/{if (.*?)}(.*?){end}/g, replacer)\n\n  // Remove non-terminated if blocks\n  messageFormat = messageFormat.replace(/{if (.*?)}/g, '')\n  // Remove floating end blocks\n  messageFormat = messageFormat.replace(/{end}/g, '')\n\n  return messageFormat.replace(/\\s+/g, ' ').trim()\n\n  function replacer (_, key, value) {\n    const propertyValue = getPropertyValue(log, key)\n    if (propertyValue && value.includes(key)) {\n      return value.replace(new RegExp('{' + key + '}', 'g'), propertyValue)\n    } else {\n      return ''\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = isObject\n\nfunction isObject (input) {\n  return Object.prototype.toString.apply(input) === '[object Object]'\n}\n","'use strict'\n\nmodule.exports = joinLinesWithIndentation\n\n/**\n * @typedef {object} JoinLinesWithIndentationParams\n * @property {string} input The string to split and reformat.\n * @property {string} [ident] The indentation string. Default: `    ` (4 spaces).\n * @property {string} [eol] The end of line sequence to use when rejoining\n * the lines. Default: `'\\n'`.\n */\n\n/**\n * Given a string with line separators, either `\\r\\n` or `\\n`, add indentation\n * to all lines subsequent to the first line and rejoin the lines using an\n * end of line sequence.\n *\n * @param {JoinLinesWithIndentationParams} input\n *\n * @returns {string} A string with lines subsequent to the first indented\n * with the given indentation sequence.\n */\nfunction joinLinesWithIndentation ({ input, ident = '    ', eol = '\\n' }) {\n  const lines = input.split(/\\r?\\n/)\n  for (let i = 1; i < lines.length; i += 1) {\n    lines[i] = ident + lines[i]\n  }\n  return lines.join(eol)\n}\n","'use strict'\n\nmodule.exports = parseFactoryOptions\n\nconst {\n  LEVEL_NAMES\n} = require('../constants')\nconst colors = require('../colors')\nconst handleCustomLevelsOpts = require('./handle-custom-levels-opts')\nconst handleCustomLevelsNamesOpts = require('./handle-custom-levels-names-opts')\nconst handleLevelLabelData = require('./get-level-label-data')\n\n/**\n * A `PrettyContext` is an object to be used by the various functions that\n * process log data. It is derived from the provided {@link PinoPrettyOptions}.\n * It may be used as a `this` context.\n *\n * @typedef {object} PrettyContext\n * @property {string} EOL The escape sequence chosen as the line terminator.\n * @property {string} IDENT The string to use as the indentation sequence.\n * @property {ColorizerFunc} colorizer A configured colorizer function.\n * @property {Array[Array<number, string>]} customColors A set of custom color\n * names associated with level numbers.\n * @property {object} customLevelNames A hash of level numbers to level names,\n * e.g. `{ 30: \"info\" }`.\n * @property {object} customLevels A hash of level names to level numbers,\n * e.g. `{ info: 30 }`.\n * @property {CustomPrettifiers} customPrettifiers A hash of custom prettifier\n * functions.\n * @property {object} customProperties Comprised of `customLevels` and\n * `customLevelNames` if such options are provided.\n * @property {string[]} errorLikeObjectKeys The key names in the log data that\n * should be considered as holding error objects.\n * @property {string[]} errorProps A list of error object keys that should be\n * included in the output.\n * @property {function} getLevelLabelData Pass a numeric level to return [levelLabelString,levelNum]\n * @property {boolean} hideObject Indicates the prettifier should omit objects\n * in the output.\n * @property {string[]} ignoreKeys Set of log data keys to omit.\n * @property {string[]} includeKeys Opposite of `ignoreKeys`.\n * @property {boolean} levelFirst Indicates the level should be printed first.\n * @property {string} levelKey Name of the key in the log data that contains\n * the message.\n * @property {string} levelLabel Format token to represent the position of the\n * level name in the output string.\n * @property {MessageFormatString|MessageFormatFunction} messageFormat\n * @property {string} messageKey Name of the key in the log data that contains\n * the message.\n * @property {string|number} minimumLevel The minimum log level to process\n * and output.\n * @property {ColorizerFunc} objectColorizer\n * @property {boolean} singleLine Indicates objects should be printed on a\n * single output line.\n * @property {string} timestampKey The name of the key in the log data that\n * contains the log timestamp.\n * @property {boolean} translateTime Indicates if timestamps should be\n * translated to a human-readable string.\n * @property {boolean} useOnlyCustomProps\n */\n\n/**\n * @param {PinoPrettyOptions} options The user supplied object of options.\n *\n * @returns {PrettyContext}\n */\nfunction parseFactoryOptions (options) {\n  const EOL = options.crlf ? '\\r\\n' : '\\n'\n  const IDENT = '    '\n  const {\n    customPrettifiers,\n    errorLikeObjectKeys,\n    hideObject,\n    levelFirst,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    minimumLevel,\n    singleLine,\n    timestampKey,\n    translateTime\n  } = options\n  const errorProps = options.errorProps.split(',')\n  const useOnlyCustomProps = typeof options.useOnlyCustomProps === 'boolean'\n    ? options.useOnlyCustomProps\n    : (options.useOnlyCustomProps === 'true')\n  const customLevels = handleCustomLevelsOpts(options.customLevels)\n  const customLevelNames = handleCustomLevelsNamesOpts(options.customLevels)\n  const getLevelLabelData = handleLevelLabelData(useOnlyCustomProps, customLevels, customLevelNames)\n\n  let customColors\n  if (options.customColors) {\n    if (typeof options.customColors === 'string') {\n      customColors = options.customColors.split(',').reduce((agg, value) => {\n        const [level, color] = value.split(':')\n        const condition = useOnlyCustomProps\n          ? options.customLevels\n          : customLevelNames[level] !== undefined\n        const levelNum = condition\n          ? customLevelNames[level]\n          : LEVEL_NAMES[level]\n        const colorIdx = levelNum !== undefined\n          ? levelNum\n          : level\n        agg.push([colorIdx, color])\n        return agg\n      }, [])\n    } else if (typeof options.customColors === 'object') {\n      customColors = Object.keys(options.customColors).reduce((agg, value) => {\n        const [level, color] = [value, options.customColors[value]]\n        const condition = useOnlyCustomProps\n          ? options.customLevels\n          : customLevelNames[level] !== undefined\n        const levelNum = condition\n          ? customLevelNames[level]\n          : LEVEL_NAMES[level]\n        const colorIdx = levelNum !== undefined\n          ? levelNum\n          : level\n        agg.push([colorIdx, color])\n        return agg\n      }, [])\n    } else {\n      throw new Error('options.customColors must be of type string or object.')\n    }\n  }\n\n  const customProperties = { customLevels, customLevelNames }\n  if (useOnlyCustomProps === true && !options.customLevels) {\n    customProperties.customLevels = undefined\n    customProperties.customLevelNames = undefined\n  }\n\n  const includeKeys = options.include !== undefined\n    ? new Set(options.include.split(','))\n    : undefined\n  const ignoreKeys = (!includeKeys && options.ignore)\n    ? new Set(options.ignore.split(','))\n    : undefined\n\n  const colorizer = colors(options.colorize, customColors, useOnlyCustomProps)\n  const objectColorizer = options.colorizeObjects\n    ? colorizer\n    : colors(false, [], false)\n\n  return {\n    EOL,\n    IDENT,\n    colorizer,\n    customColors,\n    customLevelNames,\n    customLevels,\n    customPrettifiers,\n    customProperties,\n    errorLikeObjectKeys,\n    errorProps,\n    getLevelLabelData,\n    hideObject,\n    ignoreKeys,\n    includeKeys,\n    levelFirst,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    minimumLevel,\n    objectColorizer,\n    singleLine,\n    timestampKey,\n    translateTime,\n    useOnlyCustomProps\n  }\n}\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","'use strict'\n\nmodule.exports = prettifyError\n\nconst joinLinesWithIndentation = require('./join-lines-with-indentation')\n\n/**\n * @typedef {object} PrettifyErrorParams\n * @property {string} keyName The key assigned to this error in the log object.\n * @property {string} lines The STRINGIFIED error. If the error field has a\n *  custom prettifier, that should be pre-applied as well.\n * @property {string} ident The indentation sequence to use.\n * @property {string} eol The EOL sequence to use.\n */\n\n/**\n * Prettifies an error string into a multi-line format.\n *\n * @param {PrettifyErrorParams} input\n *\n * @returns {string}\n */\nfunction prettifyError ({ keyName, lines, eol, ident }) {\n  let result = ''\n  const joinedLines = joinLinesWithIndentation({ input: lines, ident, eol })\n  const splitLines = `${ident}${keyName}: ${joinedLines}${eol}`.split(eol)\n\n  for (let j = 0; j < splitLines.length; j += 1) {\n    if (j !== 0) result += eol\n\n    const line = splitLines[j]\n    if (/^\\s*\"stack\"/.test(line)) {\n      const matches = /^(\\s*\"stack\":)\\s*(\".*\"),?$/.exec(line)\n      /* istanbul ignore else */\n      if (matches && matches.length === 3) {\n        const indentSize = /^\\s*/.exec(line)[0].length + 4\n        const indentation = ' '.repeat(indentSize)\n        const stackMessage = matches[2]\n        result += matches[1] + eol + indentation + JSON.parse(stackMessage).replace(/\\n/g, eol + indentation)\n      } else {\n        result += line\n      }\n    } else {\n      result += line\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = prettifyObject\n\nconst {\n  LOGGER_KEYS\n} = require('../constants')\n\nconst stringifySafe = require('fast-safe-stringify')\nconst joinLinesWithIndentation = require('./join-lines-with-indentation')\nconst prettifyError = require('./prettify-error')\n\n/**\n * @typedef {object} PrettifyObjectParams\n * @property {object} log The object to prettify.\n * @property {boolean} [excludeLoggerKeys] Indicates if known logger specific\n * keys should be excluded from prettification. Default: `true`.\n * @property {string[]} [skipKeys] A set of object keys to exclude from the\n *  * prettified result. Default: `[]`.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a standard object. Special care is taken when processing the object\n * to handle child objects that are attached to keys known to contain error\n * objects.\n *\n * @param {PrettifyObjectParams} input\n *\n * @returns {string} The prettified string. This can be as little as `''` if\n * there was nothing to prettify.\n */\nfunction prettifyObject ({\n  log,\n  excludeLoggerKeys = true,\n  skipKeys = [],\n  context\n}) {\n  const {\n    EOL: eol,\n    IDENT: ident,\n    customPrettifiers,\n    errorLikeObjectKeys: errorLikeKeys,\n    objectColorizer,\n    singleLine,\n    colorizer\n  } = context\n  const keysToIgnore = [].concat(skipKeys)\n\n  /* istanbul ignore else */\n  if (excludeLoggerKeys === true) Array.prototype.push.apply(keysToIgnore, LOGGER_KEYS)\n\n  let result = ''\n\n  // Split object keys into two categories: error and non-error\n  const { plain, errors } = Object.entries(log).reduce(({ plain, errors }, [k, v]) => {\n    if (keysToIgnore.includes(k) === false) {\n      // Pre-apply custom prettifiers, because all 3 cases below will need this\n      const pretty = typeof customPrettifiers[k] === 'function'\n        ? customPrettifiers[k](v, k, log, { colors: colorizer.colors })\n        : v\n      if (errorLikeKeys.includes(k)) {\n        errors[k] = pretty\n      } else {\n        plain[k] = pretty\n      }\n    }\n    return { plain, errors }\n  }, { plain: {}, errors: {} })\n\n  if (singleLine) {\n    // Stringify the entire object as a single JSON line\n    /* istanbul ignore else */\n    if (Object.keys(plain).length > 0) {\n      result += objectColorizer.greyMessage(stringifySafe(plain))\n    }\n    result += eol\n    // Avoid printing the escape character on escaped backslashes.\n    result = result.replace(/\\\\\\\\/gi, '\\\\')\n  } else {\n    // Put each object entry on its own line\n    Object.entries(plain).forEach(([keyName, keyValue]) => {\n      // custom prettifiers are already applied above, so we can skip it now\n      let lines = typeof customPrettifiers[keyName] === 'function'\n        ? keyValue\n        : stringifySafe(keyValue, null, 2)\n\n      if (lines === undefined) return\n\n      // Avoid printing the escape character on escaped backslashes.\n      lines = lines.replace(/\\\\\\\\/gi, '\\\\')\n\n      const joinedLines = joinLinesWithIndentation({ input: lines, ident, eol })\n      result += `${ident}${keyName}:${joinedLines.startsWith(eol) ? '' : ' '}${joinedLines}${eol}`\n    })\n  }\n\n  // Errors\n  Object.entries(errors).forEach(([keyName, keyValue]) => {\n    // custom prettifiers are already applied above, so we can skip it now\n    const lines = typeof customPrettifiers[keyName] === 'function'\n      ? keyValue\n      : stringifySafe(keyValue, null, 2)\n\n    if (lines === undefined) return\n\n    result += prettifyError({ keyName, lines, eol, ident })\n  })\n\n  return result\n}\n","'use strict'\n\nmodule.exports = prettifyErrorLog\n\nconst {\n  LOGGER_KEYS\n} = require('../constants')\n\nconst isObject = require('./is-object')\nconst joinLinesWithIndentation = require('./join-lines-with-indentation')\nconst prettifyObject = require('./prettify-object')\n\n/**\n * @typedef {object} PrettifyErrorLogParams\n * @property {object} log The error log to prettify.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Given a log object that has a `type: 'Error'` key, prettify the object and\n * return the result. In other\n *\n * @param {PrettifyErrorLogParams} input\n *\n * @returns {string} A string that represents the prettified error log.\n */\nfunction prettifyErrorLog ({ log, context }) {\n  const {\n    EOL: eol,\n    IDENT: ident,\n    errorProps: errorProperties,\n    messageKey\n  } = context\n  const stack = log.stack\n  const joinedLines = joinLinesWithIndentation({ input: stack, ident, eol })\n  let result = `${ident}${joinedLines}${eol}`\n\n  if (errorProperties.length > 0) {\n    const excludeProperties = LOGGER_KEYS.concat(messageKey, 'type', 'stack')\n    let propertiesToPrint\n    if (errorProperties[0] === '*') {\n      // Print all sibling properties except for the standard exclusions.\n      propertiesToPrint = Object.keys(log).filter(k => excludeProperties.includes(k) === false)\n    } else {\n      // Print only specified properties unless the property is a standard exclusion.\n      propertiesToPrint = errorProperties.filter(k => excludeProperties.includes(k) === false)\n    }\n\n    for (let i = 0; i < propertiesToPrint.length; i += 1) {\n      const key = propertiesToPrint[i]\n      if (key in log === false) continue\n      if (isObject(log[key])) {\n        // The nested object may have \"logger\" type keys but since they are not\n        // at the root level of the object being processed, we want to print them.\n        // Thus, we invoke with `excludeLoggerKeys: false`.\n        const prettifiedObject = prettifyObject({\n          log: log[key],\n          excludeLoggerKeys: false,\n          context: {\n            ...context,\n            IDENT: ident + ident\n          }\n        })\n        result = `${result}${ident}${key}: {${eol}${prettifiedObject}${ident}}${eol}`\n        continue\n      }\n      result = `${result}${ident}${key}: ${log[key]}${eol}`\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = prettifyLevel\n\nconst getPropertyValue = require('./get-property-value')\n\n/**\n * @typedef {object} PrettifyLevelParams\n * @property {object} log The log object.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Checks if the passed in log has a `level` value and returns a prettified\n * string for that level if so.\n *\n * @param {PrettifyLevelParams} input\n *\n * @returns {undefined|string} If `log` does not have a `level` property then\n * `undefined` will be returned. Otherwise, a string from the specified\n * `colorizer` is returned.\n */\nfunction prettifyLevel ({ log, context }) {\n  const {\n    colorizer,\n    customLevels,\n    customLevelNames,\n    levelKey,\n    getLevelLabelData\n  } = context\n  const prettifier = context.customPrettifiers?.level\n  const output = getPropertyValue(log, levelKey)\n  if (output === undefined) return undefined\n  const labelColorized = colorizer(output, { customLevels, customLevelNames })\n  if (prettifier) {\n    const [label] = getLevelLabelData(output)\n    return prettifier(output, levelKey, log, { label, labelColorized, colors: colorizer.colors })\n  }\n  return labelColorized\n}\n","'use strict'\n\nmodule.exports = prettifyMessage\n\nconst {\n  LEVELS\n} = require('../constants')\n\nconst getPropertyValue = require('./get-property-value')\nconst interpretConditionals = require('./interpret-conditionals')\n\n/**\n * @typedef {object} PrettifyMessageParams\n * @property {object} log The log object with the message to colorize.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a message string if the given `log` has a message property.\n *\n * @param {PrettifyMessageParams} input\n *\n * @returns {undefined|string} If the message key is not found, or the message\n * key is not a string, then `undefined` will be returned. Otherwise, a string\n * that is the prettified message.\n */\nfunction prettifyMessage ({ log, context }) {\n  const {\n    colorizer,\n    customLevels,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    useOnlyCustomProps\n  } = context\n  if (messageFormat && typeof messageFormat === 'string') {\n    const parsedMessageFormat = interpretConditionals(messageFormat, log)\n\n    const message = String(parsedMessageFormat).replace(\n      /{([^{}]+)}/g,\n      function (match, p1) {\n        // return log level as string instead of int\n        let level\n        if (p1 === levelLabel && (level = getPropertyValue(log, levelKey)) !== undefined) {\n          const condition = useOnlyCustomProps ? customLevels === undefined : customLevels[level] === undefined\n          return condition ? LEVELS[level] : customLevels[level]\n        }\n\n        // Parse nested key access, e.g. `{keyA.subKeyB}`.\n        return getPropertyValue(log, p1) || ''\n      })\n    return colorizer.message(message)\n  }\n  if (messageFormat && typeof messageFormat === 'function') {\n    const msg = messageFormat(log, messageKey, levelLabel, { colors: colorizer.colors })\n    return colorizer.message(msg)\n  }\n  if (messageKey in log === false) return undefined\n  if (typeof log[messageKey] !== 'string' && typeof log[messageKey] !== 'number' && typeof log[messageKey] !== 'boolean') return undefined\n  return colorizer.message(log[messageKey])\n}\n","'use strict'\n\nmodule.exports = prettifyMetadata\n\n/**\n * @typedef {object} PrettifyMetadataParams\n * @property {object} log The log that may or may not contain metadata to\n * be prettified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies metadata that is usually present in a Pino log line. It looks for\n * fields `name`, `pid`, `hostname`, and `caller` and returns a formatted string using\n * the fields it finds.\n *\n * @param {PrettifyMetadataParams} input\n *\n * @returns {undefined|string} If no metadata is found then `undefined` is\n * returned. Otherwise, a string of prettified metadata is returned.\n */\nfunction prettifyMetadata ({ log, context }) {\n  const { customPrettifiers: prettifiers, colorizer } = context\n  let line = ''\n\n  if (log.name || log.pid || log.hostname) {\n    line += '('\n\n    if (log.name) {\n      line += prettifiers.name\n        ? prettifiers.name(log.name, 'name', log, { colors: colorizer.colors })\n        : log.name\n    }\n\n    if (log.pid) {\n      const prettyPid = prettifiers.pid\n        ? prettifiers.pid(log.pid, 'pid', log, { colors: colorizer.colors })\n        : log.pid\n      if (log.name && log.pid) {\n        line += '/' + prettyPid\n      } else {\n        line += prettyPid\n      }\n    }\n\n    if (log.hostname) {\n      // If `pid` and `name` were in the ignore keys list then we don't need\n      // the leading space.\n      const prettyHostname = prettifiers.hostname\n        ? prettifiers.hostname(log.hostname, 'hostname', log, { colors: colorizer.colors })\n        : log.hostname\n\n      line += `${line === '(' ? 'on' : ' on'} ${prettyHostname}`\n    }\n\n    line += ')'\n  }\n\n  if (log.caller) {\n    const prettyCaller = prettifiers.caller\n      ? prettifiers.caller(log.caller, 'caller', log, { colors: colorizer.colors })\n      : log.caller\n\n    line += `${line === '' ? '' : ' '}<${prettyCaller}>`\n  }\n\n  if (line === '') {\n    return undefined\n  } else {\n    return line\n  }\n}\n","'use strict'\n\nmodule.exports = prettifyTime\n\nconst formatTime = require('./format-time')\n\n/**\n * @typedef {object} PrettifyTimeParams\n * @property {object} log The log object with the timestamp to be prettified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a timestamp if the given `log` has either `time`, `timestamp` or custom specified timestamp\n * property.\n *\n * @param {PrettifyTimeParams} input\n *\n * @returns {undefined|string} If a timestamp property cannot be found then\n * `undefined` is returned. Otherwise, the prettified time is returned as a\n * string.\n */\nfunction prettifyTime ({ log, context }) {\n  const {\n    timestampKey,\n    translateTime: translateFormat\n  } = context\n  const prettifier = context.customPrettifiers?.time\n  let time = null\n\n  if (timestampKey in log) {\n    time = log[timestampKey]\n  } else if ('timestamp' in log) {\n    time = log.timestamp\n  }\n\n  if (time === null) return undefined\n  const output = translateFormat ? formatTime(time, translateFormat) : time\n\n  return prettifier ? prettifier(output) : `[${output}]`\n}\n","'use strict'\n\nmodule.exports = {\n  buildSafeSonicBoom: require('./build-safe-sonic-boom.js'),\n  createDate: require('./create-date.js'),\n  deleteLogProperty: require('./delete-log-property.js'),\n  filterLog: require('./filter-log.js'),\n  formatTime: require('./format-time.js'),\n  getPropertyValue: require('./get-property-value.js'),\n  handleCustomLevelsNamesOpts: require('./handle-custom-levels-names-opts.js'),\n  handleCustomLevelsOpts: require('./handle-custom-levels-opts.js'),\n  interpretConditionals: require('./interpret-conditionals.js'),\n  isObject: require('./is-object.js'),\n  isValidDate: require('./is-valid-date.js'),\n  joinLinesWithIndentation: require('./join-lines-with-indentation.js'),\n  noop: require('./noop.js'),\n  parseFactoryOptions: require('./parse-factory-options.js'),\n  prettifyErrorLog: require('./prettify-error-log.js'),\n  prettifyError: require('./prettify-error.js'),\n  prettifyLevel: require('./prettify-level.js'),\n  prettifyMessage: require('./prettify-message.js'),\n  prettifyMetadata: require('./prettify-metadata.js'),\n  prettifyObject: require('./prettify-object.js'),\n  prettifyTime: require('./prettify-time.js'),\n  splitPropertyKey: require('./split-property-key.js'),\n  getLevelLabelData: require('./get-level-label-data')\n}\n\n// The remainder of this file consists of jsdoc blocks that are difficult to\n// determine a more appropriate \"home\" for. As an example, the blocks associated\n// with custom prettifiers could live in either the `prettify-level`,\n// `prettify-metadata`, or `prettify-time` files since they are the primary\n// files where such code is used. But we want a central place to define common\n// doc blocks, so we are picking this file as the answer.\n\n/**\n * A hash of log property names mapped to prettifier functions. When the\n * incoming log data is being processed for prettification, any key on the log\n * that matches a key in a custom prettifiers hash will be prettified using\n * that matching custom prettifier. The value passed to the custom prettifier\n * will the value associated with the corresponding log key.\n *\n * The hash may contain any arbitrary keys for arbitrary log properties, but it\n * may also contain a set of predefined key names that map to well-known log\n * properties. These keys are:\n *\n * + `time` (for the timestamp field)\n * + `level` (for the level label field; value may be a level number instead\n * of a level label)\n * + `hostname`\n * + `pid`\n * + `name`\n * + `caller`\n *\n * @typedef {Object.<string, CustomPrettifierFunc>} CustomPrettifiers\n */\n\n/**\n * A synchronous function to be used for prettifying a log property. It must\n * return a string.\n *\n * @typedef {function} CustomPrettifierFunc\n * @param {any} value The value to be prettified for the key associated with\n * the prettifier.\n * @returns {string}\n */\n\n/**\n * A tokenized string that indicates how the prettified log line should be\n * formatted. Tokens are either log properties enclosed in curly braces, e.g.\n * `{levelLabel}`, `{pid}`, or `{req.url}`, or conditional directives in curly\n * braces. The only conditional directives supported are `if` and `end`, e.g.\n * `{if pid}{pid}{end}`; every `if` must have a matching `end`. Nested\n * conditions are not supported.\n *\n * @typedef {string} MessageFormatString\n *\n * @example\n * `{levelLabel} - {if pid}{pid} - {end}url:{req.url}`\n */\n\n/**\n * @typedef {object} PrettifyMessageExtras\n * @property {object} colors Available color functions based on `useColor` (or `colorize`) context\n * the options.\n */\n\n/**\n * A function that accepts a log object, name of the message key, and name of\n * the level label key and returns a formatted log line.\n *\n * Note: this function must be synchronous.\n *\n * @typedef {function} MessageFormatFunction\n * @param {object} log The log object to be processed.\n * @param {string} messageKey The name of the key in the `log` object that\n * contains the log message.\n * @param {string} levelLabel The name of the key in the `log` object that\n * contains the log level name.\n * @param {PrettifyMessageExtras} extras Additional data available for message context\n * @returns {string}\n *\n * @example\n * function (log, messageKey, levelLabel) {\n *   return `${log[levelLabel]} - ${log[messageKey]}`\n * }\n */\n","'use strict'\n\nconst hasBuffer = typeof Buffer !== 'undefined'\nconst suspectProtoRx = /\"(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])\"\\s*:/\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/\n\nfunction _parse (text, reviver, options) {\n  // Normalize arguments\n  if (options == null) {\n    if (reviver !== null && typeof reviver === 'object') {\n      options = reviver\n      reviver = undefined\n    }\n  }\n\n  if (hasBuffer && Buffer.isBuffer(text)) {\n    text = text.toString()\n  }\n\n  // BOM checker\n  if (text && text.charCodeAt(0) === 0xFEFF) {\n    text = text.slice(1)\n  }\n\n  // Parse normally, allowing exceptions\n  const obj = JSON.parse(text, reviver)\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const protoAction = (options && options.protoAction) || 'error'\n  const constructorAction = (options && options.constructorAction) || 'error'\n\n  // options: 'error' (default) / 'remove' / 'ignore'\n  if (protoAction === 'ignore' && constructorAction === 'ignore') {\n    return obj\n  }\n\n  if (protoAction !== 'ignore' && constructorAction !== 'ignore') {\n    if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {\n    if (suspectProtoRx.test(text) === false) {\n      return obj\n    }\n  } else {\n    if (suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  }\n\n  // Scan result for proto keys\n  return filter(obj, { protoAction, constructorAction, safe: options && options.safe })\n}\n\nfunction filter (obj, { protoAction = 'error', constructorAction = 'error', safe } = {}) {\n  let next = [obj]\n\n  while (next.length) {\n    const nodes = next\n    next = []\n\n    for (const node of nodes) {\n      if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (protoAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.__proto__ // eslint-disable-line no-proto\n      }\n\n      if (constructorAction !== 'ignore' &&\n          Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n          Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (constructorAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.constructor\n      }\n\n      for (const key in node) {\n        const value = node[key]\n        if (value && typeof value === 'object') {\n          next.push(value)\n        }\n      }\n    }\n  }\n  return obj\n}\n\nfunction parse (text, reviver, options) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, options)\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nfunction safeParse (text, reviver) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, { safe: true })\n  } catch (_e) {\n    return null\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nmodule.exports = parse\nmodule.exports.default = parse\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.scan = filter\n","'use strict'\n\nmodule.exports = pretty\n\nconst sjs = require('secure-json-parse')\n\nconst isObject = require('./utils/is-object')\nconst prettifyErrorLog = require('./utils/prettify-error-log')\nconst prettifyLevel = require('./utils/prettify-level')\nconst prettifyMessage = require('./utils/prettify-message')\nconst prettifyMetadata = require('./utils/prettify-metadata')\nconst prettifyObject = require('./utils/prettify-object')\nconst prettifyTime = require('./utils/prettify-time')\nconst filterLog = require('./utils/filter-log')\n\nconst {\n  LEVELS,\n  LEVEL_KEY,\n  LEVEL_NAMES\n} = require('./constants')\n\nconst jsonParser = input => {\n  try {\n    return { value: sjs.parse(input, { protoAction: 'remove' }) }\n  } catch (err) {\n    return { err }\n  }\n}\n\n/**\n * Orchestrates processing the received log data according to the provided\n * configuration and returns a prettified log string.\n *\n * @typedef {function} LogPrettifierFunc\n * @param {string|object} inputData A log string or a log-like object.\n * @returns {string} A string that represents the prettified log data.\n */\nfunction pretty (inputData) {\n  let log\n  if (!isObject(inputData)) {\n    const parsed = jsonParser(inputData)\n    if (parsed.err || !isObject(parsed.value)) {\n      // pass through\n      return inputData + this.EOL\n    }\n    log = parsed.value\n  } else {\n    log = inputData\n  }\n\n  if (this.minimumLevel) {\n    // We need to figure out if the custom levels has the desired minimum\n    // level & use that one if found. If not, determine if the level exists\n    // in the standard levels. In both cases, make sure we have the level\n    // number instead of the level name.\n    let condition\n    if (this.useOnlyCustomProps) {\n      condition = this.customLevels\n    } else {\n      condition = this.customLevelNames[this.minimumLevel] !== undefined\n    }\n    let minimum\n    if (condition) {\n      minimum = this.customLevelNames[this.minimumLevel]\n    } else {\n      minimum = LEVEL_NAMES[this.minimumLevel]\n    }\n    if (!minimum) {\n      minimum = typeof this.minimumLevel === 'string'\n        ? LEVEL_NAMES[this.minimumLevel]\n        : LEVEL_NAMES[LEVELS[this.minimumLevel].toLowerCase()]\n    }\n\n    const level = log[this.levelKey === undefined ? LEVEL_KEY : this.levelKey]\n    if (level < minimum) return\n  }\n\n  const prettifiedMessage = prettifyMessage({ log, context: this.context })\n\n  if (this.ignoreKeys || this.includeKeys) {\n    log = filterLog({ log, context: this.context })\n  }\n\n  const prettifiedLevel = prettifyLevel({\n    log,\n    context: {\n      ...this.context,\n      // This is odd. The colorizer ends up relying on the value of\n      // `customProperties` instead of the original `customLevels` and\n      // `customLevelNames`.\n      ...this.context.customProperties\n    }\n  })\n  const prettifiedMetadata = prettifyMetadata({ log, context: this.context })\n  const prettifiedTime = prettifyTime({ log, context: this.context })\n\n  let line = ''\n  if (this.levelFirst && prettifiedLevel) {\n    line = `${prettifiedLevel}`\n  }\n\n  if (prettifiedTime && line === '') {\n    line = `${prettifiedTime}`\n  } else if (prettifiedTime) {\n    line = `${line} ${prettifiedTime}`\n  }\n\n  if (!this.levelFirst && prettifiedLevel) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedLevel}`\n    } else {\n      line = prettifiedLevel\n    }\n  }\n\n  if (prettifiedMetadata) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedMetadata}:`\n    } else {\n      line = prettifiedMetadata\n    }\n  }\n\n  if (line.endsWith(':') === false && line !== '') {\n    line += ':'\n  }\n\n  if (prettifiedMessage !== undefined) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedMessage}`\n    } else {\n      line = prettifiedMessage\n    }\n  }\n\n  if (line.length > 0 && !this.singleLine) {\n    line += this.EOL\n  }\n\n  // pino@7+ does not log this anymore\n  if (log.type === 'Error' && typeof log.stack === 'string') {\n    const prettifiedErrorLog = prettifyErrorLog({ log, context: this.context })\n    if (this.singleLine) line += this.EOL\n    line += prettifiedErrorLog\n  } else if (this.hideObject === false) {\n    const skipKeys = [\n      this.messageKey,\n      this.levelKey,\n      this.timestampKey\n    ]\n      .map((key) => key.replaceAll(/\\\\/g, ''))\n      .filter(key => {\n        return typeof log[key] === 'string' ||\n          typeof log[key] === 'number' ||\n          typeof log[key] === 'boolean'\n      })\n    const prettifiedObject = prettifyObject({\n      log,\n      skipKeys,\n      context: this.context\n    })\n\n    // In single line mode, include a space only if prettified version isn't empty\n    if (this.singleLine && !/^\\s$/.test(prettifiedObject)) {\n      line += ' '\n    }\n    line += prettifiedObject\n  }\n\n  return line\n}\n","'use strict'\n\nconst { isColorSupported } = require('colorette')\nconst pump = require('pump')\nconst { Transform } = require('stream')\nconst abstractTransport = require('pino-abstract-transport')\nconst colors = require('./lib/colors')\nconst {\n  ERROR_LIKE_KEYS,\n  LEVEL_KEY,\n  LEVEL_LABEL,\n  MESSAGE_KEY,\n  TIMESTAMP_KEY\n} = require('./lib/constants')\nconst {\n  buildSafeSonicBoom,\n  parseFactoryOptions\n} = require('./lib/utils')\nconst pretty = require('./lib/pretty')\n\n/**\n * @typedef {object} PinoPrettyOptions\n * @property {boolean} [colorize] Indicates if colors should be used when\n * prettifying. The default will be determined by the terminal capabilities at\n * run time.\n * @property {boolean} [colorizeObjects=true] Apply coloring to rendered objects\n * when coloring is enabled.\n * @property {boolean} [crlf=false] End lines with `\\r\\n` instead of `\\n`.\n * @property {string|null} [customColors=null] A comma separated list of colors\n * to use for specific level labels, e.g. `err:red,info:blue`.\n * @property {string|null} [customLevels=null] A comma separated list of user\n * defined level names and numbers, e.g. `err:99,info:1`.\n * @property {CustomPrettifiers} [customPrettifiers={}] A set of prettifier\n * functions to apply to keys defined in this object.\n * @property {K_ERROR_LIKE_KEYS} [errorLikeObjectKeys] A list of string property\n * names to consider as error objects.\n * @property {string} [errorProps=''] A comma separated list of properties on\n * error objects to include in the output.\n * @property {boolean} [hideObject=false] When `true`, data objects will be\n * omitted from the output (except for error objects).\n * @property {string} [ignore='hostname'] A comma separated list of log keys\n * to omit when outputting the prettified log information.\n * @property {undefined|string} [include=undefined] A comma separated list of\n * log keys to include in the prettified log information. Only the keys in this\n * list will be included in the output.\n * @property {boolean} [levelFirst=false] When true, the log level will be the\n * first field in the prettified output.\n * @property {string} [levelKey='level'] The key name in the log data that\n * contains the level value for the log.\n * @property {string} [levelLabel='levelLabel'] Token name to use in\n * `messageFormat` to represent the name of the logged level.\n * @property {null|MessageFormatString|MessageFormatFunction} [messageFormat=null]\n * When a string, defines how the prettified line should be formatted according\n * to defined tokens. When a function, a synchronous function that returns a\n * formatted string.\n * @property {string} [messageKey='msg'] Defines the key in incoming logs that\n * contains the message of the log, if present.\n * @property {undefined|string|number} [minimumLevel=undefined] The minimum\n * level for logs that should be processed. Any logs below this level will\n * be omitted.\n * @property {object} [outputStream=process.stdout] The stream to write\n * prettified log lines to.\n * @property {boolean} [singleLine=false] When `true` any objects, except error\n * objects, in the log data will be printed as a single line instead as multiple\n * lines.\n * @property {string} [timestampKey='time'] Defines the key in incoming logs\n * that contains the timestamp of the log, if present.\n * @property {boolean|string} [translateTime=true] When true, will translate a\n * JavaScript date integer into a human-readable string. If set to a string,\n * it must be a format string.\n * @property {boolean} [useOnlyCustomProps=true] When true, only custom levels\n * and colors will be used if they have been provided.\n */\n\n/**\n * The default options that will be used when prettifying log lines.\n *\n * @type {PinoPrettyOptions}\n */\nconst defaultOptions = {\n  colorize: isColorSupported,\n  colorizeObjects: true,\n  crlf: false,\n  customColors: null,\n  customLevels: null,\n  customPrettifiers: {},\n  errorLikeObjectKeys: ERROR_LIKE_KEYS,\n  errorProps: '',\n  hideObject: false,\n  ignore: 'hostname',\n  include: undefined,\n  levelFirst: false,\n  levelKey: LEVEL_KEY,\n  levelLabel: LEVEL_LABEL,\n  messageFormat: null,\n  messageKey: MESSAGE_KEY,\n  minimumLevel: undefined,\n  outputStream: process.stdout,\n  singleLine: false,\n  timestampKey: TIMESTAMP_KEY,\n  translateTime: true,\n  useOnlyCustomProps: true\n}\n\n/**\n * Processes the supplied options and returns a function that accepts log data\n * and produces a prettified log string.\n *\n * @param {PinoPrettyOptions} options Configuration for the prettifier.\n * @returns {LogPrettifierFunc}\n */\nfunction prettyFactory (options) {\n  const context = parseFactoryOptions(Object.assign({}, defaultOptions, options))\n  return pretty.bind({ ...context, context })\n}\n\n/**\n * @typedef {PinoPrettyOptions} BuildStreamOpts\n * @property {object|number|string} [destination] A destination stream, file\n * descriptor, or target path to a file.\n * @property {boolean} [append]\n * @property {boolean} [mkdir]\n * @property {boolean} [sync=false]\n */\n\n/**\n * Constructs a {@link LogPrettifierFunc} and a stream to which the produced\n * prettified log data will be written.\n *\n * @param {BuildStreamOpts} opts\n * @returns {Transform | (Transform & OnUnknown)}\n */\nfunction build (opts = {}) {\n  let pretty = prettyFactory(opts)\n  let destination\n  return abstractTransport(function (source) {\n    source.on('message', function pinoConfigListener (message) {\n      if (!message || message.code !== 'PINO_CONFIG') return\n      Object.assign(opts, {\n        messageKey: message.config.messageKey,\n        errorLikeObjectKeys: Array.from(new Set([...(opts.errorLikeObjectKeys || ERROR_LIKE_KEYS), message.config.errorKey])),\n        customLevels: message.config.levels.values\n      })\n      pretty = prettyFactory(opts)\n      source.off('message', pinoConfigListener)\n    })\n    const stream = new Transform({\n      objectMode: true,\n      autoDestroy: true,\n      transform (chunk, enc, cb) {\n        const line = pretty(chunk)\n        cb(null, line)\n      }\n    })\n\n    if (typeof opts.destination === 'object' && typeof opts.destination.write === 'function') {\n      destination = opts.destination\n    } else {\n      destination = buildSafeSonicBoom({\n        dest: opts.destination || 1,\n        append: opts.append,\n        mkdir: opts.mkdir,\n        sync: opts.sync // by default sonic will be async\n      })\n    }\n\n    source.on('unknown', function (line) {\n      destination.write(line + '\\n')\n    })\n\n    pump(source, stream, destination)\n    return stream\n  }, {\n    parse: 'lines',\n    close (err, cb) {\n      destination.on('close', () => {\n        cb(err)\n      })\n    }\n  })\n}\n\nmodule.exports = build\nmodule.exports.build = build\nmodule.exports.PinoPretty = build\nmodule.exports.prettyFactory = prettyFactory\nmodule.exports.colorizerFactory = colors\nmodule.exports.isColorSupported = isColorSupported\nmodule.exports.default = build\n","export * from './shared/index';\nexport * from './langchain/index';\nexport * from './modelcontextprotocol/index';\nexport * from './ai-sdk/index';\nexport * from './plugins/index';\nexport * from './elizaos/index';\n","import { Client } from '@hashgraph/sdk';\n\nimport type { Context } from './configuration';\nimport { Tool } from './tools';\n\nclass HederaAgentAPI {\n  client: Client;\n\n  context: Context;\n\n  tools: Tool[];\n\n  constructor(client: Client, context?: Context, tools?: Tool[]) {\n    this.client = client;\n    if (!this.client.ledgerId) {\n      throw new Error('Client must be connected to a network');\n    }\n    this.context = context || {};\n    this.tools = tools || [];\n  }\n\n  async run(method: string, arg: unknown) {\n    const tool = this.tools.find(t => t.method === method);\n    if (tool) {\n      const output = JSON.stringify(await tool.execute(this.client, this.context, arg));\n      return output;\n    } else {\n      throw new Error('Invalid method ' + method);\n    }\n  }\n}\n\nexport default HederaAgentAPI;\n","import { IHederaMirrornodeService } from './hedera-utils/mirrornode/hedera-mirrornode-service.interface';\nimport { Plugin } from './plugin';\n\nexport enum AgentMode {\n  AUTONOMOUS = 'autonomous',\n  RETURN_BYTES = 'returnBytes',\n}\n\n// Context are settings that are applied to all requests made by the integration.\nexport type Context = {\n  // Account is a Connected Account ID. If set, the integration will\n  // make requests for this Account.\n  accountId?: string;\n  // Account Public Key is either passed in configuration or fetched based on the passed accountId\n  accountPublicKey?: string;\n\n  // defines if the agent executes the transactions or returns the raw transaction bytes\n  mode?: AgentMode;\n\n  // Mirrornode config\n  mirrornodeService?: IHederaMirrornodeService;\n};\n\nexport type Configuration = {\n  //if empty, all tools will be used.\n  tools?: string[];\n  //external plugins to load\n  plugins?: Plugin[];\n  context?: Context;\n};\n","import { Context } from '@/shared/configuration';\nimport { z } from 'zod';\nimport { AccountId, PublicKey, TokenId, TokenSupplyType, TokenType } from '@hashgraph/sdk';\nimport { TokenTransferMinimalParams } from '@/shared/hedera-utils/types';\n\nexport const createFungibleTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenName: z.string().describe('The name of the token.'),\n    tokenSymbol: z.string().describe('The symbol of the token.'),\n    initialSupply: z\n      .number()\n      .int()\n      .optional()\n      .default(0)\n      .describe('The initial supply of the token.'),\n    supplyType: z\n      .enum(['finite', 'infinite'])\n      .optional()\n      .default('finite')\n      .describe('Supply type of the token.'),\n    maxSupply: z.number().int().optional().describe('The maximum supply of the token.'),\n    decimals: z.number().int().optional().default(0).describe('The number of decimals.'),\n    treasuryAccountId: z.string().optional().describe('The treasury account of the token.'),\n    isSupplyKey: z\n      .boolean()\n      .optional()\n      .describe('Determines if the token supply key should be set.'),\n  });\n\nexport const createFungibleTokenParametersNormalised = (_context: Context = {}) =>\n  createFungibleTokenParameters(_context).extend({\n    treasuryAccountId: z.string().describe('The treasury account of the token.'),\n    autoRenewAccountId: z\n      .string()\n      .optional()\n      .describe(\n        'The auto renew account for the token. If not provided, defaults to the operator account.',\n      ),\n    supplyKey: z\n      .custom<PublicKey>()\n      .optional()\n      .describe('The supply key. If not provided, defaults to the operator’s public key.'),\n    supplyType: z.custom<TokenSupplyType>().describe('Supply type of the token.'),\n    adminKey: z.custom<PublicKey>().optional().describe('The admin key for the token.'),\n    kycKey: z.custom<PublicKey>().optional().describe('The KYC key for the token.'),\n    freezeKey: z.custom<PublicKey>().optional().describe('The freeze key for the token.'),\n    wipeKey: z.custom<PublicKey>().optional().describe('The wipe key for the token.'),\n    pauseKey: z.custom<PublicKey>().optional().describe('The pause key for the token.'),\n    metadataKey: z.custom<PublicKey>().optional().describe('The metadata key for the token.'),\n    tokenMemo: z.string().optional().describe('The memo for the token.'),\n    tokenType: z.custom<TokenType>().optional().describe('The type of the token.'),\n  });\n\nexport const createNonFungibleTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenName: z.string().describe('The name of the token.'),\n    tokenSymbol: z.string().describe('The symbol of the token.'),\n    maxSupply: z\n      .number()\n      .int()\n      .optional()\n      .default(100)\n      .describe('The maximum supply of the token.'),\n    treasuryAccountId: z.string().optional().describe('The treasury account of the token.'),\n  });\n\nexport const createNonFungibleTokenParametersNormalised = (_context: Context = {}) =>\n  createNonFungibleTokenParameters(_context).extend({\n    autoRenewAccountId: z\n      .string()\n      .describe(\n        'The auto renew account for the token. If not provided, defaults to the operator account.',\n      ),\n    supplyKey: z\n      .custom<PublicKey>()\n      .describe('The supply key. If not provided, defaults to the operator’s public key.'),\n    supplyType: z\n      .custom<TokenSupplyType>()\n      .default(TokenSupplyType.Finite)\n      .describe('Supply type of the token - must be finite for NFT.'),\n    tokenType: z\n      .custom<TokenType>()\n      .default(TokenType.NonFungibleUnique)\n      .describe('Token type of the token - must be non-fungible unique for NFT.'),\n    adminKey: z.custom<PublicKey>().optional().describe('The admin key for the token.'),\n    kycKey: z.custom<PublicKey>().optional().describe('The KYC key for the token.'),\n    freezeKey: z.custom<PublicKey>().optional().describe('The freeze key for the token.'),\n    wipeKey: z.custom<PublicKey>().optional().describe('The wipe key for the token.'),\n    pauseKey: z.custom<PublicKey>().optional().describe('The pause key for the token.'),\n    tokenMemo: z.string().optional().describe('The memo for the token.'),\n  });\n\nconst AirdropRecipientSchema = z.object({\n  accountId: z.string().describe('Recipient account ID (e.g., \"0.0.xxxx\").'),\n  amount: z.union([z.number(), z.string()]).describe('Amount in base unit.'),\n});\n\nexport const airdropFungibleTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenId: z.string().describe('The id of the token.'),\n    sourceAccountId: z.string().optional().describe('The account to airdrop the token from.'),\n    recipients: z\n      .array(AirdropRecipientSchema)\n      .min(1)\n      .describe('Array of recipient objects, each with accountId and amount.'),\n  });\n\nexport const airdropFungibleTokenParametersNormalised = () =>\n  z.object({\n    tokenTransfers: z\n      .custom<TokenTransferMinimalParams[]>()\n      .describe('Array of TokenTransfer objects constructed from the original recipients.'),\n  });\n\nexport const mintFungibleTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenId: z.string().describe('The id of the token.'),\n    amount: z.number().describe('The amount of tokens to mint.'),\n  });\n\nexport const mintFungibleTokenParametersNormalised = (_context: Context = {}) =>\n  mintFungibleTokenParameters(_context).extend({});\n\nexport const mintNonFungibleTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenId: z.string().describe('The id of the NFT class.'),\n    uris: z.array(z.string().max(100)).max(10).describe('An array of URIs hosting NFT metadata.'),\n  });\n\nexport const mintNonFungibleTokenParametersNormalised = (_context: Context = {}) =>\n  mintNonFungibleTokenParameters(_context).extend({});\n\nexport const deleteTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenId: z.string().describe('The ID of the token to delete.'),\n  });\n\nexport const deleteTokenParametersNormalised = (_context: Context = {}) =>\n  deleteTokenParameters(_context).extend({});\n\nexport const tokenInfoQueryParameters = (_context: Context = {}) =>\n  z.object({\n    tokenId: z.string().optional().describe('The token ID to query.'),\n  });\n\nexport const updateTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenId: z.string().describe('The ID of the token to update (e.g., 0.0.12345).'),\n    tokenDesc: z\n      .string()\n      .optional()\n      .describe('Optional description of the token update operation.'),\n    tokenName: z\n      .string()\n      .max(100)\n      .optional()\n      .describe('New name for the token. Up to 100 characters.'),\n    tokenSymbol: z\n      .string()\n      .max(100)\n      .optional()\n      .describe('New symbol for the token. Up to 100 characters.'),\n    treasuryAccountId: z\n      .string()\n      .optional()\n      .describe('New treasury account for the token (Hedera account ID).'),\n    adminKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New admin key. Pass boolean `true` to use the operator/user key, or provide a Hedera-compatible public key string. Required for most property updates.',\n      ),\n    kycKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New KYC key. Pass boolean `true` to use the operator/user key, or provide a public key string.',\n      ),\n    freezeKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New freeze key. Pass boolean `true` to use the operator/user key, or provide a public key string.',\n      ),\n    wipeKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New wipe key. Pass boolean `true` to use the operator/user key, or provide a public key string.',\n      ),\n    supplyKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New supply key. Pass boolean `true` to use the operator/user key, or provide a public key string.',\n      ),\n    feeScheduleKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New fee schedule key. Pass boolean `true` to use the operator/user key, or provide a public key string.',\n      ),\n    pauseKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New pause key. Pass boolean `true` to use the operator/user key, or provide a public key string.',\n      ),\n    metadataKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New metadata key. Pass boolean `true` to use the operator/user key, or provide a public key string.',\n      ),\n    metadata: z\n      .string()\n      .optional()\n      .describe('New metadata for the token, in bytes (as base64 or hex).'),\n    tokenMemo: z\n      .string()\n      .max(100)\n      .optional()\n      .describe('Short public memo for the token, up to 100 characters.'),\n    autoRenewAccountId: z\n      .string()\n      .optional()\n      .describe('Account to automatically pay for token renewal (Hedera account ID).'),\n  });\n\nexport const updateTokenParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    tokenId: z.instanceof(TokenId),\n\n    // Strings\n    tokenName: z.string().optional(),\n    tokenSymbol: z.string().optional(),\n    tokenMemo: z.string().optional(),\n    metadata: z.instanceof(Uint8Array<ArrayBufferLike>).optional(),\n\n    // IDs\n    treasuryAccountId: z.union([z.string(), z.instanceof(AccountId)]).optional(),\n    autoRenewAccountId: z.union([z.string(), z.instanceof(AccountId)]).optional(),\n\n    // Keys\n    adminKey: z.instanceof(PublicKey).optional(),\n    supplyKey: z.instanceof(PublicKey).optional(),\n    wipeKey: z.instanceof(PublicKey).optional(),\n    freezeKey: z.instanceof(PublicKey).optional(),\n    kycKey: z.instanceof(PublicKey).optional(),\n    feeScheduleKey: z.instanceof(PublicKey).optional(),\n    pauseKey: z.instanceof(PublicKey).optional(),\n    metadataKey: z.instanceof(PublicKey).optional(),\n  });\n\n    // Associate Token\nexport const associateTokenParameters = (_context: Context = {}) =>\n  z.object({\n    // If not passed, will be injected from context in normalisation\n    accountId: z\n      .string()\n      .optional()\n      .describe(\n        'Account ID to associate tokens with (e.g., 0.0.xxxxx). If not provided, operator account ID will be used',\n      ),\n    // One or more token IDs to associate\n    tokenIds: z.array(z.string()).min(1).describe('Array of token IDs to associate'),\n  });\n\nexport const associateTokenParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    accountId: z.string().describe('Resolved account ID to associate tokens with'),\n    tokenIds: z.array(z.string()).min(1).describe('Array of token IDs to associate'),\n  });\n\n\nexport const pendingAirdropQueryParameters = (_context: Context = {}) =>\n  z.object({\n    accountId: z.string().optional().describe('The account ID to query.'),\n  });\n\nexport const dissociateTokenParameters = (_context: Context = {}) =>\n  z.object({\n    tokenIds: z\n      .array(z.string())\n      .min(1)\n      .describe('The list of Hedera token IDs (strings) to dissociate. Must provide at least one.'),\n    accountId: z\n      .string()\n      .optional()\n      .describe(\n        'The account ID from which to dissociate the tokens. Defaults to operator account.',\n      ),\n    transactionMemo: z.string().optional().describe('Optional memo for the transaction.'),\n  });\n\nexport const dissociateTokenParametersNormalised = (_context: Context = {}) =>\n  dissociateTokenParameters(_context).extend({\n    tokenIds: z.array(z.instanceof(TokenId)),\n    accountId: z.instanceof(AccountId),\n  });\n","import { Context } from '@/shared/configuration';\nimport { z } from 'zod';\nimport { AccountId, Hbar, Key, Transaction, HbarAllowance } from '@hashgraph/sdk';\nimport BigNumber from 'bignumber.js';\nimport Long from 'long';\n\nexport const transferHbarParameters = (_context: Context = {}) =>\n  z.object({\n    transfers: z\n      .array(\n        z.object({\n          accountId: z.string().describe('Recipient account ID'),\n          amount: z.number().describe('Amount of HBAR to transfer'),\n        }),\n      )\n      .describe('Array of HBAR transfers'),\n    sourceAccountId: z.string().optional().describe('Sender account ID'),\n    transactionMemo: z.string().optional().describe('Memo to include with the transaction'),\n  });\n\nexport const transferHbarParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    hbarTransfers: z.array(\n      z.object({\n        accountId: z.union([z.string(), z.instanceof(AccountId)]),\n        amount: z.union([\n          z.number(),\n          z.string(),\n          z.instanceof(Hbar),\n          z.instanceof(Long),\n          z.instanceof(BigNumber),\n        ]),\n      }),\n    ),\n    transactionMemo: z.string().optional(),\n  });\n\nexport const createAccountParameters = (_context: Context = {}) =>\n  z.object({\n    publicKey: z\n      .string()\n      .optional()\n      .describe('Account public key. If not provided, a public key of the operator will be used'),\n    accountMemo: z.string().optional().describe('Optional memo for the account'),\n    initialBalance: z\n      .number()\n      .optional()\n      .default(0)\n      .describe('Initial HBAR balance to fund the account (defaults to 0)'),\n    maxAutomaticTokenAssociations: z\n      .number()\n      .optional()\n      .default(-1)\n      .describe('Max automatic token associations (-1 for unlimited)'),\n  });\n\nexport const createAccountParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    accountMemo: z.string().optional(),\n    initialBalance: z.union([z.string(), z.number()]).optional(),\n    key: z.instanceof(Key).optional(),\n    maxAutomaticTokenAssociations: z.union([z.number(), z.instanceof(Long)]).optional(),\n  });\n\nexport const deleteAccountParameters = (_context: Context = {}) =>\n  z.object({\n    accountId: z.string().describe('The account ID to delete.'),\n    transferAccountId: z\n      .string()\n      .optional()\n      .describe(\n        'The ID of the account to transfer the remaining funds to. If not provided, the operator account ID will be used.',\n      ),\n  });\n\nexport const deleteAccountParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    accountId: z.instanceof(AccountId),\n    transferAccountId: z.instanceof(AccountId),\n  });\n\nexport const updateAccountParameters = (_context: Context = {}) =>\n  z.object({\n    // If not passed, will be injected from context in normalisation\n    accountId: z\n      .string()\n      .optional()\n      .describe(\n        'Account ID to update (e.g., 0.0.xxxxx). If not provided, operator account ID will be used',\n      ),\n\n    maxAutomaticTokenAssociations: z\n      .number()\n      .int()\n      .optional()\n      .describe('Max automatic token associations, positive, zero or -1 if unlimited'),\n    stakedAccountId: z.string().optional().describe('Staked account ID'),\n    accountMemo: z.string().optional().describe('Account memo'),\n    declineStakingReward: z.boolean().optional().describe('Decline staking rewards'),\n  });\n\nexport const updateAccountParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    accountId: z.instanceof(AccountId),\n    maxAutomaticTokenAssociations: z.union([z.number(), z.instanceof(Long)]).optional(),\n    stakedAccountId: z.union([z.string(), z.instanceof(AccountId)]).optional(),\n    accountMemo: z.string().optional(),\n    declineStakingReward: z.boolean().optional(),\n  });\n\nexport const accountQueryParameters = (_context: Context = {}) =>\n  z.object({\n    accountId: z.string().describe('The account ID to query.'),\n  });\n\nexport const accountBalanceQueryParameters = (_context: Context = {}) =>\n  z.object({\n    accountId: z.string().optional().describe('The account ID to query.'),\n  });\n\nexport const accountTokenBalancesQueryParameters = (_context: Context = {}) =>\n  z.object({\n    accountId: z\n      .string()\n      .optional()\n      .describe('The account ID to query. If not provided, this accountId will be used.'),\n    tokenId: z.string().optional().describe('The token ID to query.'),\n  });\n\nexport const signScheduleTransactionParameters = (_context: Context = {}) =>\n  z.object({\n    scheduleId: z.string().describe('The ID of the scheduled transaction to sign'),\n  });\n\nexport const createScheduleTransactionParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    scheduledTransaction: z.instanceof(Transaction),\n    params: z.object({\n      scheduleMemo: z.string().optional(),\n      adminKey: z.instanceof(Key).optional(),\n    }),\n  });\n\nexport const scheduleDeleteTransactionParameters = (_context: Context = {}) =>\n  z.object({\n    scheduleId: z.string().describe('The ID of the scheduled transaction to delete'),\n  });\n\nexport const approveHbarAllowanceParameters = (_context: Context = {}) =>\n  z.object({\n    ownerAccountId: z\n      .string()\n      .optional()\n      .describe('Owner account ID (defaults to operator account ID if omitted)'),\n    spenderAccountId: z.string().describe('Spender account ID'),\n    amount: z.number().describe('Amount of HBAR to approve as allowance (can be decimal, not negative)'),\n    transactionMemo: z.string().optional().describe('Memo to include with the transaction'),\n  });\n\nexport const approveHbarAllowanceParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    hbarApprovals: z.array(z.instanceof(HbarAllowance)).optional(),\n    transactionMemo: z.string().optional(),\n  });\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { AccountId, PublicKey, TopicId } from '@hashgraph/sdk';\n\nexport const getTopicInfoParameters = (_context: Context = {}) => {\n  return z.object({\n    topicId: z.string().describe('The topic ID to query.'),\n  });\n};\n\nexport const createTopicParameters = (_context: Context = {}) => {\n  return z.object({\n    isSubmitKey: z\n      .boolean()\n      .optional()\n      .default(false)\n      .describe('Whether to set a submit key for the topic (optional)'),\n    topicMemo: z.string().optional().describe('Memo for the topic (optional)'),\n    transactionMemo: z\n      .string()\n      .optional()\n      .describe('An optional memo to include on the submitted transaction (optional).'),\n  });\n};\n\nexport const createTopicParametersNormalised = (_context: Context = {}) =>\n  createTopicParameters(_context).extend({\n    autoRenewAccountId: z\n      .string()\n      .describe(\n        'The auto renew account for the topic. If not provided, defaults to the operator account.',\n      ),\n    submitKey: z.custom<PublicKey>().optional().describe('The submit key of topic'),\n    adminKey: z.custom<PublicKey>().optional().describe('The admin key of topic'),\n  });\n\nexport const submitTopicMessageParameters = (_context: Context = {}) => {\n  return z.object({\n    topicId: z.string().describe('The ID of the topic to submit the message to'),\n    message: z.string().describe('The message to submit to the topic'),\n    transactionMemo: z\n      .string()\n      .optional()\n      .describe('An optional memo to include on the submitted transaction (optional).'),\n  });\n};\n\nexport const submitTopicMessageParametersNormalised = (_context: Context = {}) =>\n  submitTopicMessageParameters(_context).extend({});\n\nexport const deleteTopicParameters = (_context: Context = {}) =>\n  z.object({\n    topicId: z.string().describe('The ID of the topic to delete.'),\n  });\n\nexport const deleteTopicParametersNormalised = (_context: Context = {}) =>\n  deleteTopicParameters(_context).extend({});\n\nexport const topicMessagesQueryParameters = (_context: Context = {}) =>\n  z.object({\n    topicId: z.string().describe('The topic ID to query.'),\n    startTime: z\n      .string()\n      .datetime()\n      .optional()\n      .describe(\n        'The start time to query. If set, the messages will be returned after this timestamp.',\n      ),\n    endTime: z\n      .string()\n      .datetime()\n      .optional()\n      .describe(\n        'The end time to query. If set, the messages will be returned before this timestamp.',\n      ),\n    limit: z\n      .number()\n      .optional()\n      .describe('The limit of messages to query. If set, the number of messages to return.'),\n  });\n\nexport const updateTopicParameters = (_context: Context = {}) =>\n  z.object({\n    topicId: z.string().describe('The ID of the topic to update (e.g., 0.0.12345).'),\n    topicMemo: z.string().optional().describe('Optional new memo for the topic.'),\n    adminKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New admin key. Pass boolean `true` to use the operator/user key, or provide a Hedera-compatible public key string.',\n      ),\n    submitKey: z\n      .union([z.boolean(), z.string()])\n      .optional()\n      .describe(\n        'New submit key. Pass boolean `true` to use the operator/user key, or provide a Hedera-compatible public key string.',\n      ),\n    autoRenewAccountId: z\n      .string()\n      .optional()\n      .describe('Account to automatically pay for topic renewal (Hedera account ID).'),\n    autoRenewPeriod: z.number().optional().describe('Auto renew period in seconds.'),\n    expirationTime: z\n      .union([z.string(), z.instanceof(Date)])\n      .optional()\n      .describe('New expiration time for the topic (ISO string or Date).'),\n  });\n\nexport const updateTopicParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    topicId: z.instanceof(TopicId),\n    topicMemo: z.string().optional(),\n    adminKey: z.instanceof(PublicKey).optional(),\n    submitKey: z.instanceof(PublicKey).optional(),\n    autoRenewAccountId: z.union([z.string(), z.instanceof(AccountId)]).optional(),\n    autoRenewPeriod: z.number().optional(),\n    expirationTime: z.instanceof(Date).optional(),\n  });\n","// optional to use methods in here\n\nimport {\n  airdropFungibleTokenParameters,\n  createFungibleTokenParameters,\n  createFungibleTokenParametersNormalised,\n  createNonFungibleTokenParameters,\n  createNonFungibleTokenParametersNormalised,\n  dissociateTokenParameters,\n  dissociateTokenParametersNormalised,\n  associateTokenParameters,\n  associateTokenParametersNormalised,\n  mintFungibleTokenParameters,\n  mintNonFungibleTokenParameters,\n  updateTokenParameters,\n  updateTokenParametersNormalised,\n\n} from '@/shared/parameter-schemas/token.zod';\nimport {\n  accountBalanceQueryParameters,\n  accountTokenBalancesQueryParameters,\n  createAccountParameters,\n  createAccountParametersNormalised,\n  deleteAccountParameters,\n  deleteAccountParametersNormalised,\n  transferHbarParameters,\n  updateAccountParameters,\n  updateAccountParametersNormalised,\n  approveHbarAllowanceParameters,\n  approveHbarAllowanceParametersNormalised,\n} from '@/shared/parameter-schemas/account.zod';\nimport {\n  createTopicParameters,\n  createTopicParametersNormalised,\n  deleteTopicParameters,\n  deleteTopicParametersNormalised,\n  updateTopicParameters,\n  updateTopicParametersNormalised,\n} from '@/shared/parameter-schemas/consensus.zod';\n\nimport {\n  AccountId,\n  Client,\n  Hbar,\n  PublicKey,\n  TokenId,\n  TokenSupplyType,\n  TokenType,\n  TopicId,\n  HbarAllowance,\n} from '@hashgraph/sdk';\nimport { Context } from '@/shared/configuration';\nimport z from 'zod';\nimport { IHederaMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-service.interface';\nimport { toBaseUnit } from '@/shared/hedera-utils/decimals-utils';\nimport Long from 'long';\nimport { TokenTransferMinimalParams, TransferHbarInput } from '@/shared/hedera-utils/types';\nimport { AccountResolver } from '@/shared/utils/account-resolver';\nimport { ethers } from 'ethers';\nimport {\n  createERC20Parameters,\n  createERC721Parameters,\n  mintERC721Parameters,\n  transferERC20Parameters,\n  transferERC721Parameters,\n} from '@/shared/parameter-schemas/evm.zod';\nimport {\n  normalisedTransactionRecordQueryParameters,\n  transactionRecordQueryParameters,\n} from '@/shared/parameter-schemas/transaction.zod';\n\nexport default class HederaParameterNormaliser {\n  static parseParamsWithSchema(\n    params: any,\n    schema: any,\n    context: Context = {},\n  ): z.infer<ReturnType<typeof schema>> {\n    let parsedParams: z.infer<ReturnType<typeof schema>>;\n    try {\n      parsedParams = schema(context).parse(params);\n    } catch (e) {\n      if (e instanceof z.ZodError) {\n        const issues = this.formatZodIssues(e);\n        throw new Error(`Invalid parameters: ${issues}`);\n      }\n      throw e;\n    }\n    return parsedParams;\n  }\n\n  private static formatZodIssues(error: z.ZodError): string {\n    return error.errors.map(err => `Field \"${err.path.join('.')}\" - ${err.message}`).join('; ');\n  }\n\n  static async normaliseCreateFungibleTokenParams(\n    params: z.infer<ReturnType<typeof createFungibleTokenParameters>>,\n    context: Context,\n    client: Client,\n    mirrorNode: IHederaMirrornodeService,\n  ): Promise<z.infer<ReturnType<typeof createFungibleTokenParametersNormalised>>> {\n    const parsedParams: z.infer<ReturnType<typeof createFungibleTokenParameters>> =\n      this.parseParamsWithSchema(params, createFungibleTokenParameters, context);\n\n    const defaultAccountId = AccountResolver.getDefaultAccount(context, client);\n    const treasuryAccountId = parsedParams.treasuryAccountId ?? defaultAccountId;\n    if (!treasuryAccountId) throw new Error('Must include treasury account ID');\n\n    const initialSupply = toBaseUnit(\n      parsedParams.initialSupply ?? 0,\n      parsedParams.decimals,\n    ).toNumber();\n\n    const isFinite = (parsedParams.supplyType ?? 'infinite') === 'finite';\n    const supplyType = isFinite ? TokenSupplyType.Finite : TokenSupplyType.Infinite;\n\n    const maxSupply = isFinite\n      ? toBaseUnit(parsedParams.maxSupply ?? 1_000_000, parsedParams.decimals).toNumber() // default finite max supply\n      : undefined;\n\n    if (maxSupply !== undefined && initialSupply > maxSupply) {\n      throw new Error(`Initial supply (${initialSupply}) cannot exceed max supply (${maxSupply})`);\n    }\n\n    const publicKey =\n      (await mirrorNode.getAccount(defaultAccountId).then(r => r.accountPublicKey)) ??\n      client.operatorPublicKey?.toStringDer();\n\n    return {\n      ...parsedParams,\n      supplyType,\n      treasuryAccountId,\n      maxSupply,\n      initialSupply,\n      autoRenewAccountId: defaultAccountId,\n      supplyKey: parsedParams.isSupplyKey === true ? PublicKey.fromString(publicKey) : undefined,\n    };\n  }\n\n  static async normaliseCreateNonFungibleTokenParams(\n    params: z.infer<ReturnType<typeof createNonFungibleTokenParameters>>,\n    context: Context,\n    client: Client,\n    mirrorNode: IHederaMirrornodeService,\n  ): Promise<z.infer<ReturnType<typeof createNonFungibleTokenParametersNormalised>>> {\n    const parsedParams: z.infer<ReturnType<typeof createNonFungibleTokenParameters>> =\n      this.parseParamsWithSchema(params, createNonFungibleTokenParameters, context);\n\n    const defaultAccountId = AccountResolver.getDefaultAccount(context, client);\n    const treasuryAccountId = parsedParams.treasuryAccountId ?? defaultAccountId;\n    if (!treasuryAccountId) throw new Error('Must include treasury account ID');\n\n    const publicKey =\n      (await mirrorNode.getAccount(defaultAccountId).then(r => r.accountPublicKey)) ??\n      client.operatorPublicKey?.toStringDer();\n\n    if (!publicKey) throw new Error('Could not determine public key for supply key');\n\n    const maxSupply = parsedParams.maxSupply ?? 100;\n\n    return {\n      ...parsedParams,\n      treasuryAccountId,\n      maxSupply,\n      supplyKey: PublicKey.fromString(publicKey), // the supply key is mandatory in the case of NFT\n      supplyType: TokenSupplyType.Finite, // NFTs supply must be finite\n      autoRenewAccountId: defaultAccountId,\n      tokenType: TokenType.NonFungibleUnique,\n    };\n  }\n\n  static normaliseTransferHbar(\n    params: z.infer<ReturnType<typeof transferHbarParameters>>,\n    context: Context,\n    client: Client,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof transferHbarParameters>> =\n      this.parseParamsWithSchema(params, transferHbarParameters, context);\n\n    const sourceAccountId = AccountResolver.resolveAccount(\n      parsedParams.sourceAccountId,\n      context,\n      client,\n    );\n\n    const hbarTransfers: TransferHbarInput[] = [];\n    let totalTinybars = Long.ZERO;\n\n    for (const transfer of parsedParams.transfers) {\n      const amount = new Hbar(transfer.amount);\n\n      if (amount.isNegative() || amount.toTinybars().equals(Long.ZERO)) {\n        throw new Error(`Invalid transfer amount: ${transfer.amount}`);\n      }\n\n      totalTinybars = totalTinybars.add(amount.toTinybars());\n\n      hbarTransfers.push({\n        accountId: transfer.accountId,\n        amount,\n      });\n    }\n\n    hbarTransfers.push({\n      accountId: sourceAccountId,\n      amount: Hbar.fromTinybars(totalTinybars.negate()),\n    });\n\n    return {\n      hbarTransfers,\n      transactionMemo: parsedParams.transactionMemo,\n    };\n  }\n\n  static normaliseApproveHbarAllowance(\n    params: z.infer<ReturnType<typeof approveHbarAllowanceParameters>>,\n    context: Context,\n    client: Client,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof approveHbarAllowanceParameters>> =\n      this.parseParamsWithSchema(params, approveHbarAllowanceParameters, context);\n\n    const ownerAccountId = AccountResolver.resolveAccount(\n      parsedParams.ownerAccountId,\n      context,\n      client,\n    );\n\n    const spenderAccountId = parsedParams.spenderAccountId;\n\n    const amount = new Hbar(parsedParams.amount);\n    if (amount.isNegative()) {\n      throw new Error(`Invalid allowance amount: ${parsedParams.amount}`);\n    }\n\n    return {\n      hbarApprovals: [\n        new HbarAllowance({\n          ownerAccountId: AccountId.fromString(ownerAccountId),\n          spenderAccountId: AccountId.fromString(spenderAccountId),\n          amount,\n        }),\n      ],\n      transactionMemo: parsedParams.transactionMemo,\n    } as z.infer<ReturnType<typeof approveHbarAllowanceParametersNormalised>>;\n  }\n\n  static async normaliseAirdropFungibleTokenParams(\n    params: z.infer<ReturnType<typeof airdropFungibleTokenParameters>>,\n    context: Context,\n    client: Client,\n    mirrorNode: IHederaMirrornodeService,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof airdropFungibleTokenParameters>> =\n      this.parseParamsWithSchema(params, airdropFungibleTokenParameters, context);\n\n    const sourceAccountId = AccountResolver.resolveAccount(\n      parsedParams.sourceAccountId,\n      context,\n      client,\n    );\n\n    const tokenInfo = await mirrorNode.getTokenInfo(parsedParams.tokenId);\n    const tokenDecimals = parseInt(tokenInfo.decimals, 10);\n\n    if (isNaN(tokenDecimals)) {\n      throw new Error(`Invalid token decimals for token ${parsedParams.tokenId}`);\n    }\n\n    const tokenTransfers: TokenTransferMinimalParams[] = [];\n    let totalAmount = Long.ZERO;\n\n    for (const recipient of parsedParams.recipients) {\n      const amountRaw = Number(recipient.amount);\n\n      if (amountRaw <= 0) {\n        throw new Error(`Invalid recipient amount: ${recipient.amount}`);\n      }\n\n      const amount = Long.fromString(toBaseUnit(amountRaw, tokenDecimals).toNumber().toString());\n\n      totalAmount = totalAmount.add(amount);\n\n      tokenTransfers.push({\n        tokenId: parsedParams.tokenId,\n        accountId: recipient.accountId,\n        amount,\n      });\n    }\n\n    // Sender negative total\n    tokenTransfers.push({\n      tokenId: parsedParams.tokenId,\n      accountId: sourceAccountId,\n      amount: totalAmount.negate(),\n    });\n\n    return {\n      tokenTransfers,\n    };\n  }\n\n\n  static normaliseAssociateTokenParams(\n    params: z.infer<ReturnType<typeof associateTokenParameters>>,\n    context: Context,\n    client: Client,\n  ): z.infer<ReturnType<typeof associateTokenParametersNormalised>> {\n    const parsedParams: z.infer<ReturnType<typeof associateTokenParameters>> =\n      this.parseParamsWithSchema(params, associateTokenParameters, context);\n\n    const accountId = AccountResolver.resolveAccount(parsedParams.accountId, context, client);\n    return {\n      accountId,\n      tokenIds: parsedParams.tokenIds,\n    };\n  }\n\n  static async normaliseDissociateTokenParams(\n    params: z.infer<ReturnType<typeof dissociateTokenParameters>>,\n    context: Context,\n    client: Client,\n  ): Promise<z.infer<ReturnType<typeof dissociateTokenParametersNormalised>>> {\n    const parsedParams: z.infer<ReturnType<typeof dissociateTokenParameters>> =\n      this.parseParamsWithSchema(params, dissociateTokenParameters, context);\n\n    if (parsedParams.accountId === undefined) {\n      parsedParams.accountId = AccountResolver.getDefaultAccount(context, client);\n\n      if (!parsedParams.accountId) {\n        throw new Error('Could not determine default account ID');\n      }\n    }\n\n    return {\n      ...parsedParams,\n      accountId: AccountId.fromString(parsedParams.accountId),\n      tokenIds: parsedParams.tokenIds.map(id => TokenId.fromString(id)),\n    };\n  }\n\n  static async normaliseCreateTopicParams(\n    params: z.infer<ReturnType<typeof createTopicParameters>>,\n    context: Context,\n    client: Client,\n    mirrorNode: IHederaMirrornodeService,\n  ): Promise<z.infer<ReturnType<typeof createTopicParametersNormalised>>> {\n    const parsedParams: z.infer<ReturnType<typeof createTopicParameters>> =\n      this.parseParamsWithSchema(params, createTopicParameters, context);\n\n    const defaultAccountId = AccountResolver.getDefaultAccount(context, client);\n    if (!defaultAccountId) throw new Error('Could not determine default account ID');\n\n    const normalised: z.infer<ReturnType<typeof createTopicParametersNormalised>> = {\n      ...parsedParams,\n      autoRenewAccountId: defaultAccountId,\n    };\n\n    if (parsedParams.isSubmitKey) {\n      const publicKey =\n        (await mirrorNode.getAccount(defaultAccountId).then(r => r.accountPublicKey)) ??\n        client.operatorPublicKey?.toStringDer();\n      if (!publicKey) {\n        throw new Error('Could not determine public key for submit key');\n      }\n      normalised.submitKey = PublicKey.fromString(publicKey);\n    }\n\n    return normalised;\n  }\n\n  static normaliseDeleteTopic(\n    params: z.infer<ReturnType<typeof deleteTopicParameters>>,\n    context: Context,\n    _client: Client,\n    _mirrorNode: IHederaMirrornodeService,\n  ): z.infer<ReturnType<typeof deleteTopicParametersNormalised>> {\n    // First, validate against the basic schema\n    const parsedParams: z.infer<ReturnType<typeof deleteTopicParameters>> =\n      this.parseParamsWithSchema(params, deleteTopicParameters, context);\n\n    // Then, validate against the normalized schema delete topic schema\n    return this.parseParamsWithSchema(parsedParams, deleteTopicParametersNormalised, context);\n  }\n\n  static normaliseUpdateTopic = async (\n    params: z.infer<ReturnType<typeof updateTopicParameters>>,\n    context: Context,\n    client: Client,\n  ): Promise<z.infer<ReturnType<typeof updateTopicParametersNormalised>>> => {\n    const parsedParams: z.infer<ReturnType<typeof updateTopicParameters>> =\n      this.parseParamsWithSchema(params, updateTopicParameters, context);\n\n    const topicId = TopicId.fromString(parsedParams.topicId);\n    const userPublicKey = await AccountResolver.getDefaultPublicKey(context, client);\n\n    const normalised: z.infer<ReturnType<typeof updateTopicParametersNormalised>> = {\n      topicId,\n    } as any;\n\n    // Keys\n    const maybeKeys: Record<string, string | boolean | undefined> = {\n      adminKey: parsedParams.adminKey,\n      submitKey: parsedParams.submitKey,\n    };\n\n    for (const [field, rawVal] of Object.entries(maybeKeys)) {\n      const resolved = this.resolveKey(rawVal, userPublicKey);\n      if (resolved) {\n        (normalised as any)[field] = resolved;\n      }\n    }\n\n    // Other optional props\n    if (parsedParams.topicMemo) normalised.topicMemo = parsedParams.topicMemo;\n    if (parsedParams.autoRenewAccountId)\n      normalised.autoRenewAccountId = parsedParams.autoRenewAccountId;\n    if (parsedParams.autoRenewPeriod) normalised.autoRenewPeriod = parsedParams.autoRenewPeriod;\n    if (parsedParams.expirationTime) {\n      normalised.expirationTime =\n        parsedParams.expirationTime instanceof Date\n          ? parsedParams.expirationTime\n          : new Date(parsedParams.expirationTime);\n    }\n\n    return normalised;\n  };\n\n  static async normaliseCreateAccount(\n    params: z.infer<ReturnType<typeof createAccountParameters>>,\n    context: Context,\n    client: Client,\n    mirrorNode: IHederaMirrornodeService,\n  ): Promise<z.infer<ReturnType<typeof createAccountParametersNormalised>>> {\n    const parsedParams: z.infer<ReturnType<typeof createAccountParameters>> =\n      this.parseParamsWithSchema(params, createAccountParameters, context);\n\n    // Try resolving the publicKey in priority order\n    let publicKey = parsedParams.publicKey ?? client.operatorPublicKey?.toStringDer();\n\n    if (!publicKey) {\n      const defaultAccountId = AccountResolver.getDefaultAccount(context, client);\n      if (defaultAccountId) {\n        const account = await mirrorNode.getAccount(defaultAccountId);\n        publicKey = account?.accountPublicKey;\n      }\n    }\n\n    if (!publicKey) {\n      throw new Error(\n        'Unable to resolve public key: no param, mirror node, or client operator key available.',\n      );\n    }\n\n    return {\n      ...parsedParams,\n      key: PublicKey.fromString(publicKey),\n    };\n  }\n\n  static normaliseHbarBalanceParams(\n    params: z.infer<ReturnType<typeof accountBalanceQueryParameters>>,\n    context: Context,\n    client: Client,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof accountBalanceQueryParameters>> =\n      this.parseParamsWithSchema(params, accountBalanceQueryParameters, context);\n\n    const accountId = AccountResolver.resolveAccount(parsedParams.accountId, context, client);\n    return {\n      ...parsedParams,\n      accountId,\n    };\n  }\n\n  static normaliseAccountTokenBalancesParams(\n    params: z.infer<ReturnType<typeof accountTokenBalancesQueryParameters>>,\n    context: Context,\n    client: Client,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof accountTokenBalancesQueryParameters>> =\n      this.parseParamsWithSchema(params, accountTokenBalancesQueryParameters, context);\n\n    const accountId = AccountResolver.resolveAccount(parsedParams.accountId, context, client);\n    return {\n      ...parsedParams,\n      accountId,\n    };\n  }\n\n  static normaliseCreateERC20Params(\n    params: z.infer<ReturnType<typeof createERC20Parameters>>,\n    factoryContractId: string,\n    factoryContractAbi: string[],\n    factoryContractFunctionName: string,\n    context: Context,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof createERC20Parameters>> =\n      this.parseParamsWithSchema(params, createERC20Parameters, context);\n\n    // Create an interface for encoding\n    const iface = new ethers.Interface(factoryContractAbi);\n\n    // Encode the function call\n    const encodedData = iface.encodeFunctionData(factoryContractFunctionName, [\n      parsedParams.tokenName,\n      parsedParams.tokenSymbol,\n      parsedParams.decimals,\n      parsedParams.initialSupply,\n    ]);\n\n    const functionParameters = ethers.getBytes(encodedData);\n\n    return {\n      ...parsedParams,\n      contractId: factoryContractId,\n      functionParameters,\n      gas: 3000000, //TODO: make this configurable\n    };\n  }\n\n  static normaliseCreateERC721Params(\n    params: z.infer<ReturnType<typeof createERC721Parameters>>,\n    factoryContractId: string,\n    factoryContractAbi: string[],\n    factoryContractFunctionName: string,\n    context: Context,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof createERC721Parameters>> =\n      this.parseParamsWithSchema(params, createERC721Parameters, context);\n\n    // Create an interface for encoding\n    const iface = new ethers.Interface(factoryContractAbi);\n\n    // Encode the function call\n    const encodedData = iface.encodeFunctionData(factoryContractFunctionName, [\n      parsedParams.tokenName,\n      parsedParams.tokenSymbol,\n      parsedParams.baseURI,\n    ]);\n\n    const functionParameters = ethers.getBytes(encodedData);\n\n    return {\n      ...parsedParams,\n      contractId: factoryContractId,\n      functionParameters,\n      gas: 3000000, //TODO: make this configurable\n    };\n  }\n\n  static async normaliseMintFungibleTokenParams(\n    params: z.infer<ReturnType<typeof mintFungibleTokenParameters>>,\n    context: Context,\n    mirrorNode: IHederaMirrornodeService,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof mintFungibleTokenParameters>> =\n      this.parseParamsWithSchema(params, mintFungibleTokenParameters, context);\n\n    const tokenInfo = await mirrorNode.getTokenInfo(parsedParams.tokenId);\n    const decimals = Number(tokenInfo.decimals);\n\n    // Fallback to 0 if decimals are missing or NaN\n    const safeDecimals = Number.isFinite(decimals) ? decimals : 0;\n\n    const baseAmount = toBaseUnit(parsedParams.amount, safeDecimals).toNumber();\n    return {\n      tokenId: parsedParams.tokenId,\n      amount: baseAmount,\n    };\n  }\n\n  static normaliseMintNonFungibleTokenParams(\n    params: z.infer<ReturnType<typeof mintNonFungibleTokenParameters>>,\n    context: Context,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof mintNonFungibleTokenParameters>> =\n      this.parseParamsWithSchema(params, mintNonFungibleTokenParameters, context);\n\n    const encoder = new TextEncoder();\n    const metadata = parsedParams.uris.map(uri => encoder.encode(uri));\n    return {\n      ...parsedParams,\n      metadata: metadata,\n    };\n  }\n\n  static async normaliseTransferERC20Params(\n    params: z.infer<ReturnType<typeof transferERC20Parameters>>,\n    factoryContractAbi: string[],\n    factoryContractFunctionName: string,\n    context: Context,\n    mirrorNode: IHederaMirrornodeService,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof transferERC20Parameters>> =\n      this.parseParamsWithSchema(params, transferERC20Parameters, context);\n\n    const recipientAddress = await AccountResolver.getHederaEVMAddress(\n      parsedParams.recipientAddress,\n      mirrorNode,\n    );\n    const contractId = await HederaParameterNormaliser.getHederaAccountId(\n      parsedParams.contractId,\n      mirrorNode,\n    );\n    const iface = new ethers.Interface(factoryContractAbi);\n    const encodedData = iface.encodeFunctionData(factoryContractFunctionName, [\n      recipientAddress,\n      parsedParams.amount,\n    ]);\n\n    const functionParameters = ethers.getBytes(encodedData);\n\n    return {\n      contractId,\n      functionParameters,\n      gas: 100_000,\n    };\n  }\n\n  static async normaliseTransferERC721Params(\n    params: z.infer<ReturnType<typeof transferERC721Parameters>>,\n    factoryContractAbi: string[],\n    factoryContractFunctionName: string,\n    context: Context,\n    mirrorNode: IHederaMirrornodeService,\n    client: Client,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof transferERC721Parameters>> =\n      this.parseParamsWithSchema(params, transferERC721Parameters, context);\n\n    // Resolve fromAddress using AccountResolver pattern, similar to transfer-hbar\n    const resolvedFromAddress = AccountResolver.resolveAccount(\n      parsedParams.fromAddress,\n      context,\n      client,\n    );\n    const fromAddress = await AccountResolver.getHederaEVMAddress(resolvedFromAddress, mirrorNode);\n    const toAddress = await AccountResolver.getHederaEVMAddress(parsedParams.toAddress, mirrorNode);\n    const contractId = await HederaParameterNormaliser.getHederaAccountId(\n      parsedParams.contractId,\n      mirrorNode,\n    );\n    const iface = new ethers.Interface(factoryContractAbi);\n    const encodedData = iface.encodeFunctionData(factoryContractFunctionName, [\n      fromAddress,\n      toAddress,\n      parsedParams.tokenId,\n    ]);\n\n    const functionParameters = ethers.getBytes(encodedData);\n\n    return {\n      contractId,\n      functionParameters,\n      gas: 100_000,\n    };\n  }\n\n  static async normaliseMintERC721Params(\n    params: z.infer<ReturnType<typeof mintERC721Parameters>>,\n    factoryContractAbi: string[],\n    factoryContractFunctionName: string,\n    context: Context,\n    mirrorNode: IHederaMirrornodeService,\n    client: Client,\n  ) {\n    const parsedParams: z.infer<ReturnType<typeof mintERC721Parameters>> =\n      this.parseParamsWithSchema(params, mintERC721Parameters, context);\n\n    const resolvedToAddress = AccountResolver.resolveAccount(\n      parsedParams.toAddress,\n      context,\n      client,\n    );\n    const toAddress = await AccountResolver.getHederaEVMAddress(resolvedToAddress, mirrorNode);\n    const contractId = await HederaParameterNormaliser.getHederaAccountId(\n      parsedParams.contractId,\n      mirrorNode,\n    );\n    const iface = new ethers.Interface(factoryContractAbi);\n    const encodedData = iface.encodeFunctionData(factoryContractFunctionName, [toAddress]);\n    const functionParameters = ethers.getBytes(encodedData);\n\n    return {\n      contractId,\n      functionParameters,\n      gas: 100_000,\n    };\n  }\n\n  static normaliseDeleteAccount(\n    params: z.infer<ReturnType<typeof deleteAccountParameters>>,\n    context: Context,\n    client: Client,\n  ): z.infer<ReturnType<typeof deleteAccountParametersNormalised>> {\n    const parsedParams: z.infer<ReturnType<typeof deleteAccountParameters>> =\n      this.parseParamsWithSchema(params, deleteAccountParameters, context);\n\n    if (!AccountResolver.isHederaAddress(parsedParams.accountId)) {\n      throw new Error('Account ID must be a Hedera address');\n    }\n\n    // if no transfer account ID is provided, use the operator account ID\n    const transferAccountId =\n      parsedParams.transferAccountId ?? AccountResolver.getDefaultAccount(context, client);\n    if (!transferAccountId) {\n      throw new Error('Could not determine transfer account ID');\n    }\n\n    return {\n      accountId: AccountId.fromString(parsedParams.accountId),\n      transferAccountId: AccountId.fromString(transferAccountId),\n    };\n  }\n\n  static normaliseUpdateAccount(\n    params: z.infer<ReturnType<typeof updateAccountParameters>>,\n    context: Context,\n    client: Client,\n  ): z.infer<ReturnType<typeof updateAccountParametersNormalised>> {\n    const parsedParams: z.infer<ReturnType<typeof updateAccountParameters>> =\n      this.parseParamsWithSchema(params, updateAccountParameters, context);\n\n    const accountId = AccountId.fromString(\n      AccountResolver.resolveAccount(parsedParams.accountId, context, client),\n    );\n\n    const normalised: z.infer<ReturnType<typeof updateAccountParametersNormalised>> = {\n      accountId,\n    } as any;\n\n    if (parsedParams.maxAutomaticTokenAssociations !== undefined) {\n      normalised.maxAutomaticTokenAssociations = parsedParams.maxAutomaticTokenAssociations;\n    }\n    if (parsedParams.stakedAccountId !== undefined) {\n      normalised.stakedAccountId = parsedParams.stakedAccountId;\n    }\n    if (parsedParams.accountMemo !== undefined) {\n      normalised.accountMemo = parsedParams.accountMemo;\n    }\n    if (parsedParams.declineStakingReward !== undefined) {\n      normalised.declineStakingReward = parsedParams.declineStakingReward;\n    }\n\n    return normalised;\n  }\n\n  static normaliseGetTransactionRecordParams(\n    params: z.infer<ReturnType<typeof transactionRecordQueryParameters>>,\n    context: Context,\n  ): z.infer<ReturnType<typeof normalisedTransactionRecordQueryParameters>> {\n    const parsedParams: z.infer<ReturnType<typeof transactionRecordQueryParameters>> =\n      this.parseParamsWithSchema(params, transactionRecordQueryParameters, context);\n\n    const normalised: z.infer<ReturnType<typeof normalisedTransactionRecordQueryParameters>> = {\n      nonce: parsedParams.nonce,\n    } as any;\n\n    if (!parsedParams.transactionId) {\n      throw new Error('transactionId is required');\n    }\n\n    const mirrorNodeStyleRegex = /^\\d+\\.\\d+\\.\\d+-\\d+-\\d+$/;\n    const sdkStyleRegex = /^(\\d+\\.\\d+\\.\\d+)@(\\d+)\\.(\\d+)$/;\n\n    if (mirrorNodeStyleRegex.test(parsedParams.transactionId)) {\n      // Already in mirror-node style, use as-is\n      normalised.transactionId = parsedParams.transactionId;\n    } else {\n      const match = parsedParams.transactionId.match(sdkStyleRegex);\n      if (!match) {\n        throw new Error(`Invalid transactionId format: ${parsedParams.transactionId}`);\n      }\n\n      const [, accountId, seconds, nanos] = match;\n      normalised.transactionId = `${accountId}-${seconds}-${nanos}`;\n    }\n\n    return normalised;\n  }\n\n  static async getHederaAccountId(\n    address: string,\n    mirrorNode: IHederaMirrornodeService,\n  ): Promise<string> {\n    if (AccountResolver.isHederaAddress(address)) {\n      return address;\n    }\n    const account = await mirrorNode.getAccount(address);\n    return account.accountId;\n  }\n\n  static async normaliseUpdateToken(\n    params: z.infer<ReturnType<typeof updateTokenParameters>>,\n    context: Context,\n    client: Client,\n  ): Promise<z.infer<ReturnType<typeof updateTokenParametersNormalised>>> {\n    const parsedParams: z.infer<ReturnType<typeof updateTokenParameters>> =\n      this.parseParamsWithSchema(params, updateTokenParameters, context);\n\n    const tokenId = TokenId.fromString(parsedParams.tokenId);\n    const userPublicKey = await AccountResolver.getDefaultPublicKey(context, client);\n\n    const normalised: z.infer<ReturnType<typeof updateTokenParametersNormalised>> = {\n      tokenId,\n    };\n\n    // Keys\n    const maybeKeys: Record<string, string | boolean | undefined> = {\n      adminKey: parsedParams.adminKey,\n      supplyKey: parsedParams.supplyKey,\n      wipeKey: parsedParams.wipeKey,\n      freezeKey: parsedParams.freezeKey,\n      kycKey: parsedParams.kycKey,\n      feeScheduleKey: parsedParams.feeScheduleKey,\n      pauseKey: parsedParams.pauseKey,\n      metadataKey: parsedParams.metadataKey,\n    };\n\n    for (const [field, rawVal] of Object.entries(maybeKeys)) {\n      const resolved = this.resolveKey(rawVal, userPublicKey);\n      if (resolved) {\n        (normalised as any)[field] = resolved;\n      }\n    }\n\n    // Other optional props\n    if (parsedParams.tokenName) {\n      normalised.tokenName = parsedParams.tokenName;\n    }\n    if (parsedParams.tokenSymbol) {\n      normalised.tokenSymbol = parsedParams.tokenSymbol;\n    }\n    if (parsedParams.treasuryAccountId) {\n      normalised.treasuryAccountId = parsedParams.treasuryAccountId;\n    }\n    if (parsedParams.tokenMemo) {\n      normalised.tokenMemo = parsedParams.tokenMemo;\n    }\n    if (parsedParams.metadata) {\n      normalised.metadata = new TextEncoder().encode(parsedParams.metadata);\n    }\n    if (parsedParams.autoRenewAccountId) {\n      normalised.autoRenewAccountId = parsedParams.autoRenewAccountId;\n    }\n\n    return normalised;\n  }\n  \n  private static resolveKey(\n    rawValue: string | boolean | undefined,\n    userKey: PublicKey,\n  ): PublicKey | undefined {\n    if (rawValue === undefined) return undefined;\n    if (typeof rawValue === 'string') {\n      // we do not get the info what type of key the user is passing, so we try both ED25519 and ECDSA\n      try {\n        return PublicKey.fromStringED25519(rawValue);\n      } catch {\n        return PublicKey.fromStringECDSA(rawValue);\n      }\n    }\n    if (rawValue) {\n      return userKey;\n    }\n    return undefined;\n  };\n\n}\n","import BigNumber from 'bignumber.js';\n\n/**\n * Converts a token amount to base units (the smallest denomination).\n * Example: toBaseUnit(1.5, 8) => BigNumber(150000000)\n *\n * @param amount - The human-readable token amount (number or BigNumber).\n * @param decimals - The number of decimals the token uses.\n * @returns The amount in base units as BigNumber.\n */\nexport function toBaseUnit(amount: number | BigNumber, decimals: number): BigNumber {\n  const amountBN = new BigNumber(amount);\n  const multiplier = new BigNumber(10).pow(decimals);\n  return amountBN.multipliedBy(multiplier).integerValue(BigNumber.ROUND_FLOOR);\n}\n\n/**\n * Converts a base unit amount to a human-readable value.\n * Example: toDisplayUnit(150000000, 8) => BigNumber(1.5)\n *\n * @param baseAmount - The amount in base units (number or BigNumber).\n * @param decimals - The number of decimals the token uses.\n * @returns The human-readable token amount as BigNumber.\n */\nexport function toDisplayUnit(baseAmount: number | BigNumber, decimals: number): BigNumber {\n  const baseAmountBN = new BigNumber(baseAmount);\n  const divisor = new BigNumber(10).pow(decimals);\n  return baseAmountBN.dividedBy(divisor);\n}\n","import { Client, PublicKey } from '@hashgraph/sdk';\nimport { Context, AgentMode } from '@/shared/configuration';\nimport { IHederaMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-service.interface';\n\nexport class AccountResolver {\n  /**\n   * Gets the default account based on the agent mode and context.\n   * In RETURN_BYTES mode, prefers context.accountId (user's account).\n   * In AUTONOMOUS mode or when no context account, uses an operator account.\n   */\n  static getDefaultAccount(context: Context, client: Client): string {\n    // Prefer context.accountId (user's account) if it is set\n    if(context.accountId) {\n      return context.accountId;\n    }\n\n    // Use operator account if context.accountId is not set\n    const operatorAccount = client.operatorAccountId?.toString();\n    if (!operatorAccount) {\n      throw new Error('No account available: neither context.accountId nor operator account');\n    }\n\n    return operatorAccount;\n  }\n\n  static async getDefaultPublicKey(context: Context, client: Client): Promise<PublicKey> {\n    if (context.mode === AgentMode.AUTONOMOUS) {\n      return client.operatorPublicKey!;\n    }\n\n    const defaultAccount = this.getDefaultAccount(context, client);\n    const defaultAccountDetails = await context.mirrornodeService?.getAccount(defaultAccount);\n\n    if (!defaultAccountDetails?.accountPublicKey) {\n      throw new Error('No public key available for the default account');\n    }\n\n    return PublicKey.fromString(defaultAccountDetails.accountPublicKey);\n  }\n\n  /**\n   * Resolves an account ID, using the provided account or falling back to the default.\n   */\n  static resolveAccount(\n    providedAccount: string | undefined,\n    context: Context,\n    client: Client,\n  ): string {\n    return providedAccount || this.getDefaultAccount(context, client);\n  }\n\n  /**\n   * Gets a description of which account will be used as default for prompts.\n   */\n  static getDefaultAccountDescription(context: Context): string {\n    if (context.mode === AgentMode.RETURN_BYTES && context.accountId) {\n      return `user account (${context.accountId})`;\n    }\n    return 'operator account';\n  }\n\n  static isHederaAddress(address: string): boolean {\n    return address.startsWith('0.') || address.startsWith('0.0.');\n  }\n\n  static async getHederaEVMAddress(\n    address: string,\n    mirrorNode: IHederaMirrornodeService,\n  ): Promise<string> {\n    if (!AccountResolver.isHederaAddress(address)) {\n      return address;\n    }\n    const account = await mirrorNode.getAccount(address);\n    return account.evmAddress;\n  }\n}\n","import { Context } from '@/shared/configuration';\nimport { z } from 'zod';\n\nexport const contractExecuteTransactionParametersNormalised = (_context: Context = {}) =>\n  z.object({\n    contractId: z.string().describe('The ID of the contract to execute.'),\n    functionParameters: z\n      .instanceof(Uint8Array<ArrayBufferLike>)\n      .describe('The parameters of the function to execute.'),\n    gas: z.number().int().describe('The gas limit for the contract call.'),\n  });\n\nexport const transferERC20Parameters = (_context: Context = {}) =>\n  z.object({\n    contractId: z.string().describe('The id of the ERC20 contract.'),\n    recipientAddress: z.string().describe('Address to which the tokens will be transferred.'),\n    amount: z.number().describe('The amount of tokens to transfer.'),\n  });\n\nexport const createERC721Parameters = (_context: Context = {}) =>\n  z.object({\n    tokenName: z.string().describe('The name of the token.'),\n    tokenSymbol: z.string().describe('The symbol of the token.'),\n    baseURI: z.string().default('').describe('The base URI for token metadata.'),\n  });\n\nexport const createERC20Parameters = (_context: Context = {}) =>\n  z.object({\n    tokenName: z.string().describe('The name of the token.'),\n    tokenSymbol: z.string().describe('The symbol of the token.'),\n    decimals: z\n      .number()\n      .int()\n      .min(0)\n      .optional()\n      .default(18)\n      .describe('The number of decimals the token supports.'),\n    initialSupply: z\n      .number()\n      .int()\n      .min(0)\n      .optional()\n      .default(0)\n      .describe('The initial supply of the token.'),\n  });\n\nexport const transferERC721Parameters = (_context: Context = {}) =>\n  z.object({\n    contractId: z.string().describe('The id of the ERC721 contract.'),\n    fromAddress: z\n      .string()\n      .optional()\n      .describe('Address from which the token will be transferred.'),\n    toAddress: z.string().describe('Address to which the token will be transferred.'),\n    tokenId: z.number().describe('The ID of the token to transfer.'),\n  });\n\nexport const mintERC721Parameters = (_context: Context = {}) =>\n  z.object({\n    contractId: z.string().describe('The id of the ERC721 contract.'),\n    toAddress: z.string().optional().describe('Address to which the token will be minted.'),\n  });\n\nexport const contractInfoQueryParameters = (_context: Context = {}) =>\n  z.object({\n    contractId: z.string().describe('The token ID to query.'),\n  });\n","import { Context } from '@/shared';\nimport { z } from 'zod';\n\nexport const transactionRecordQueryParameters = (_context: Context = {}) => {\n  return z.object({\n    transactionId: z\n      .string()\n      .describe(\n        'The transaction ID to fetch details for. Should be in format \\\\\"shard.realm.num-sss-nnn\\\\\" format where sss are seconds and nnn are nanoseconds',\n      ),\n    nonce: z\n      .number()\n      .nonnegative()\n      .optional()\n      .describe('Optional nonnegative nonce value for the transaction'),\n  });\n};\n\nexport const normalisedTransactionRecordQueryParameters = (_context: Context = {}) =>\n  transactionRecordQueryParameters(_context).extend({});\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport { airdropFungibleTokenParameters } from '@/shared/parameter-schemas/token.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst airdropFungibleTokenPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const sourceAccountDesc = PromptGenerator.getAccountParameterDescription(\n    'sourceAccountId',\n    context,\n  );\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will airdrop a fungible token on Hedera.\n\nParameters:\n- tokenId (str, required): The id of the token\n- ${sourceAccountDesc}\n- recipients (array, required): A list of recipient objects, each containing:\n  - accountId (string): The recipient's account ID (e.g., \"0.0.1234\")\n  - amount (number or string): The amount of tokens to send to that recipient (in base units)\n- transactionMemo (str, optional): Optional memo for the transaction\n${usageInstructions}\n\nIf the user specifies multiple recipients in a single request, include them all in **one tool call** as a list of recipients.\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Token successfully airdropped with transaction id ${response.transactionId.toString()}`;\n};\n\nconst airdropFungibleToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof airdropFungibleTokenParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const normalisedParams = await HederaParameterNormaliser.normaliseAirdropFungibleTokenParams(\n      params,\n      context,\n      client,\n      mirrornodeService,\n    );\n    const tx = HederaBuilder.airdropFungibleToken(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to airdrop fungible token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[airdrop_fungible_token_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const AIRDROP_FUNGIBLE_TOKEN_TOOL = 'airdrop_fungible_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: AIRDROP_FUNGIBLE_TOKEN_TOOL,\n  name: 'Airdrop Fungible Token',\n  description: airdropFungibleTokenPrompt(context),\n  parameters: airdropFungibleTokenParameters(context),\n  execute: airdropFungibleToken,\n});\n\nexport default tool;\n","import { AccountId, Client, ScheduleId, TokenId, TopicId, Transaction, TransactionId } from '@hashgraph/sdk';\nimport { AgentMode, Context } from '@/shared/configuration';\n\ninterface TxModeStrategy {\n  handle<T extends Transaction>(\n    tx: T,\n    client: Client,\n    context: Context,\n    postProcess?: (response: RawTransactionResponse) => unknown,\n  ): Promise<unknown>;\n}\n\nexport interface RawTransactionResponse {\n  status: string;\n  accountId: AccountId | null;\n  tokenId: TokenId | null;\n  transactionId: string;\n  topicId: TopicId | null;\n  scheduleId: ScheduleId | null;\n}\n\nexport interface ExecuteStrategyResult {\n  raw: RawTransactionResponse;\n  humanMessage: string;\n}\n\nexport class ExecuteStrategy implements TxModeStrategy {\n  defaultPostProcess(response: RawTransactionResponse): string {\n    return JSON.stringify(response, null, 2);\n  }\n\n  async handle(\n    tx: Transaction,\n    client: Client,\n    _context: Context,\n    postProcess: (response: RawTransactionResponse) => string = this.defaultPostProcess,\n  ) {\n    const submit = await tx.execute(client);\n    const receipt = await submit.getReceipt(client);\n    const rawTransactionResponse: RawTransactionResponse = {\n      status: receipt.status.toString(),\n      accountId: receipt.accountId,\n      tokenId: receipt.tokenId,\n      transactionId: tx.transactionId?.toString() ?? '',\n      topicId: receipt.topicId,\n      scheduleId: receipt.scheduleId,\n    };\n    return {\n      raw: rawTransactionResponse,\n      humanMessage: postProcess(rawTransactionResponse),\n    };\n  }\n}\n\nclass ReturnBytesStrategy implements TxModeStrategy {\n  async handle(tx: Transaction, _client: Client, context: Context) {\n    if (!context.accountId) throw new Error('…');\n    const id = TransactionId.generate(context.accountId);\n    tx.setNodeAccountIds([new AccountId(4), new AccountId(5)])\n      .setTransactionId(id)\n      .freeze();\n    return { bytes: tx.toBytes() };\n  }\n}\n\nconst getStrategyFromContext = (context: Context) => {\n  if (context.mode === AgentMode.RETURN_BYTES) {\n    return new ReturnBytesStrategy();\n  }\n  return new ExecuteStrategy();\n};\n\nexport const handleTransaction = async (\n  tx: Transaction,\n  client: Client,\n  context: Context,\n  postProcess?: (response: RawTransactionResponse) => string,\n) => {\n  const strategy = getStrategyFromContext(context);\n  return await strategy.handle(tx, client, context, postProcess);\n};\n","import {\n  TokenAirdropTransaction,\n  TokenCreateTransaction,\n  TokenDeleteTransaction,\n  TopicCreateTransaction,\n  TopicDeleteTransaction,\n  TopicMessageSubmitTransaction,\n  TransferTransaction,\n  ContractExecuteTransaction,\n  TokenMintTransaction,\n  TokenAssociateTransaction,\n  AccountCreateTransaction,\n  AccountDeleteTransaction,\n  AccountUpdateTransaction,\n  ScheduleSignTransaction,\n  ScheduleCreateTransaction,\n  TokenUpdateTransaction,\n  ScheduleDeleteTransaction,\n  TokenDissociateTransaction,\n  TopicUpdateTransaction,\n  AccountId,\n  TokenId,\n  AccountAllowanceApproveTransaction,\n} from '@hashgraph/sdk';\nimport {\n  airdropFungibleTokenParametersNormalised,\n  associateTokenParametersNormalised,\n  createFungibleTokenParametersNormalised,\n  createNonFungibleTokenParametersNormalised,\n  deleteTokenParametersNormalised,\n  dissociateTokenParametersNormalised,\n  mintFungibleTokenParametersNormalised,\n  mintNonFungibleTokenParametersNormalised,\n  updateTokenParametersNormalised,\n} from '@/shared/parameter-schemas/token.zod';\nimport z from 'zod';\nimport {\n  createAccountParametersNormalised,\n  deleteAccountParametersNormalised,\n  transferHbarParametersNormalised,\n  updateAccountParametersNormalised,\n  createScheduleTransactionParametersNormalised,\n  signScheduleTransactionParameters,\n  scheduleDeleteTransactionParameters,\n  approveHbarAllowanceParametersNormalised,\n} from '@/shared/parameter-schemas/account.zod';\nimport {\n  createTopicParametersNormalised,\n  deleteTopicParametersNormalised,\n  submitTopicMessageParametersNormalised,\n  updateTopicParametersNormalised,\n} from '@/shared/parameter-schemas/consensus.zod';\nimport { contractExecuteTransactionParametersNormalised } from '@/shared/parameter-schemas/evm.zod';\n\nexport default class HederaBuilder {\n  static createScheduleTransaction(\n    params: z.infer<ReturnType<typeof createScheduleTransactionParametersNormalised>>,\n  ) {\n    return new ScheduleCreateTransaction(params.params).setScheduledTransaction(\n      params.scheduledTransaction,\n    );\n  }\n\n  static createFungibleToken(\n    params: z.infer<ReturnType<typeof createFungibleTokenParametersNormalised>>,\n  ) {\n    return new TokenCreateTransaction(params);\n  }\n\n  static createNonFungibleToken(\n    params: z.infer<ReturnType<typeof createNonFungibleTokenParametersNormalised>>,\n  ) {\n    return new TokenCreateTransaction(params);\n  }\n\n  static transferHbar(params: z.infer<ReturnType<typeof transferHbarParametersNormalised>>) {\n    return new TransferTransaction(params);\n  }\n\n  static airdropFungibleToken(\n    params: z.infer<ReturnType<typeof airdropFungibleTokenParametersNormalised>>,\n  ) {\n    return new TokenAirdropTransaction(params as any);\n  }\n\n  static updateToken(params: z.infer<ReturnType<typeof updateTokenParametersNormalised>>) {\n    return new TokenUpdateTransaction(params);\n  }\n\n  static createTopic(params: z.infer<ReturnType<typeof createTopicParametersNormalised>>) {\n    const { transactionMemo, ...rest } = params as any;\n    const tx = new TopicCreateTransaction(rest);\n    if (transactionMemo) tx.setTransactionMemo(transactionMemo);\n    return tx;\n  }\n\n  static submitTopicMessage(\n    params: z.infer<ReturnType<typeof submitTopicMessageParametersNormalised>>,\n  ) {\n    const { transactionMemo, ...rest } = params as any;\n    const tx = new TopicMessageSubmitTransaction(rest);\n    if (transactionMemo) tx.setTransactionMemo(transactionMemo);\n    return tx;\n  }\n\n  static updateTopic(params: z.infer<ReturnType<typeof updateTopicParametersNormalised>>) {\n    return new TopicUpdateTransaction(params);\n  }\n\n  static executeTransaction(\n    params: z.infer<ReturnType<typeof contractExecuteTransactionParametersNormalised>>,\n  ) {\n    return new ContractExecuteTransaction(params);\n  }\n\n  static mintFungibleToken(\n    params: z.infer<ReturnType<typeof mintFungibleTokenParametersNormalised>>,\n  ) {\n    return new TokenMintTransaction(params);\n  }\n\n  static mintNonFungibleToken(\n    params: z.infer<ReturnType<typeof mintNonFungibleTokenParametersNormalised>>,\n  ) {\n    return new TokenMintTransaction(params);\n  }\n\n  static dissociateToken(params: z.infer<ReturnType<typeof dissociateTokenParametersNormalised>>) {\n    return new TokenDissociateTransaction(params);\n  }\n\n  static createAccount(params: z.infer<ReturnType<typeof createAccountParametersNormalised>>) {\n    return new AccountCreateTransaction(params);\n  }\n\n  static deleteAccount(params: z.infer<ReturnType<typeof deleteAccountParametersNormalised>>) {\n    return new AccountDeleteTransaction(params);\n  }\n\n  static updateAccount(params: z.infer<ReturnType<typeof updateAccountParametersNormalised>>) {\n    return new AccountUpdateTransaction(params);\n  }\n\n  static deleteToken(params: z.infer<ReturnType<typeof deleteTokenParametersNormalised>>) {\n    return new TokenDeleteTransaction(params);\n  }\n\n  static deleteTopic(params: z.infer<ReturnType<typeof deleteTopicParametersNormalised>>) {\n    return new TopicDeleteTransaction(params);\n  }\n\n  static signScheduleTransaction(\n    params: z.infer<ReturnType<typeof signScheduleTransactionParameters>>,\n  ) {\n    return new ScheduleSignTransaction(params);\n  }\n\n  static deleteScheduleTransaction(\n    params: z.infer<ReturnType<typeof scheduleDeleteTransactionParameters>>,\n  ) {\n    return new ScheduleDeleteTransaction(params as any);\n  }\n\n  static associateToken(params: z.infer<ReturnType<typeof associateTokenParametersNormalised>>) {\n    return new TokenAssociateTransaction({\n      accountId: AccountId.fromString(params.accountId),\n      tokenIds: params.tokenIds.map(t => TokenId.fromString(t)),\n    });\n  }\n\n  static approveHbarAllowance(\n    params: z.infer<ReturnType<typeof approveHbarAllowanceParametersNormalised>>,\n  ) {\n    const tx = new AccountAllowanceApproveTransaction(params as any);\n    if (params.transactionMemo) {\n      tx.setTransactionMemo(params.transactionMemo);\n    }\n    return tx;\n  }\n}\n","import { LedgerId } from '@hashgraph/sdk';\nimport BigNumber from 'bignumber.js';\n\nexport const LedgerIdToBaseUrl: Map<string, string> = new Map([\n  [LedgerId.MAINNET.toString(), 'https://mainnet-public.mirrornode.hedera.com/api/v1'],\n  [LedgerId.TESTNET.toString(), 'https://testnet.mirrornode.hedera.com/api/v1'],\n]);\n\nexport type AccountTokenBalancesQueryParams = {\n  accountId: string;\n  tokenId?: string;\n};\n\nexport type TopicMessagesQueryParams = {\n  topicId: string;\n  lowerTimestamp: string;\n  upperTimestamp: string;\n  limit: number;\n};\n\nexport type TopicMessage = {\n  topicId: string;\n  message: string;\n  consensus_timestamp: string;\n};\n\nexport type TopicMessagesResponse = {\n  topicId: string;\n  messages: TopicMessage[];\n};\n\n// Mirrors Hedera Mirror Node /topics/{topicId} response shape (fields optional to be resilient)\nexport type TopicInfo = {\n  topic_id?: string;\n  memo?: string | null;\n  admin_key?: {\n    _type?: string;\n    key?: string;\n  } | null;\n  submit_key?: {\n    _type?: string;\n    key?: string;\n  } | null;\n  auto_renew_account?: string | null;\n  auto_renew_period?: number | null;\n  created_timestamp?: string | null;\n  deleted?: boolean;\n  sequence_number?: number | null;\n  running_hash?: string | null;\n  running_hash_version?: number | null;\n};\n\nexport type TokenBalance = {\n  automatic_association: boolean;\n  created_timestamp: string;\n  token_id: string;\n  freeze_status: string;\n  kyc_status: string;\n  balance: number;\n  decimals: number;\n};\n\nexport type TokenBalancesResponse = {\n  tokens: TokenBalance[];\n};\n\nexport type AccountResponse = {\n  accountId: string;\n  accountPublicKey: string;\n  balance: AccountBalanceResponse;\n  evmAddress: string;\n};\n\nexport type AccountAPIResponse = {\n  account: string;\n  key: {\n    key: string;\n    _type: KeyEncryptionType;\n  };\n  balance: AccountBalanceResponse;\n  evm_address: string;\n};\n\nexport type AccountBalanceResponse = {\n  balance: BigNumber;\n  timestamp: string;\n  tokens: TokenBalance[];\n};\n\nexport type TopicMessagesAPIResponse = {\n  messages: TopicMessage[];\n  links: {\n    next: string | null;\n  };\n};\n\nexport type KeyEncryptionType = 'ED25519' | 'ECDSA_SECP256K1';\n\n/**\n * This type matches responses from Hedera Mirror Node API\n */\nexport type TokenInfo = {\n  // Basic Token Identity\n  token_id?: string;\n  name: string;\n  symbol: string;\n  type?: string;\n  memo?: string;\n\n  // Supply Information\n  decimals: string;\n  initial_supply?: string;\n  total_supply?: string;\n  max_supply?: string;\n  supply_type?: string;\n\n  // Account & Treasury\n  treasury_account_id?: string;\n  auto_renew_account?: string;\n  auto_renew_period?: number;\n\n  // Status & State\n  deleted: boolean;\n  freeze_default?: boolean;\n  pause_status?: string;\n\n  // Timestamps\n  created_timestamp?: string;\n  modified_timestamp?: string;\n  expiry_timestamp?: number;\n\n  // Keys\n  admin_key?: {\n    _type: string;\n    key: string;\n  } | null;\n  supply_key?: {\n    _type: string;\n    key: string;\n  } | null;\n  kyc_key?: {\n    _type: string;\n    key: string;\n  } | null;\n  freeze_key?: {\n    _type: string;\n    key: string;\n  } | null;\n  wipe_key?: {\n    _type: string;\n    key: string;\n  } | null;\n  pause_key?: {\n    _type: string;\n    key: string;\n  } | null;\n  fee_schedule_key?: {\n    _type: string;\n    key: string;\n  } | null;\n  metadata_key?: {\n    _type: string;\n    key: string;\n  } | null;\n\n  // Metadata & Custom Features\n  metadata?: string;\n  custom_fees?: {\n    created_timestamp: string;\n    fixed_fees: any[];\n    fractional_fees: any[];\n  };\n};\n\nexport type TransferData = {\n  account: string;\n  amount: number;\n  is_approval: boolean;\n};\n\nexport type TransactionData = {\n  batch_key: string | null;\n  bytes: string | null;\n  charged_tx_fee: number;\n  consensus_timestamp: string;\n  entity_id: string;\n  max_fee: string;\n  max_custom_fees: any[];\n  memo_base64: string;\n  name: string;\n  nft_transfers: any[];\n  node: string;\n  nonce: number;\n  parent_consensus_timestamp: string | null;\n  result: string;\n  scheduled: boolean;\n  staking_reward_transfers: any[];\n  token_transfers: any[];\n  transaction_hash: string;\n  transaction_id: string;\n  transfers: TransferData[];\n  valid_duration_seconds: string;\n  valid_start_timestamp: string;\n};\n\nexport type TransactionDetailsResponse = {\n  transactions: TransactionData[];\n};\n\nexport interface ContractInfo {\n  admin_key?: {\n    description?: string;\n    _type?: string;\n    example?: string;\n    key?: string;\n  } | null;\n\n  auto_renew_account?: string | null;\n  auto_renew_period?: number | null;\n  contract_id?: string | null;\n  created_timestamp?: string | null;\n  deleted?: boolean;\n  evm_address?: string;\n  expiration_timestamp?: string | null;\n  file_id?: string | null;\n  max_automatic_token_associations?: number | null;\n  memo?: string;\n  nonce?: number | null;\n  obtainer_id?: string | null;\n  permanent_removal?: boolean | null;\n  proxy_account_id?: string | null;\n\n  timestamp?: {\n    description?: string;\n    from: string;\n    to?: string | null;\n  };\n}\n\nexport type ExchangeRate = {\n  hbar_equivalent: number;\n  cent_equivalent: number;\n  expiration_time: number;\n};\n\nexport type ExchangeRateResponse = {\n  current_rate: ExchangeRate;\n  next_rate: ExchangeRate;\n  timestamp: string;\n};\n\nexport interface TokenAirdropsResponse {\n  airdrops: TokenAirdrop[];\n  links: Links;\n}\n\nexport interface TokenAirdrop {\n  amount: number;\n  receiver_id: string | null;\n  sender_id: string | null;\n  serial_number: number | null;\n  timestamp: TimestampRange;\n  token_id: string | null;\n}\n\nexport interface TimestampRange {\n  from: string;\n  to: string | null;\n}\n\nexport interface Links {\n  next: string | null;\n}\n","import { LedgerId } from '@hashgraph/sdk';\nimport { IHederaMirrornodeService } from './hedera-mirrornode-service.interface';\nimport {\n  AccountAPIResponse,\n  AccountResponse,\n  LedgerIdToBaseUrl,\n  TokenBalancesResponse,\n  TokenInfo,\n  TopicInfo,\n  TopicMessage,\n  TopicMessagesAPIResponse,\n  TopicMessagesQueryParams,\n  TopicMessagesResponse,\n  TransactionDetailsResponse,\n  ContractInfo,\n  TokenAirdropsResponse,\n  ExchangeRateResponse,\n} from './types';\nimport BigNumber from 'bignumber.js';\n\nexport class HederaMirrornodeServiceDefaultImpl implements IHederaMirrornodeService {\n  private readonly baseUrl: string;\n\n  constructor(private readonly ledgerId: LedgerId) {\n    if (!LedgerIdToBaseUrl.has(ledgerId.toString())) {\n      throw new Error(`Network type ${ledgerId} not supported`);\n    }\n    this.baseUrl = LedgerIdToBaseUrl.get(ledgerId.toString())!;\n  }\n\n  async getAccount(accountId: string): Promise<AccountResponse> {\n    const url = `${this.baseUrl}/accounts/${accountId}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch account ${accountId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    const data: AccountAPIResponse = await response.json();\n\n    // Check if the response is empty (no account found)\n    if (!data.account) {\n      throw new Error(`Account ${accountId} not found`);\n    }\n\n    return {\n      accountId: data.account,\n      accountPublicKey: data?.key?.key,\n      balance: data.balance,\n      evmAddress: data.evm_address,\n    };\n  }\n\n  async getAccountHBarBalance(accountId: string): Promise<BigNumber> {\n    let account;\n    try {\n      account = await this.getAccount(accountId);\n    } catch (error) {\n      throw Error(`Failed to fetch hbar balance for ${accountId}: ${error}`);\n    }\n    return new BigNumber(account.balance.balance);\n  }\n\n  async getAccountTokenBalances(\n    accountId: string,\n    tokenId?: string,\n  ): Promise<TokenBalancesResponse> {\n    const tokenIdParam = tokenId ? `&token.id=${tokenId}` : '';\n    const url = `${this.baseUrl}/accounts/${accountId}/tokens?${tokenIdParam}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch balance for an account ${accountId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    return await response.json();\n  }\n\n  async getTopicMessages(queryParams: TopicMessagesQueryParams): Promise<TopicMessagesResponse> {\n    const lowerThreshold = queryParams.lowerTimestamp\n      ? `&timestamp=gte:${queryParams.lowerTimestamp}`\n      : '';\n    const upperThreshold = queryParams.upperTimestamp\n      ? `&timestamp=lte:${queryParams.upperTimestamp}`\n      : '';\n    const baseParams = `&order=desc&limit=100`;\n    let url: string | null =\n      `${this.baseUrl}/topics/${queryParams.topicId}/messages?${lowerThreshold}${upperThreshold}${baseParams}`;\n    const arrayOfMessages: TopicMessage[] = [];\n    let fetchedMessages = 0;\n    try {\n      while (url) {\n        // Results are paginated\n\n        fetchedMessages += 1;\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error(\n            `Failed to get topic messages for ${queryParams.topicId}: ${response.status} ${response.statusText}`,\n          );\n        }\n\n        const data: TopicMessagesAPIResponse = await response.json();\n\n        arrayOfMessages.push(...data.messages);\n        if (fetchedMessages >= 100) {\n          break;\n        }\n\n        // Update URL for pagination.\n        // This endpoint does not return a full path to the next page, it has to be built first\n        url = data.links.next ? this.baseUrl + data.links.next : null;\n      }\n    } catch (error) {\n      console.error(`Failed to fetch topic messages for ${queryParams.topicId}. Error:`, error);\n      throw error;\n    }\n    return {\n      topicId: queryParams.topicId,\n      messages: arrayOfMessages.slice(0, queryParams.limit),\n    };\n  }\n\n  async getTokenInfo(tokenId: string): Promise<TokenInfo> {\n    const url = `${this.baseUrl}/tokens/${tokenId}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to get token info for a token ${tokenId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    return await response.json();\n  }\n\n  async getTopicInfo(topicId: string): Promise<TopicInfo> {\n    const url = `${this.baseUrl}/topics/${topicId}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to get topic info for ${topicId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    return await response.json();\n  }\n\n  async getTransactionRecord(\n    transactionId: string,\n    nonce?: number,\n  ): Promise<TransactionDetailsResponse> {\n    let url = `${this.baseUrl}/transactions/${transactionId}`;\n    if (nonce !== undefined) {\n      url += `?nonce=${nonce}`;\n    }\n\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to get transaction record for ${transactionId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    return await response.json();\n  }\n\n  async getContractInfo(contractId: string): Promise<ContractInfo> {\n    const url = `${this.baseUrl}/contracts/${contractId}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to get contract info for ${contractId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    return await response.json();\n  }\n\n  async getPendingAirdrops(accountId: string): Promise<TokenAirdropsResponse> {\n    const url = `${this.baseUrl}/accounts/${accountId}/airdrops/pending`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch pending airdrops for an account ${accountId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    return await response.json();\n  }\n\n  async getOutstandingAirdrops(accountId: string): Promise<TokenAirdropsResponse> {\n    const url = `${this.baseUrl}/accounts/${accountId}/airdrops/outstanding`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch outstanding airdrops for an account ${accountId}: ${response.status} ${response.statusText}`,\n      );\n    }\n\n    return await response.json();\n  }\n\n  async getExchangeRate(timestamp?: string): Promise<ExchangeRateResponse> {\n    const timestampParam = timestamp ? `?timestamp=${encodeURIComponent(timestamp)}` : '';\n    const url = `${this.baseUrl}/network/exchangerate${timestampParam}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}. Message: ${response.statusText}`);\n    }\n    return await response.json();\n  }\n}\n","import { LedgerId } from '@hashgraph/sdk';\nimport { HederaMirrornodeServiceDefaultImpl } from './hedera-mirrornode-service-default-impl';\nimport { IHederaMirrornodeService } from './hedera-mirrornode-service.interface';\n\nexport const getMirrornodeService = (\n  mirrornodeService: IHederaMirrornodeService | undefined,\n  ledgerId: LedgerId,\n) => {\n  if (mirrornodeService) {\n    return mirrornodeService;\n  }\n  return new HederaMirrornodeServiceDefaultImpl(ledgerId);\n};\n","import { Context, AgentMode } from '@/shared/configuration';\nimport { AccountResolver } from '@/shared';\n\nexport class PromptGenerator {\n  /**\n   * Generates a consistent context snippet for tool prompts.\n   */\n  static getContextSnippet(context: Context): string {\n    const lines = ['Context:'];\n\n    if (context.mode === AgentMode.RETURN_BYTES) {\n      lines.push(`- Mode: Return Bytes (preparing transactions for user signing)`);\n      if (context.accountId) {\n        lines.push(`- User Account: ${context.accountId} (default for transaction parameters)`);\n        lines.push(`- When no account is specified, ${context.accountId} will be used`);\n      } else {\n        lines.push(`- User Account: Not specified`);\n        lines.push(`- When no account is specified, the operator account will be used`);\n      }\n    } else if (context.mode === AgentMode.AUTONOMOUS) {\n      lines.push(`- Mode: Autonomous (agent executes transactions directly)`);\n      if (context.accountId) {\n        lines.push(`- User Account: ${context.accountId}`);\n      }\n      lines.push(`- When no account is specified, the operator account will be used`);\n    } else {\n      lines.push(`- Mode: ${context.mode || 'Not specified'}`);\n      if (context.accountId) {\n        lines.push(`- User Account: ${context.accountId}`);\n      }\n      lines.push(`- Default account will be determined at execution time`);\n    }\n\n    return lines.join('\\n');\n  }\n\n  static getAnyAddressParameterDescription(\n    paramName: string,\n    context: Context,\n    isRequired: boolean = false,\n  ): string {\n    if (isRequired) {\n      return `${paramName} (str, required): The account address. This can be the EVM address or the Hedera account id`;\n    }\n\n    return `${paramName} (str, optional): The Hedera account ID or EVM address. If not provided, defaults to the ${AccountResolver.getDefaultAccountDescription(context)}`;\n  }\n\n  /**\n   * Generates a consistent description for optional account parameters.\n   */\n  static getAccountParameterDescription(\n    paramName: string,\n    context: Context,\n    isRequired: boolean = false,\n  ): string {\n    if (isRequired) {\n      return `${paramName} (str, required): The Hedera account ID`;\n    }\n\n    const defaultAccountDesc = AccountResolver.getDefaultAccountDescription(context);\n    return `${paramName} (str, optional): The Hedera account ID. If not provided, defaults to the ${defaultAccountDesc}`;\n  }\n\n  /**\n   * Generates consistent parameter usage instructions.\n   */\n  static getParameterUsageInstructions(): string {\n    return `\nImportant:\n- Only include optional parameters if explicitly provided by the user\n- Do not generate placeholder values for optional fields\n- Leave optional parameters undefined if not specified by the user`;\n  }\n}\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport { createFungibleTokenParameters } from '@/shared/parameter-schemas/token.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst createFungibleTokenPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const treasuryAccountDesc = PromptGenerator.getAccountParameterDescription(\n    'treasuryAccountId',\n    context,\n  );\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool creates a fungible token on Hedera.\n\nParameters:\n- tokenName (str, required): The name of the token\n- tokenSymbol (str, optional): The symbol of the token\n- initialSupply (int, optional): The initial supply of the token, defaults to 0\n- supplyType (str, optional): The supply type of the token. Can be \"finite\" or \"infinite\". Defaults to \"finite\"\n- maxSupply (int, optional): The maximum supply of the token. Only applicable if supplyType is \"finite\". Defaults to 1,000,000 if not specified\n- decimals (int, optional): The number of decimals the token supports. Defaults to 0\n- ${treasuryAccountDesc}\n- isSupplyKey (boolean, optional): If user wants to set supply key set to true, otherwise false\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Token created successfully at address ${response.tokenId?.toString()} with transaction id ${response.transactionId}`;\n};\n\nconst createFungibleToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof createFungibleTokenParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const normalisedParams = await HederaParameterNormaliser.normaliseCreateFungibleTokenParams(\n      params,\n      context,\n      client,\n      mirrornodeService,\n    );\n    const tx = HederaBuilder.createFungibleToken(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to create fungible token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[create_fungible_token_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const CREATE_FUNGIBLE_TOKEN_TOOL = 'create_fungible_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: CREATE_FUNGIBLE_TOKEN_TOOL,\n  name: 'Create Fungible Token',\n  description: createFungibleTokenPrompt(context),\n  parameters: createFungibleTokenParameters(context),\n  execute: createFungibleToken,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport { mintFungibleTokenParameters } from '@/shared/parameter-schemas/token.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst mintFungibleTokenPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will mint a given amount (supply) of an existing fungible token on Hedera.\n\nParameters:\n- tokenId (str, required): The id of the token\n- amount (number, required): The amount to be minted\n${usageInstructions}\n\nExample: \"Mint 1 of 0.0.6458037\" means minting the amount of 1 of the token with id 0.0.6458037.\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Tokens successfully minted with transaction id ${response.transactionId.toString()}`;\n};\n\nconst mintFungibleToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof mintFungibleTokenParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const normalisedParams = await HederaParameterNormaliser.normaliseMintFungibleTokenParams(\n      params,\n      context,\n      mirrornodeService,\n    );\n    const tx = HederaBuilder.mintFungibleToken(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to mint fungible token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[mint_fungible_token_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const MINT_FUNGIBLE_TOKEN_TOOL = 'mint_fungible_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: MINT_FUNGIBLE_TOKEN_TOOL,\n  name: 'Mint Fungible Token',\n  description: mintFungibleTokenPrompt(context),\n  parameters: mintFungibleTokenParameters(context),\n  execute: mintFungibleToken,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport { createNonFungibleTokenParameters } from '@/shared/parameter-schemas/token.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst createNonFungibleTokenPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const treasuryAccountDesc = PromptGenerator.getAccountParameterDescription(\n    'treasuryAccountId',\n    context,\n  );\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool creates a non-fungible token (NFT) on Hedera.\n\nParameters:\n- tokenName (str, required): Name of the token\n- tokenSymbol (str, required): Symbol of the token\n- maxSupply (int, optional): Maximum NFT supply. Defaults to 100 if not provided\n- ${treasuryAccountDesc}\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Token created successfully at address ${response.tokenId?.toString()} with transaction id ${response.transactionId.toString()}`;\n};\n\nconst createNonFungibleToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof createNonFungibleTokenParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const normalisedParams = await HederaParameterNormaliser.normaliseCreateNonFungibleTokenParams(\n      params,\n      context,\n      client,\n      mirrornodeService,\n    );\n    const tx = HederaBuilder.createNonFungibleToken(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to create non-fungible token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[create_non_fungible_token_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const CREATE_NON_FUNGIBLE_TOKEN_TOOL = 'create_non_fungible_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: CREATE_NON_FUNGIBLE_TOKEN_TOOL,\n  name: 'Create Non-Fungible Token',\n  description: createNonFungibleTokenPrompt(context),\n  parameters: createNonFungibleTokenParameters(context),\n  execute: createNonFungibleToken,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport { mintNonFungibleTokenParameters } from '@/shared/parameter-schemas/token.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst mintNonFungibleTokenPrompt = (_context: Context = {}) => {\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n\nThis tool will mint NFTs with its unique metadata for the class of NFTs (non-fungible tokens) defined by the tokenId on Hedera.\n\nParameters:\n- tokenId (str, required): The id of the token\n- uris (array, required): An array of strings (URIs) of maximum size 10 hosting the NFT metadata\n${usageInstructions}\n\nExample: \"Mint 0.0.6465503 with metadata: ipfs://bafyreiao6ajgsfji6qsgbqwdtjdu5gmul7tv2v3pd6kjgcw5o65b2ogst4/metadata.json\" means minting an NFT with the given metadata URI for the class of NFTs defined by the token with id 0.0.6465503.\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Token ${response.tokenId?.toString()} successfully minted with transaction id ${response.transactionId.toString()}`;\n};\n\nconst mintNonFungibleToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof mintNonFungibleTokenParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseMintNonFungibleTokenParams(\n      params,\n      context,\n    );\n    const tx = HederaBuilder.mintNonFungibleToken(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to mint non-fungible token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[mint_non_fungible_token_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const MINT_NON_FUNGIBLE_TOKEN_TOOL = 'mint_non_fungible_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: MINT_NON_FUNGIBLE_TOKEN_TOOL,\n  name: 'Mint Non-Fungible Token',\n  description: mintNonFungibleTokenPrompt(context),\n  parameters: mintNonFungibleTokenParameters(context),\n  execute: mintNonFungibleToken,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, PublicKey, Status } from '@hashgraph/sdk';\nimport { TokenInfo } from '@/shared/hedera-utils/mirrornode/types';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport {\n  updateTokenParameters,\n  updateTokenParametersNormalised,\n} from '@/shared/parameter-schemas/token.zod';\nimport { IHederaMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-service.interface';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { AccountResolver } from '@/shared';\n\nconst checkValidityOfUpdates = async (\n  params: z.infer<ReturnType<typeof updateTokenParametersNormalised>>,\n  mirrornode: IHederaMirrornodeService,\n  userPublicKey: PublicKey,\n) => {\n  const tokenDetails: TokenInfo = await mirrornode.getTokenInfo(params.tokenId.toString());\n  if (!tokenDetails) {\n    throw new Error('Token not found');\n  }\n\n  if (tokenDetails.admin_key?.key !== userPublicKey.toStringRaw()) {\n    console.error(\n      `tokenDetails.admin_key.key: ${tokenDetails.admin_key?.key} vs userPublicKey: ${userPublicKey.toStringRaw()}`,\n    );\n    throw new Error(\n      'You do not have permission to update this token. The adminKey does not match your public key.',\n    );\n  }\n\n  const keyChecks: Partial<Record<keyof typeof params, keyof TokenInfo>> = {\n    adminKey: 'admin_key',\n    kycKey: 'kyc_key',\n    freezeKey: 'freeze_key',\n    wipeKey: 'wipe_key',\n    supplyKey: 'supply_key',\n    feeScheduleKey: 'fee_schedule_key',\n    pauseKey: 'pause_key',\n    metadataKey: 'metadata_key',\n  };\n\n  for (const [paramKey, tokenField] of Object.entries(keyChecks) as [\n    keyof typeof params,\n    keyof TokenInfo,\n  ][]) {\n    const userValue = params[paramKey];\n    const tokenKey = tokenDetails[tokenField];\n\n    if (userValue instanceof PublicKey && !tokenKey) {\n      throw new Error(`Cannot update ${paramKey}: token was created without a ${paramKey}`);\n    }\n  }\n};\n\nconst updateTokenPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const tokenDesc = PromptGenerator.getAnyAddressParameterDescription('tokenId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will update an existing Hedera HTS token. Only the fields provided will be updated.\n\nKey fields (adminKey, kycKey, freezeKey, wipeKey, supplyKey, feeScheduleKey, pauseKey, metadataKey) must contain **Hedera-compatible public keys (as strings) or boolean (true/false)**. You can provide these in one of three ways:\n\n1. **Boolean true** – Set this field to use user/operator key. Injecting of the key will be handled automatically.\n2. **Not provided** – The field will not be updated.\n3. **String** – Provide a Hedera-compatible public key string to set a field explicitly.\n\nParameters:\n- ${tokenDesc}\n- tokenName (string, optional): New name for the token. Up to 100 characters.\n- tokenSymbol (string, optional): New symbol for the token. Up to 100 characters.\n- treasuryAccountId (string, optional): New treasury account for the token (Hedera account ID).\n- adminKey (boolean|string, optional): New admin key. Pass true to use your operator key, or provide a public key string.\n- kycKey (boolean|string, optional): New KYC key. Pass true to use your operator key, or provide a public key string.\n- freezeKey (boolean|string, optional): New freeze key. Pass true to use your operator key, or provide a public key string.\n- wipeKey (boolean|string, optional): New wipe key. Pass true to use your operator key, or provide a public key string.\n- supplyKey (boolean|string, optional): New supply key. Pass true to use your operator key, or provide a public key string.\n- feeScheduleKey (boolean|string, optional): New fee schedule key. Pass true to use your operator key, or provide a public key string.\n- pauseKey (boolean|string, optional): New pause key. Pass true to use your operator key, or provide a public key string.\n- metadataKey (boolean|string, optional): New metadata key. Pass true to use your operator key, or provide a public key string.\n- metadata (string, optional): New metadata for the token, in bytes (hex or base64).\n- tokenMemo (string, optional): Short public memo for the token, up to 100 characters.\n- autoRenewAccountId (string, optional): Account to automatically pay for renewal.\n\nExamples:\n- If the user asks for \"my key\" → set the field to \\`true\\`.\n- If the user does not mention the key → do not set the field.\n- If the user provides a key → set the field to the provided public key string.\n\nIf the user provides multiple fields in a single request, \ncombine them into **one tool call** with all parameters together.\n\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Token successfully updated. Transaction ID: ${response.transactionId}`;\n};\n\nconst updateToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof updateTokenParameters>>,\n) => {\n  try {\n    const normalisedParams = await HederaParameterNormaliser.normaliseUpdateToken(\n      params,\n      context,\n      client,\n    );\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const userPublicKey = await AccountResolver.getDefaultPublicKey(context, client);\n\n    await checkValidityOfUpdates(normalisedParams, mirrornodeService, userPublicKey);\n\n    const tx = HederaBuilder.updateToken(normalisedParams);\n\n    return await handleTransaction(tx, client, context, postProcess);\n  } catch (error) {\n    const desc = 'Failed to update token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[update_token_tool]', message);\n    return {\n      raw: { status: Status.InvalidTransaction, error: message },\n      humanMessage: message,\n    };\n  }\n};\n\nexport const UPDATE_TOKEN_TOOL = 'update_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: UPDATE_TOKEN_TOOL,\n  name: 'Update Token',\n  description: updateTokenPrompt(context),\n  parameters: updateTokenParameters(context),\n  execute: updateToken,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport { dissociateTokenParameters } from '@/shared/parameter-schemas/token.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst dissociateTokenPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const sourceAccountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will airdrop a fungible token on Hedera.\n\nParameters:\n- tokenIds (array of strings, required): A list of Hedera token IDs to dissociate from the account. Example: [\"0.0.1234\", \"0.0.5678\"]\n- ${sourceAccountDesc}, account from which to dissociate the token(s)\n- transactionMemo (str, optional): Optional memo for the transaction\n\nExamples:\n- Dissociate a single token: { \"tokenIds\": [\"0.0.1234\"] }\n- Dissociate multiple tokens from a specific account: { \"tokenIds\": [\"0.0.1234\", \"0.0.5678\"], \"accountId\": \"0.0.4321\" }\n\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Token(s) successfully dissociated with transaction id ${response.transactionId.toString()}`;\n};\n\nconst dissociateToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof dissociateTokenParameters>>,\n) => {\n  try {\n    const normalisedParams = await HederaParameterNormaliser.normaliseDissociateTokenParams(\n      params,\n      context,\n      client,\n    );\n    const tx = HederaBuilder.dissociateToken(normalisedParams);\n    return await handleTransaction(tx, client, context, postProcess);\n  } catch (error) {\n    const desc = 'Failed to dissociate token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[dissociate_token_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const DISSOCIATE_TOKEN_TOOL = 'dissociate_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: DISSOCIATE_TOKEN_TOOL,\n  name: 'Dissociate Token',\n  description: dissociateTokenPrompt(context),\n  parameters: dissociateTokenParameters(context),\n  execute: dissociateToken,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport { associateTokenParameters } from '@/shared/parameter-schemas/token.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst associateTokenPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n  const accountToAssociate = PromptGenerator.getAnyAddressParameterDescription('accountId', context);\n\n  return `\n${contextSnippet}\n\nThis tool will associate one or more tokens with a Hedera account.\n\nParameters:\n${accountToAssociate}\n- tokenIds (string[], required): Array of token IDs to associate\n${usageInstructions}\n\nExample: \"Associate tokens 0.0.123 and 0.0.456 to account 0.0.789\".\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Tokens successfully associated with transaction id ${response.transactionId.toString()}`;\n};\n\nconst associateToken = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof associateTokenParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseAssociateTokenParams(\n      params,\n      context,\n      client,\n    );\n    const tx = HederaBuilder.associateToken(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to associate token(s)';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[associate_token_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const ASSOCIATE_TOKEN_TOOL = 'associate_token_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: ASSOCIATE_TOKEN_TOOL,\n  name: 'Associate Token(s)',\n  description: associateTokenPrompt(context),\n  parameters: associateTokenParameters(context),\n  execute: associateToken,\n});\n\nexport default tool;\n\n\n","import { Context } from '@/shared';\nimport { Plugin } from '@/shared/plugin';\nimport airdropFungibleToken, {\n  AIRDROP_FUNGIBLE_TOKEN_TOOL,\n} from '@/plugins/core-token-plugin/tools/fungible-token/airdrop-fungible-token';\nimport createFungibleTokenTool, {\n  CREATE_FUNGIBLE_TOKEN_TOOL,\n} from '@/plugins/core-token-plugin/tools/fungible-token/create-fungible-token';\nimport mintFungibleTokenTool, {\n  MINT_FUNGIBLE_TOKEN_TOOL,\n} from '@/plugins/core-token-plugin/tools/fungible-token/mint-fungible-token';\nimport createNonFungibleTokenTool, {\n  CREATE_NON_FUNGIBLE_TOKEN_TOOL,\n} from '@/plugins/core-token-plugin/tools/non-fungible-token/create-non-fungible-token';\nimport mintNonFungibleTokenTool, {\n  MINT_NON_FUNGIBLE_TOKEN_TOOL,\n} from '@/plugins/core-token-plugin/tools/non-fungible-token/mint-non-fungible-token';\nimport updateTokenTool, { UPDATE_TOKEN_TOOL } from '@/plugins/core-token-plugin/tools/update-token';\nimport dissociateTokenTool, {\n  DISSOCIATE_TOKEN_TOOL,\n} from '@/plugins/core-token-plugin/tools/dissociate-token';\nimport associateTokenTool, {\n  ASSOCIATE_TOKEN_TOOL,\n} from '@/plugins/core-token-plugin/tools/associate-token';\n\nexport const coreTokenPlugin: Plugin = {\n  name: 'core-token-plugin',\n  version: '1.0.0',\n  description: 'A plugin for the Hedera Token Service',\n  tools: (context: Context) => {\n    return [\n      createFungibleTokenTool(context),\n      mintFungibleTokenTool(context),\n      createNonFungibleTokenTool(context),\n      airdropFungibleToken(context),\n      mintNonFungibleTokenTool(context),\n      updateTokenTool(context),\n      dissociateTokenTool(context),\n      associateTokenTool(context),\n    ];\n  },\n};\n\n// Export tool names as an object for destructuring\nexport const coreTokenPluginToolNames = {\n  AIRDROP_FUNGIBLE_TOKEN_TOOL,\n  CREATE_FUNGIBLE_TOKEN_TOOL,\n  MINT_FUNGIBLE_TOKEN_TOOL,\n  CREATE_NON_FUNGIBLE_TOKEN_TOOL,\n  MINT_NON_FUNGIBLE_TOKEN_TOOL,\n  DISSOCIATE_TOKEN_TOOL,\n  ASSOCIATE_TOKEN_TOOL,\n  UPDATE_TOKEN_TOOL,\n} as const;\n\nexport default { coreTokenPlugin, coreTokenPluginToolNames };\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { transferHbarParameters } from '@/shared/parameter-schemas/account.zod';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst transferHbarPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const sourceAccountDesc = PromptGenerator.getAccountParameterDescription(\n    'sourceAccountId',\n    context,\n  );\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will transfer HBAR to an account.\n\nParameters:\n- transfers (array of objects, required): List of HBAR transfers. Each object should contain:\n  - accountId (string): Recipient account ID\n  - amount (number): Amount of HBAR to transfer\n- ${sourceAccountDesc}\n- transactionMemo (string, optional): Optional memo for the transaction\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `HBAR successfully transferred. Transaction ID: ${response.transactionId}`;\n};\n\nconst transferHbar = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof transferHbarParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseTransferHbar(\n      params,\n      context,\n      client,\n    );\n    const tx = HederaBuilder.transferHbar(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to transfer HBAR';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[transfer_hbar_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const TRANSFER_HBAR_TOOL = 'transfer_hbar_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: TRANSFER_HBAR_TOOL,\n  name: 'Transfer HBAR',\n  description: transferHbarPrompt(context),\n  parameters: transferHbarParameters(context),\n  execute: transferHbar,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport {\n  approveHbarAllowanceParameters,\n} from '@/shared/parameter-schemas/account.zod';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst approveHbarAllowancePrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const ownerAccountDesc = PromptGenerator.getAccountParameterDescription(\n    'ownerAccountId',\n    context,\n  );\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool approves an HBAR allowance from the owner to the spender.\n\nParameters:\n- ${ownerAccountDesc}\n- spenderAccountId (string, required): Spender account ID\n- amount (number, required): Amount of HBAR to approve (can be decimal, cannot be negative)\n- transactionMemo (string, optional): Optional memo for the transaction\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `HBAR allowance approved successfully. Transaction ID: ${response.transactionId}`;\n};\n\nconst approveHbarAllowance = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof approveHbarAllowanceParameters>>,\n) => {\n  const normalisedParams = HederaParameterNormaliser.normaliseApproveHbarAllowance(\n    params,\n    context,\n    client,\n  );\n  const tx = HederaBuilder.approveHbarAllowance(normalisedParams);\n  const result = await handleTransaction(tx, client, context, postProcess);\n  return result;\n};\n\nexport const APPROVE_HBAR_ALLOWANCE_TOOL = 'approve_hbar_allowance_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: APPROVE_HBAR_ALLOWANCE_TOOL,\n  name: 'Approve HBAR Allowance',\n  description: approveHbarAllowancePrompt(context),\n  parameters: approveHbarAllowanceParameters(context),\n  execute: approveHbarAllowance,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { createAccountParameters } from '@/shared/parameter-schemas/account.zod';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\n\nconst createAccountPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will create a new Hedera account with a passed public key. If not passed, the tool will use operators public key.\n\nParameters:\n- publicKey (string, optional): Public key to use for the account. If not provided, the tool will use the operators public key.\n- accountMemo (string, optional): Optional memo for the account\n- initialBalance (number, optional, default 0): Initial HBAR to fund the account\n- maxAutomaticTokenAssociations (number, optional, default -1): -1 means unlimited\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  const accountIdStr = response.accountId ? response.accountId.toString() : 'unknown';\n  return `Account created successfully.\\nTransaction ID: ${response.transactionId}\\nNew Account ID: ${accountIdStr}\\n}`;\n};\n\nconst createAccount = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof createAccountParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n\n    // Normalise params to match AccountCreateTransaction props\n    const normalisedParams = await HederaParameterNormaliser.normaliseCreateAccount(\n      params,\n      context,\n      client,\n      mirrornodeService,\n    );\n\n    // Build transaction\n    const tx = HederaBuilder.createAccount(normalisedParams);\n\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to create account';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[create_account_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const CREATE_ACCOUNT_TOOL = 'create_account_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: CREATE_ACCOUNT_TOOL,\n  name: 'Create Account',\n  description: createAccountPrompt(context),\n  parameters: createAccountParameters(context),\n  execute: createAccount,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { deleteAccountParameters } from '@/shared/parameter-schemas/account.zod';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\n\nconst deleteAccountPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const accountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will delete an existing Hedera account. The remaining balance of the account will be transferred to the transferAccountId if provided, otherwise the operator account will be used.\n\nParameters:\n- ${accountDesc}\n- accountId (str, required): The account ID to delete\n- transferAccountId (str, optional): The account ID to transfer the remaining balance to. If not provided, the operator account will be used.\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Account successfully deleted. Transaction ID: ${response.transactionId}`;\n};\n\nconst deleteAccount = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof deleteAccountParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseDeleteAccount(\n      params,\n      context,\n      client,\n    );\n\n    let tx = HederaBuilder.deleteAccount(normalisedParams);\n\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to delete account';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[delete_account_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const DELETE_ACCOUNT_TOOL = 'delete_account_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: DELETE_ACCOUNT_TOOL,\n  name: 'Delete Account',\n  description: deleteAccountPrompt(context),\n  parameters: deleteAccountParameters(context),\n  execute: deleteAccount,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { updateAccountParameters } from '@/shared/parameter-schemas/account.zod';\n\nconst updateAccountPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const accountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will update an existing Hedera account. Only provided fields will be updated.\n\nParameters:\n- ${accountDesc}\n- accountId (string, optional) Account ID to update (e.g., 0.0.xxxxx). If not provided, operator account ID will be used\n- maxAutomaticTokenAssociations (number, optional)\n- stakedAccountId (string, optional)\n- accountMemo (string, optional)\n- declineStakingReward (boolean, optional)\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Account successfully updated. Transaction ID: ${response.transactionId}`;\n};\n\nconst updateAccount = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof updateAccountParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseUpdateAccount(\n      params,\n      context,\n      client,\n    );\n\n    let tx = HederaBuilder.updateAccount(normalisedParams);\n\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to update account';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[update_account_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const UPDATE_ACCOUNT_TOOL = 'update_account_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: UPDATE_ACCOUNT_TOOL,\n  name: 'Update Account',\n  description: updateAccountPrompt(context),\n  parameters: updateAccountParameters(context),\n  execute: updateAccount,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { signScheduleTransactionParameters } from '@/shared/parameter-schemas/account.zod';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst signScheduleTransactionPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will sign a scheduled transaction and return the transaction ID.\n\nParameters:\n- scheduleId (string, required): The ID of the scheduled transaction to sign\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Transaction successfully signed. Transaction ID: ${response.transactionId}`;\n};\n\nconst signScheduleTransaction = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof signScheduleTransactionParameters>>,\n) => {\n  try {\n    const tx = HederaBuilder.signScheduleTransaction(params);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to sign scheduled transaction';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[sign_schedule_transaction_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const SIGN_SCHEDULE_TRANSACTION_TOOL = 'sign_schedule_transaction_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: SIGN_SCHEDULE_TRANSACTION_TOOL,\n  name: 'Sign Scheduled Transaction',\n  description: signScheduleTransactionPrompt(context),\n  parameters: signScheduleTransactionParameters(context),\n  execute: signScheduleTransaction,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { scheduleDeleteTransactionParameters } from '@/shared/parameter-schemas/account.zod';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst scheduleDeletePrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will delete a scheduled transaction (by admin) so it will not execute.\n\nParameters:\n- scheduleId (string, required): The ID of the scheduled transaction to delete\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Scheduled transaction successfully deleted. Transaction ID: ${response.transactionId}`;\n};\n\nconst scheduleDelete = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof scheduleDeleteTransactionParameters>>,\n) => {\n  try {\n    const tx = HederaBuilder.deleteScheduleTransaction(params);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to delete scheduled transaction';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[schedule_delete_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const SCHEDULE_DELETE_TOOL = 'schedule_delete_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: SCHEDULE_DELETE_TOOL,\n  name: 'Delete Scheduled Transaction',\n  description: scheduleDeletePrompt(context),\n  parameters: scheduleDeleteTransactionParameters(context),\n  execute: scheduleDelete,\n});\n\nexport default tool;\n\n\n","import { Context } from '@/shared';\nimport { Plugin } from '@/shared/plugin';\nimport transferHbarTool, {\n  TRANSFER_HBAR_TOOL,\n} from '@/plugins/core-account-plugin/tools/account/transfer-hbar';\nimport approveHbarAllowanceTool, {\n  APPROVE_HBAR_ALLOWANCE_TOOL,\n} from '@/plugins/core-account-plugin/tools/account/approve-hbar-allowance';\nimport createAccountTool, {\n  CREATE_ACCOUNT_TOOL,\n} from '@/plugins/core-account-plugin/tools/account/create-account';\n\nimport deleteAccountTool, {\n  DELETE_ACCOUNT_TOOL,\n} from '@/plugins/core-account-plugin/tools/account/delete-account';\n\nimport updateAccountTool, {\n  UPDATE_ACCOUNT_TOOL,\n} from '@/plugins/core-account-plugin/tools/account/update-account';\n\nimport signScheduleTransactionTool, {\n  SIGN_SCHEDULE_TRANSACTION_TOOL,\n} from '@/plugins/core-account-plugin/tools/account/sign-schedule-transaction';\nimport scheduleDeleteTool, {\n  SCHEDULE_DELETE_TOOL,\n} from '@/plugins/core-account-plugin/tools/account/schedule-delete';\n\nexport const coreAccountPlugin: Plugin = {\n  name: 'core-account-plugin',\n  version: '1.0.0',\n  description: 'A plugin for the Hedera Account Service',\n  tools: (context: Context) => {\n    return [\n      transferHbarTool(context),\n      approveHbarAllowanceTool(context),\n      deleteAccountTool(context),\n      updateAccountTool(context),\n      createAccountTool(context),\n      signScheduleTransactionTool(context),\n      scheduleDeleteTool(context),\n    ];\n  },\n};\n\nexport const coreAccountPluginToolNames = {\n  TRANSFER_HBAR_TOOL,\n  APPROVE_HBAR_ALLOWANCE_TOOL,\n  CREATE_ACCOUNT_TOOL,\n  DELETE_ACCOUNT_TOOL,\n  UPDATE_ACCOUNT_TOOL,\n  SIGN_SCHEDULE_TRANSACTION_TOOL,\n  SCHEDULE_DELETE_TOOL,\n} as const;\n\nexport default { coreAccountPlugin, coreAccountPluginToolNames };\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { createTopicParameters } from '@/shared/parameter-schemas/consensus.zod';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { IHederaMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-service.interface';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst createTopicPrompt = (_context: Context = {}) => {\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\nThis tool will create a new topic on the Hedera network.\n\nParameters:\n- topicMemo (str, optional): A memo for the topic\n- transactionMemo (str, optional): An optional memo to include on the submitted transaction\n- isSubmitKey (bool, optional): Whether to set a submit key for the topic. Set to true if user wants to set a submit key, otherwise false\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Topic created successfully with topic id ${response.topicId?.toString()} and transaction id ${response.transactionId.toString()}`;\n};\n\nconst createTopic = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof createTopicParameters>>,\n) => {\n  try {\n    const mirrornodeService: IHederaMirrornodeService = getMirrornodeService(\n      context.mirrornodeService!,\n      client.ledgerId!,\n    );\n    const normalisedParams = await HederaParameterNormaliser.normaliseCreateTopicParams(\n      params,\n      context,\n      client,\n      mirrornodeService,\n    );\n    const tx = HederaBuilder.createTopic(normalisedParams);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to create topic';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[create_topic_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const CREATE_TOPIC_TOOL = 'create_topic_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: CREATE_TOPIC_TOOL,\n  name: 'Create Topic',\n  description: createTopicPrompt(context),\n  parameters: createTopicParameters(context),\n  execute: createTopic,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { IHederaMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-service.interface';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { deleteTopicParameters } from '@/shared/parameter-schemas/consensus.zod';\n\nconst deleteTopicPrompt = (_context: Context = {}) => {\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\nThis tool will delete a given Hedera network topic.\n\nParameters:\n- topicId (str, required): id of topic to delete\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Topic with id ${response.topicId?.toString()} deleted successfully. Transaction id ${response.transactionId.toString()}`;\n};\n\nconst deleteTopic = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof deleteTopicParameters>>,\n) => {\n  try {\n    const mirrornodeService: IHederaMirrornodeService = getMirrornodeService(\n      context.mirrornodeService!,\n      client.ledgerId!,\n    );\n    const normalisedParams = HederaParameterNormaliser.normaliseDeleteTopic(\n      params,\n      context,\n      client,\n      mirrornodeService,\n    );\n    const tx = HederaBuilder.deleteTopic(normalisedParams);\n    return await handleTransaction(tx, client, context, postProcess);\n  } catch (error) {\n    const desc = 'Failed to delete the topic';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[delete_topic_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const DELETE_TOPIC_TOOL = 'delete_topic_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: DELETE_TOPIC_TOOL,\n  name: 'Delete Topic',\n  description: deleteTopicPrompt(context),\n  parameters: deleteTopicParameters(context),\n  execute: deleteTopic,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { submitTopicMessageParameters } from '@/shared/parameter-schemas/consensus.zod';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nconst submitTopicMessagePrompt = (_context: Context = {}) => {\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\nThis tool will submit a message to a topic on the Hedera network.\n\nParameters:\n- topicId (str, required): The ID of the topic to submit the message to\n- message (str, required): The message to submit to the topic\n- transactionMemo (str, optional): An optional memo to include on the transaction\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Message submitted successfully with transaction id ${response.transactionId.toString()}`;\n};\n\nconst submitTopicMessage = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof submitTopicMessageParameters>>,\n) => {\n  try {\n    const tx = HederaBuilder.submitTopicMessage(params);\n    const result = await handleTransaction(tx, client, context, postProcess);\n    return { ...result, topicId: params.topicId };\n  } catch (error) {\n    const desc = 'Failed to submit message to topic';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[submit_topic_message_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const SUBMIT_TOPIC_MESSAGE_TOOL = 'submit_topic_message_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: SUBMIT_TOPIC_MESSAGE_TOOL,\n  name: 'Submit Topic Message',\n  description: submitTopicMessagePrompt(context),\n  parameters: submitTopicMessageParameters(context),\n  execute: submitTopicMessage,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, PublicKey, Status } from '@hashgraph/sdk';\nimport { handleTransaction, RawTransactionResponse } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { IHederaMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-service.interface';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { AccountResolver } from '@/shared';\nimport {\n  updateTopicParameters,\n  updateTopicParametersNormalised,\n} from '@/shared/parameter-schemas/consensus.zod';\nimport { TopicInfo } from '@/shared/hedera-utils/mirrornode/types';\n\nconst checkValidityOfUpdates = async (\n  params: z.infer<ReturnType<typeof updateTopicParametersNormalised>>,\n  mirrornode: IHederaMirrornodeService,\n  userPublicKey: PublicKey,\n) => {\n  const topicDetails: TopicInfo = await mirrornode.getTopicInfo(params.topicId.toString());\n  if (!topicDetails) {\n    throw new Error('Topic not found');\n  }\n\n  if (topicDetails.admin_key === undefined) {\n    throw new Error('Topic does not have an admin key. It cannot be updated.');\n  }\n\n  if (topicDetails.admin_key!.key !== userPublicKey.toStringRaw()) {\n    console.error(\n      `topicDetails.admin_key.key: ${topicDetails.admin_key?.key} vs userPublicKey: ${userPublicKey.toStringRaw()}`,\n    );\n    throw new Error(\n      'You do not have permission to update this topic. The adminKey does not match your public key.',\n    );\n  }\n\n  // If a user attempts to set a key but the topic was created without that key, disallow\n  const keyChecks: Partial<Record<keyof typeof params, keyof TopicInfo>> = {\n    adminKey: 'admin_key',\n    submitKey: 'submit_key',\n  };\n\n  for (const [paramKey, topicField] of Object.entries(keyChecks) as [\n    keyof typeof params,\n    keyof TopicInfo,\n  ][]) {\n    const userValue = params[paramKey];\n    const topicKey = topicDetails[topicField as keyof TopicInfo];\n\n    if (userValue instanceof PublicKey && !topicKey) {\n      throw new Error(`Cannot update ${paramKey}: topic was created without a ${paramKey}`);\n    }\n  }\n};\n\nconst updateTopicPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const topicDesc = PromptGenerator.getAnyAddressParameterDescription('topicId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\nThis tool will update an existing Hedera Consensus Topic. Only the fields provided will be updated.\nKey fields (adminKey, submitKey) must contain **Hedera-compatible public keys (as strings) or boolean (true/false)**. You can provide these in one of three ways:\n1. **Boolean true** – Set this field to use user/operator key. Injecting of the key will be handled automatically.\n2. **Not provided** – The field will not be updated.\n3. **String** – Provide a Hedera-compatible public key string to set a field explicitly.\n\nParameters:\n- ${topicDesc}\n- topicMemo (string, optional): New memo for the topic.\n- adminKey (boolean|string, optional): New admin key. Pass true to use your operator key, or provide a public key string.\n- submitKey (boolean|string, optional): New submit key. Pass true to use your operator key, or provide a public key string.\n- autoRenewAccountId (string, optional): Account to automatically pay for renewal.\n- autoRenewPeriod (number, optional): Auto renew period in seconds.\n- expirationTime (string|Date, optional): New expiration time for the topic (ISO string or Date).\nExamples:\n- If the user asks for \"my key\" → set the field to \\`true\\`.\n- If the user does not mention the key → do not set the field.\n- If the user provides a key → set the field to the provided public key string.\n\nIf the user provides multiple fields in a single request, \ncombine them into **one tool call** with all parameters together.\n${usageInstructions}\n`;\n};\n\nconst postProcess = (response: RawTransactionResponse) => {\n  return `Topic successfully updated. Transaction ID: ${response.transactionId}`;\n};\n\nconst updateTopic = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof updateTopicParameters>>,\n) => {\n  try {\n    const normalisedParams = await HederaParameterNormaliser.normaliseUpdateTopic(\n      params,\n      context,\n      client,\n    );\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const userPublicKey = await AccountResolver.getDefaultPublicKey(context, client);\n\n    await checkValidityOfUpdates(normalisedParams, mirrornodeService, userPublicKey);\n\n    const tx = HederaBuilder.updateTopic(normalisedParams);\n\n    return await handleTransaction(tx, client, context, postProcess);\n  } catch (error) {\n    const desc = 'Failed to update topic';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[update_topic_tool]', message);\n    return {\n      raw: { status: Status.InvalidTransaction, error: message },\n      humanMessage: message,\n    };\n  }\n};\n\nexport const UPDATE_TOPIC_TOOL = 'update_topic_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: UPDATE_TOPIC_TOOL,\n  name: 'Update Topic',\n  description: updateTopicPrompt(context),\n  parameters: updateTopicParameters(context),\n  execute: updateTopic,\n});\n\nexport default tool;\n","import { Context } from '@/shared';\nimport { Plugin } from '@/shared/plugin';\nimport createTopicTool, {\n  CREATE_TOPIC_TOOL,\n} from '@/plugins/core-consensus-plugin/tools/consensus/create-topic';\nimport deleteTopicTool, {\n  DELETE_TOPIC_TOOL,\n} from '@/plugins/core-consensus-plugin/tools/consensus/delete-topic';\nimport submitTopicMessageTool, {\n  SUBMIT_TOPIC_MESSAGE_TOOL,\n} from '@/plugins/core-consensus-plugin/tools/consensus/submit-topic-message';\nimport updateTopicTool, {\n  UPDATE_TOPIC_TOOL,\n} from '@/plugins/core-consensus-plugin/tools/consensus/update-topic';\n\nexport const coreConsensusPlugin: Plugin = {\n  name: 'core-consensus-plugin',\n  version: '1.0.0',\n  description: 'A plugin for the Hedera Consensus Service',\n  tools: (context: Context) => {\n    return [\n      createTopicTool(context),\n      submitTopicMessageTool(context),\n      deleteTopicTool(context),\n      updateTopicTool(context),\n    ];\n  },\n};\n\nexport const coreConsensusPluginToolNames = {\n  CREATE_TOPIC_TOOL,\n  SUBMIT_TOPIC_MESSAGE_TOOL,\n  DELETE_TOPIC_TOOL,\n  UPDATE_TOPIC_TOOL,\n} as const;\n\nexport default { coreConsensusPlugin, coreConsensusPluginToolNames };\n","/**\n * Converts a tinybar amount to a hbar amount.\n * @param tinyBars - The tinybar amount.\n * @returns The hbar amount.\n */\nexport function toHBar(tinyBars: BigNumber): BigNumber {\n  return tinyBars.div(100000000);\n}\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client } from '@hashgraph/sdk';\nimport { accountBalanceQueryParameters } from '@/shared/parameter-schemas/account.zod';\nimport BigNumber from 'bignumber.js';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { toHBar } from '@/shared/hedera-utils/hbar-conversion-utils';\n\nexport const getHbarBalanceQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const accountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the HBAR balance for a given Hedera account.\n\nParameters:\n- ${accountDesc}\n${usageInstructions}\n`;\n};\n\nconst postProcess = (hbarBalance: string, accountId: string) => {\n  return `Account ${accountId} has a balance of ${hbarBalance} HBAR`;\n};\n\nexport const getHbarBalanceQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof accountBalanceQueryParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseHbarBalanceParams(\n      params,\n      context,\n      client,\n    );\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const balance: BigNumber = await mirrornodeService.getAccountHBarBalance(\n      normalisedParams.accountId,\n    );\n    return {\n      raw: { accountId: normalisedParams.accountId, hbarBalance: toHBar(balance).toString() },\n      humanMessage: postProcess(toHBar(balance).toString() as string, normalisedParams.accountId),\n    };\n  } catch (error) {\n    const desc = 'Failed to get HBAR balance';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_hbar_balance_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_HBAR_BALANCE_QUERY_TOOL = 'get_hbar_balance_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_HBAR_BALANCE_QUERY_TOOL,\n  name: 'Get HBAR Balance',\n  description: getHbarBalanceQueryPrompt(context),\n  parameters: accountBalanceQueryParameters(context),\n  execute: getHbarBalanceQuery,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { AccountResponse } from '@/shared/hedera-utils/mirrornode/types';\nimport { accountQueryParameters } from '@/shared/parameter-schemas/account.zod';\n\nexport const getAccountQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the account information for a given Hedera account.\n\nParameters:\n- accountId (str, required): The account ID to query\n${usageInstructions}\n`;\n};\n\nconst postProcess = (account: AccountResponse) => {\n  return `Details for ${account.accountId}\nBalance: ${account.balance.balance.toString()}\nPublic Key: ${account.accountPublicKey},\nEVM address: ${account.evmAddress},\n`;\n};\n\nexport const getAccountQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof accountQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const account = await mirrornodeService.getAccount(params.accountId);\n    return {\n      raw: { accountId: params.accountId, account: account },\n      humanMessage: postProcess(account),\n    };\n  } catch (error) {\n    const desc = 'Failed to get account query';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_account_query_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_ACCOUNT_QUERY_TOOL = 'get_account_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_ACCOUNT_QUERY_TOOL,\n  name: 'Get Account Query',\n  description: getAccountQueryPrompt(context),\n  parameters: accountQueryParameters(context),\n  execute: getAccountQuery,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { accountTokenBalancesQueryParameters } from '@/shared/parameter-schemas/account.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { TokenBalancesResponse } from '@/shared/hedera-utils/mirrornode/types';\n\nexport const getAccountTokenBalancesQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const accountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the token balances for a given Hedera account.\n\nParameters:\n- ${accountDesc}\n- tokenId (str, optional): The token ID to query for. If not provided, all token balances will be returned\n${usageInstructions}\n`;\n};\n\nconst postProcess = (tokenBalances: TokenBalancesResponse, accountId: string) => {\n  const balancesText = tokenBalances.tokens\n    .map(\n      token => `  Token: ${token.token_id}, Balance: ${token.balance}, Decimals: ${token.decimals}`,\n    )\n    .join('\\n');\n\n  return `Details for ${accountId}\n--- Token Balances ---\n${balancesText}`;\n};\n\nexport const getAccountTokenBalancesQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof accountTokenBalancesQueryParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseAccountTokenBalancesParams(\n      params,\n      context,\n      client,\n    );\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const tokenBalances = await mirrornodeService.getAccountTokenBalances(\n      normalisedParams.accountId,\n      normalisedParams.tokenId,\n    );\n    return {\n      raw: { accountId: normalisedParams.accountId, tokenBalances: tokenBalances },\n      humanMessage: postProcess(tokenBalances, normalisedParams.accountId),\n    };\n  } catch (error) {\n    const desc = 'Failed to get account token balances';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_account_token_balances_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL = 'get_account_token_balances_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL,\n  name: 'Get Account Token Balances',\n  description: getAccountTokenBalancesQueryPrompt(context),\n  parameters: accountTokenBalancesQueryParameters(context),\n  execute: getAccountTokenBalancesQuery,\n});\n\nexport default tool;\n","import { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { topicMessagesQueryParameters } from '@/shared/parameter-schemas/consensus.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { z } from 'zod';\nimport { Tool } from '@/shared/tools';\nimport { TopicMessage, TopicMessagesQueryParams } from '@/shared/hedera-utils/mirrornode/types';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nexport const getTopicMessagesQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the messages for a given Hedera topic.\n\nParameters:\n- topicId (str, required): The topic ID to query\n- startTime (datetime, optional): The start datetime to query. If set, the messages will be returned after this datetime\n- endTime (datetime, optional): The end datetime to query. If set, the messages will be returned before this datetime\n- limit (int, optional): The limit of messages to query. If set, the number of messages to return\n${usageInstructions}\n`;\n};\n\nconst postProcess = (messages: TopicMessage[], topicId: string) => {\n  const messagesText = messages.map(\n    message =>\n      `${Buffer.from(message.message, 'base64').toString('utf-8')} - posted at: ${message.consensus_timestamp}\\n`,\n  );\n\n  return `Messages for topic ${topicId}:\n  --- Messages ---\n  ${messagesText}\n  `;\n};\n\nconst getTopicMessagesQueryParams = (\n  params: z.infer<ReturnType<typeof topicMessagesQueryParameters>>,\n): TopicMessagesQueryParams => {\n  return {\n    topicId: params.topicId,\n    lowerTimestamp: params.startTime\n      ? `${Math.floor(new Date(params.startTime).getTime() / 1000)}.000000000`\n      : '',\n    upperTimestamp: params.endTime\n      ? `${Math.floor(new Date(params.endTime).getTime() / 1000)}.000000000`\n      : '',\n    limit: params.limit || 100,\n  };\n};\n\nconst convertMessagesFromBase64ToString = (messages: TopicMessage[]) => {\n  return messages.map(message => {\n    return {\n      ...message,\n      message: Buffer.from(message.message, 'base64').toString('utf-8'),\n    };\n  });\n};\n\nexport const getTopicMessagesQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof topicMessagesQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const messages = await mirrornodeService.getTopicMessages(getTopicMessagesQueryParams(params));\n\n    return {\n      raw: {\n        topicId: messages.topicId,\n        messages: convertMessagesFromBase64ToString(messages.messages),\n      },\n      humanMessage: postProcess(messages.messages, params.topicId),\n    };\n  } catch (error) {\n    const desc = 'Failed to get topic messages';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_topic_messages_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_TOPIC_MESSAGES_QUERY_TOOL = 'get_topic_messages_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_TOPIC_MESSAGES_QUERY_TOOL,\n  name: 'Get Topic Messages',\n  description: getTopicMessagesQueryPrompt(context),\n  parameters: topicMessagesQueryParameters(context),\n  execute: getTopicMessagesQuery,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { tokenInfoQueryParameters } from '@/shared/parameter-schemas/token.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { TokenInfo } from '@/shared/hedera-utils/mirrornode/types';\n\nexport const getTokenInfoQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the information for a given Hedera token.\n\nParameters:\n- tokenId (str): The token ID to query for.\n${usageInstructions}\n`;\n};\n\nconst postProcess = (tokenInfo: TokenInfo) => {\n  const formatSupply = (supply?: string) => {\n    if (!supply) return 'N/A';\n\n    const decimals = Number(tokenInfo.decimals || '0');\n    const amount = Number(supply);\n    if (isNaN(amount)) return supply;\n\n    return (amount / 10 ** decimals).toLocaleString();\n  };\n\n  const formatKey = (key?: { _type: string; key: string } | null) => {\n    if (!key) return 'Not Set';\n    return key._type ? `${key.key}` : 'Present';\n  };\n\n  const supplyType =\n    tokenInfo.supply_type === 'INFINITE' ? 'Infinite' : tokenInfo.max_supply || 'Finite';\n  const freezeStatus = tokenInfo.freeze_default ? 'Frozen' : 'Active';\n\n  return `Here are the details for token **${tokenInfo.token_id}**:\n\n- **Token Name**: ${tokenInfo.name}\n- **Token Symbol**: ${tokenInfo.symbol}\n- **Token Type**: ${tokenInfo.type || 'N/A'}\n- **Decimals**: ${tokenInfo.decimals}\n- **Max Supply**: ${formatSupply(tokenInfo.max_supply)}\n- **Current Supply**: ${formatSupply(tokenInfo.total_supply)}\n- **Supply Type**: ${supplyType}\n- **Treasury Account ID**: ${tokenInfo.treasury_account_id || 'N/A'}\n- **Status (Deleted/Active)**: ${tokenInfo.deleted ? 'Deleted' : 'Active'}\n- **Status (Frozen/Active)**: ${freezeStatus}\n\n**Keys**:\n- Admin Key: ${formatKey(tokenInfo.admin_key)}\n- Supply Key: ${formatKey(tokenInfo.supply_key)}\n- Wipe Key: ${formatKey(tokenInfo.wipe_key)}\n- KYC Key: ${formatKey(tokenInfo.kyc_key)}\n- Freeze Key: ${formatKey(tokenInfo.freeze_key)}\n- Fee Schedule Key: ${formatKey(tokenInfo.fee_schedule_key)}\n- Pause Key: ${formatKey(tokenInfo.pause_key)}\n- Metadata Key: ${formatKey(tokenInfo.metadata_key)}\n\n${tokenInfo.memo ? `**Memo**: ${tokenInfo.memo}` : ''}\n`;\n};\n\nexport const getTokenInfoQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof tokenInfoQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const tokenInfo: TokenInfo = {\n      ...(await mirrornodeService.getTokenInfo(params.tokenId!)),\n      token_id: params.tokenId!,\n    };\n\n    return {\n      raw: { tokenId: params.tokenId, tokenInfo },\n      humanMessage: postProcess(tokenInfo),\n    };\n  } catch (error) {\n    const desc = 'Failed to get token info';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_token_info_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_TOKEN_INFO_QUERY_TOOL = 'get_token_info_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_TOKEN_INFO_QUERY_TOOL,\n  name: 'Get Token Info',\n  description: getTokenInfoQueryPrompt(context),\n  parameters: tokenInfoQueryParameters(context),\n  execute: getTokenInfoQuery,\n});\n\nexport default tool;\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport getHbarBalanceQuery, {\n  GET_HBAR_BALANCE_QUERY_TOOL,\n} from '@/plugins/core-queries-plugin/tools/queries/get-hbar-balance-query';\nimport getAccountQuery, {\n  GET_ACCOUNT_QUERY_TOOL,\n} from '@/plugins/core-queries-plugin/tools/queries/get-account-query';\nimport getAccountTokenBalancesQuery, {\n  GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL,\n} from '@/plugins/core-queries-plugin/tools/queries/get-account-token-balances-query';\nimport getTopicMessagesQuery, {\n  GET_TOPIC_MESSAGES_QUERY_TOOL,\n} from '@/plugins/core-queries-plugin/tools/queries/get-topic-messages-query';\nimport getTokenInfoQuery, {\n  GET_TOKEN_INFO_QUERY_TOOL,\n} from '@/plugins/core-queries-plugin/tools/queries/get-token-info-query';\n\n/**\n * @deprecated This plugin is deprecated. Use the specific query plugins instead:\n * - coreAccountQueryPlugin for account-related queries\n * - coreTokenQueryPlugin for token-related queries\n * - coreConsensusQueryPlugin for consensus-related queries\n * This export will be removed in a future version.\n */\nexport const coreQueriesPlugin: Plugin = {\n  name: 'core-queries-plugin',\n  version: '1.0.0',\n  description: 'A plugin for the Hedera Queries Service (DEPRECATED)',\n  tools: (context: Context) => {\n    return [\n      getHbarBalanceQuery(context),\n      getAccountQuery(context),\n      getAccountTokenBalancesQuery(context),\n      getTopicMessagesQuery(context),\n      getTokenInfoQuery(context),\n    ];\n  },\n};\n\n/**\n * @deprecated Use the specific query plugin tool names instead:\n * - coreAccountQueryPluginToolNames for account-related query tools\n * - coreTokenQueryPluginToolNames for token-related query tools\n * - coreConsensusQueryPluginToolNames for consensus-related query tools\n * This export will be removed in a future version.\n */\nexport const coreQueriesPluginToolNames = {\n  GET_HBAR_BALANCE_QUERY_TOOL,\n  GET_ACCOUNT_QUERY_TOOL,\n  GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL,\n  GET_TOPIC_MESSAGES_QUERY_TOOL,\n  GET_TOKEN_INFO_QUERY_TOOL,\n} as const;\n\nexport default { coreQueriesPlugin, coreQueriesPluginToolNames };\n","import { Context } from '@/shared/configuration';\nimport { z } from 'zod';\n\nexport const exchangeRateQueryParameters = (_context: Context) =>\n  z.object({\n    timestamp: z\n      .string()\n      .describe('Historical timestamp to query (seconds or nanos since epoch)')\n      .optional(),\n  });\n","import { z } from 'zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { ExchangeRateResponse } from '@/shared/hedera-utils/mirrornode/types';\nimport { exchangeRateQueryParameters } from '@/shared/parameter-schemas/core-misc.zod';\n\nexport const getExchangeRatePrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool returns the Hedera network HBAR exchange rate from the Mirror Node.\n\nParameters:\n- timestamp (str, optional): Historical timestamp to query. Pass seconds or nanos since epoch (e.g., 1726000000.123456789). If omitted, returns the latest rate.\n${usageInstructions}\n`;\n};\n\nconst calculateUsdPerHBAR = (cent_equivalent: number, hbar_equivalent: number) => {\n  return cent_equivalent / 100 / hbar_equivalent;\n};\n\nconst postProcess = (rates: ExchangeRateResponse) => {\n  const { current_rate, next_rate, timestamp } = rates;\n\n  const usdPerHBAR = calculateUsdPerHBAR(\n    current_rate.cent_equivalent,\n    current_rate.hbar_equivalent,\n  );\n  const nextUsdPerHBAR = calculateUsdPerHBAR(next_rate.cent_equivalent, next_rate.hbar_equivalent);\n\n  return `\n  Details for timestamp: ${timestamp}\n  \n  Current exchange rate: ${usdPerHBAR}\n  Expires at ${new Date(current_rate.expiration_time * 1000).toISOString()})\n  \n  Next exchange rate: ${nextUsdPerHBAR}\n  Expires at ${new Date(next_rate.expiration_time * 1000).toISOString()})`;\n};\n\nexport const getExchangeRateQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof exchangeRateQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const rates: ExchangeRateResponse = await mirrornodeService.getExchangeRate(params.timestamp);\n    return {\n      raw: rates,\n      humanMessage: postProcess(rates),\n    };\n  } catch (error) {\n    console.error('[GetExchangeRate] Error getting exchange rate', error);\n    const message = error instanceof Error ? error.message : 'Failed to get exchange rate';\n\n    return {\n      raw: { error: message },\n      humanMessage: message,\n    };\n  }\n};\n\nexport const GET_EXCHANGE_RATE_TOOL = 'get_exchange_rate_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_EXCHANGE_RATE_TOOL,\n  name: 'Get Exchange Rate',\n  description: getExchangeRatePrompt(context),\n  parameters: exchangeRateQueryParameters(context),\n  execute: getExchangeRateQuery,\n});\n\nexport default tool;\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport getExchangeRateQuery, {\n  GET_EXCHANGE_RATE_TOOL,\n} from '@/plugins/core-misc-query-plugin/tools/queries/get-exchange-rate-query';\n\nexport const coreMiscQueriesPlugin: Plugin = {\n  name: 'core-misc-queries-plugin',\n  version: '1.0.0',\n  description: 'A plugin for Hedera Misc Queries',\n  tools: (context: Context) => {\n    return [getExchangeRateQuery(context)];\n  },\n};\n\nexport const coreMiscQueriesPluginsToolNames = {\n  GET_EXCHANGE_RATE_TOOL,\n} as const;\n\nexport default { coreMiscQueriesPluginsToolNames };\n","import { z } from 'zod';\nimport { AgentMode, type Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status, TransactionRecordQuery } from '@hashgraph/sdk';\nimport { ExecuteStrategyResult, handleTransaction } from '@/shared/strategies/tx-mode-strategy';\nimport { createERC20Parameters } from '@/shared/parameter-schemas/evm.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { getERC20FactoryAddress, ERC20_FACTORY_ABI } from '@/shared/constants/contracts';\n\nconst createERC20Prompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool creates an ERC20 token on Hedera by calling the BaseERC20Factory contract.\n\nParameters:\n- tokenName (str, required): The name of the token\n- tokenSymbol (str, required): The symbol of the token\n- decimals (int, optional): The number of decimals the token supports. Defaults to 18\n- initialSupply (int, optional): The initial supply of the token. Defaults to 0\n${usageInstructions}\n`;\n};\n\nconst getERC20Address = async (client: Client, executeStrategyResult: ExecuteStrategyResult) => {\n  const record = await new TransactionRecordQuery()\n    .setTransactionId(executeStrategyResult.raw.transactionId)\n    .execute(client);\n  return '0x' + record.contractFunctionResult?.getAddress(0);\n};\n\nconst createERC20 = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof createERC20Parameters>>,\n) => {\n  try {\n    const factoryContractAddress = getERC20FactoryAddress(client.ledgerId!);\n    const normalisedParams = HederaParameterNormaliser.normaliseCreateERC20Params(\n      params,\n      factoryContractAddress,\n      ERC20_FACTORY_ABI,\n      'deployToken',\n      context,\n    );\n    const tx = HederaBuilder.executeTransaction(normalisedParams);\n    const result = await handleTransaction(tx, client, context);\n    if (context.mode == AgentMode.AUTONOMOUS) {\n      const erc20Address = await getERC20Address(client, result as ExecuteStrategyResult);\n      return {\n        ...(result as ExecuteStrategyResult),\n        erc20Address: erc20Address?.toString(),\n        humanMessage: `ERC20 token created successfully at address ${erc20Address?.toString()}`,\n      };\n    }\n    return result;\n  } catch (error) {\n    const desc = 'Failed to create ERC20 token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[create_erc20_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const CREATE_ERC20_TOOL = 'create_erc20_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: CREATE_ERC20_TOOL,\n  name: 'Create ERC20 Token',\n  description: createERC20Prompt(context),\n  parameters: createERC20Parameters(context),\n  execute: createERC20,\n});\n\nexport default tool;\n","import { LedgerId } from '@hashgraph/sdk';\n\nconst TESTNET_ERC20_FACTORY_ADDRESS = '0.0.6471814';\nconst TESTNET_ERC721_FACTORY_ADDRESS = '0.0.6510666'; // TODO: Update with actual deployed address\n\n// ERC20 Factory contract addresses for different networks\nexport const ERC20_FACTORY_ADDRESSES: Map<string, string> = new Map([\n  [LedgerId.TESTNET.toString(), TESTNET_ERC20_FACTORY_ADDRESS], // Current testnet address\n]);\n\n// ERC721 Factory contract addresses for different networks\nexport const ERC721_FACTORY_ADDRESSES: Map<string, string> = new Map([\n  [LedgerId.TESTNET.toString(), TESTNET_ERC721_FACTORY_ADDRESS], // Current testnet address\n]);\n\n// ERC20 Factory contract ABI\nexport const ERC20_FACTORY_ABI = [\n  'function deployToken(string memory name_, string memory symbol_, uint8 decimals_, uint256 initialSupply_) external returns (address)',\n];\n\n// ERC721 Factory contract ABI\nexport const ERC721_FACTORY_ABI = [\n  'function deployToken(string memory name_, string memory symbol_, string memory baseURI_) external returns (address)',\n];\n\nexport const ERC20_TRANSFER_FUNCTION_NAME = 'transfer';\nexport const ERC20_TRANSFER_FUNCTION_ABI = [\n  'function transfer(address to, uint256 amount) external returns (bool)',\n];\n\nexport const ERC721_TRANSFER_FUNCTION_NAME = 'transferFrom';\nexport const ERC721_TRANSFER_FUNCTION_ABI = [\n  'function transferFrom(address from, address to, uint256 tokenId) external returns (bool)',\n];\n\nexport const ERC721_MINT_FUNCTION_NAME = 'safeMint';\nexport const ERC721_MINT_FUNCTION_ABI = ['function safeMint(address to) external returns (bool)'];\n\n/**\n * Get the ERC20 factory contract address for the specified network\n * @param ledgerId - The Hedera network ledger ID\n * @returns The factory contract address for the network\n * @throws Error if the network is not supported\n */\nexport function getERC20FactoryAddress(ledgerId: LedgerId): string {\n  const address = ERC20_FACTORY_ADDRESSES.get(ledgerId.toString());\n  if (!address) {\n    throw new Error(`Network type ${ledgerId} not supported for ERC20 factory`);\n  }\n  return address;\n}\n\n/**\n * Get the ERC721 factory contract address for the specified network\n * @param ledgerId - The Hedera network ledger ID\n * @returns The factory contract address for the network\n * @throws Error if the network is not supported\n */\nexport function getERC721FactoryAddress(ledgerId: LedgerId): string {\n  const address = ERC721_FACTORY_ADDRESSES.get(ledgerId.toString());\n  if (!address) {\n    throw new Error(`Network type ${ledgerId} not supported for ERC721 factory`);\n  }\n  return address;\n}\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction } from '@/shared/strategies/tx-mode-strategy';\nimport { transferERC20Parameters } from '@/shared/parameter-schemas/evm.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport {\n  ERC20_TRANSFER_FUNCTION_ABI,\n  ERC20_TRANSFER_FUNCTION_NAME,\n} from '@/shared/constants/contracts';\n\nconst transferERC20Prompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will transfer a given amount of an existing ERC20 token on Hedera.\n\nParameters:\n- contractId (str, required): The id of the ERC20 contract. This can be the EVM address or the Hedera account id.\n- recipientAddress (str, required): The EVM or Hedera address to which the tokens will be transferred. This can be the EVM address or the Hedera account id.\n- amount (number, required): The amount to be transferred\n${usageInstructions}\n\nExample: \"Transfer 1 ERC20 token 0.0.6473135 to 0xd94dc7f82f103757f715514e4a37186be6e4580b\" means transferring the amount of 1 of the ERC20 token with contract id 0.0.6473135 to the 0xd94dc7f82f103757f715514e4a37186be6e4580b EVM address.\nExample: \"Transfer 1 ERC20 token 0xd94dc7f82f103757f715514e4a37186be6e4580b to 0.0.6473135\" means transferring the amount of 1 of the ERC20 token with contract id 0xd94dc7f82f103757f715514e4a37186be6e4580b to the 0.0.6473135 Hedera account id.\n`;\n};\n\nconst transferERC20 = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof transferERC20Parameters>>,\n) => {\n  const mirrorNode = getMirrornodeService(context.mirrornodeService, client.ledgerId!);\n  try {\n    const normalisedParams = await HederaParameterNormaliser.normaliseTransferERC20Params(\n      params,\n      ERC20_TRANSFER_FUNCTION_ABI,\n      ERC20_TRANSFER_FUNCTION_NAME,\n      context,\n      mirrorNode,\n    );\n\n    const tx = HederaBuilder.executeTransaction(normalisedParams);\n    const result = await handleTransaction(tx, client, context);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to transfer ERC20';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[transfer_erc20_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const TRANSFER_ERC20_TOOL = 'transfer_erc20_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: TRANSFER_ERC20_TOOL,\n  name: 'Transfer ERC20',\n  description: transferERC20Prompt(context),\n  parameters: transferERC20Parameters(context),\n  execute: transferERC20,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport {\n  ERC721_TRANSFER_FUNCTION_ABI,\n  ERC721_TRANSFER_FUNCTION_NAME,\n} from '@/shared/constants/contracts';\nimport { transferERC721Parameters } from '@/shared/parameter-schemas/evm.zod';\n\nconst transferERC721Prompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const fromAddressDesc = PromptGenerator.getAnyAddressParameterDescription('fromAddress', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will transfer an existing ERC721 token on Hedera.\n\nParameters:\n- contractId (str, required): The id of the ERC721 contract\n- ${fromAddressDesc}\n- toAddress (str, required): The address to which the token will be transferred. This can be the EVM address or the Hedera account id.\n- tokenId (number, required): The ID of the transfered token\n${usageInstructions}\n\nExample: \"Transfer ERC721 token 0.0.6486793 with id 0 from 0xd94dc7f82f103757f715514e4a37186be6e4580b to 0xd94dc7f82f103757f715514e4a37186be6e4580b\" means transfering the ERC721 token (identified by 0) with contract id 0.0.6486793 from the 0xd94dc7f82f103757f715514e4a37186be6e4580b EVM address to the 0xd94dc7f82f103757f715514e4a37186be6e4580b EVM address.\nExample: \"Transfer ERC721 token 0.0.6486793 with id 0 from 0.0.6486793 to 0xd94dc7f82f103757f715514e4a37186be6e4580b\" means transfering the ERC721 token (identified by 0) with contract id 0.0.6486793 from the 0.0.6486793 Hedera account id to the 0xd94dc7f82f103757f715514e4a37186be6e4580b EVM address.\n`;\n};\n\nconst transferERC721 = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof transferERC721Parameters>>,\n) => {\n  try {\n    const mirrorNode = getMirrornodeService(context.mirrornodeService, client.ledgerId!);\n\n    const normalisedParams = await HederaParameterNormaliser.normaliseTransferERC721Params(\n      params,\n      ERC721_TRANSFER_FUNCTION_ABI,\n      ERC721_TRANSFER_FUNCTION_NAME,\n      context,\n      mirrorNode,\n      client,\n    );\n    const tx = HederaBuilder.executeTransaction(normalisedParams);\n    const result = await handleTransaction(tx, client, context);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to transfer ERC721';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[transfer_erc721_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const TRANSFER_ERC721_TOOL = 'transfer_erc721_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: TRANSFER_ERC721_TOOL,\n  name: 'Transfer ERC721',\n  description: transferERC721Prompt(context),\n  parameters: transferERC721Parameters(context),\n  execute: transferERC721,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { handleTransaction } from '@/shared/strategies/tx-mode-strategy';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { ERC721_MINT_FUNCTION_ABI, ERC721_MINT_FUNCTION_NAME } from '@/shared/constants/contracts';\nimport { mintERC721Parameters } from '@/shared/parameter-schemas/evm.zod';\n\nconst mintERC721Prompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n  const toAddressDesc = PromptGenerator.getAnyAddressParameterDescription('toAddress', context);\n\n  return `\n${contextSnippet}\n\nThis tool will mint a new ERC721 token on Hedera.\n\nParameters:\n- contractId (str, required): The id of the ERC721 contract\n- ${toAddressDesc}\n${usageInstructions}\n\nExample: \"Mint ERC721 token 0.0.6486793 to 0xd94dc7f82f103757f715514e4a37186be6e4580b\" means minting the ERC721 token with contract id 0.0.6486793 to the 0xd94dc7f82f103757f715514e4a37186be6e4580b EVM address.\nExample: \"Mint ERC721 token 0.0.6486793 to 0.0.6486793\" means minting the ERC721 token with contract id 0.0.6486793 to the 0.0.6486793 Hedera account id.\n`;\n};\n\nconst mintERC721 = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof mintERC721Parameters>>,\n) => {\n  try {\n    const mirrorNode = getMirrornodeService(context.mirrornodeService, client.ledgerId!);\n\n    const normalisedParams = await HederaParameterNormaliser.normaliseMintERC721Params(\n      params,\n      ERC721_MINT_FUNCTION_ABI,\n      ERC721_MINT_FUNCTION_NAME,\n      context,\n      mirrorNode,\n      client,\n    );\n    const tx = HederaBuilder.executeTransaction(normalisedParams);\n    const result = await handleTransaction(tx, client, context);\n    return result;\n  } catch (error) {\n    const desc = 'Failed to mint ERC721';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[mint_erc721_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const MINT_ERC721_TOOL = 'mint_erc721_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: MINT_ERC721_TOOL,\n  name: 'Mint ERC721',\n  description: mintERC721Prompt(context),\n  parameters: mintERC721Parameters(context),\n  execute: mintERC721,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { AgentMode, type Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client, Status, TransactionRecordQuery } from '@hashgraph/sdk';\nimport { ExecuteStrategyResult, handleTransaction } from '@/shared/strategies/tx-mode-strategy';\nimport { createERC721Parameters } from '@/shared/parameter-schemas/evm.zod';\nimport HederaBuilder from '@/shared/hedera-utils/hedera-builder';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { getERC721FactoryAddress, ERC721_FACTORY_ABI } from '@/shared/constants/contracts';\n\nconst createERC721Prompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool creates an ERC721 token on Hedera by calling the BaseERC721Factory contract.\n\nParameters:\n- tokenName (str, required): The name of the token\n- tokenSymbol (str, required): The symbol of the token\n- baseURI (str, required): The base URI for token metadata.\n${usageInstructions}\n\nThe contractId returned by the tool is the address of the ERC721 Factory contract, the address of the ERC721 token is the erc721Address returned by the tool.\n`;\n};\n\nconst getERC721Address = async (client: Client, executeStrategyResult: ExecuteStrategyResult) => {\n  const record = await new TransactionRecordQuery()\n    .setTransactionId(executeStrategyResult.raw.transactionId)\n    .execute(client);\n  return '0x' + record.contractFunctionResult?.getAddress(0);\n};\n\nconst createERC721 = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof createERC721Parameters>>,\n) => {\n  try {\n    const factoryContractAddress = getERC721FactoryAddress(client.ledgerId!);\n    const normalisedParams = HederaParameterNormaliser.normaliseCreateERC721Params(\n      params,\n      factoryContractAddress,\n      ERC721_FACTORY_ABI,\n      'deployToken',\n      context,\n    );\n    const tx = HederaBuilder.executeTransaction(normalisedParams);\n    const result = await handleTransaction(tx, client, context);\n\n    if (context.mode == AgentMode.AUTONOMOUS) {\n      const erc721Address = await getERC721Address(client, result as ExecuteStrategyResult);\n      return {\n        ...result,\n        erc721Address: erc721Address?.toString(),\n        message: `ERC721 token created successfully at address ${erc721Address?.toString()}`,\n      };\n    }\n    return result;\n  } catch (error) {\n    const desc = 'Failed to create ERC721 token';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[create_erc721_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const CREATE_ERC721_TOOL = 'create_erc721_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: CREATE_ERC721_TOOL,\n  name: 'Create ERC721 Token',\n  description: createERC721Prompt(context),\n  parameters: createERC721Parameters(context),\n  execute: createERC721,\n});\n\nexport default tool;\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport createERC20Tool, { CREATE_ERC20_TOOL } from './tools/erc20/create-erc20';\nimport transferERC20Tool, { TRANSFER_ERC20_TOOL } from './tools/erc20/transfer-erc20';\nimport transferERC721Tool, {\n  TRANSFER_ERC721_TOOL,\n} from '@/plugins/core-evm-plugin/tools/erc721/transfer-erc721';\nimport mintERC721Tool, {\n  MINT_ERC721_TOOL,\n} from '@/plugins/core-evm-plugin/tools/erc721/mint-erc721';\nimport createERC721Tool, {\n  CREATE_ERC721_TOOL,\n} from '@/plugins/core-evm-plugin/tools/erc721/create-erc721';\n\nexport const coreEVMPlugin: Plugin = {\n  name: 'core-evm-plugin',\n  version: '1.0.0',\n  description: 'A plugin for the Hedera EVM',\n  tools: (context: Context) => {\n    return [\n      createERC20Tool(context),\n      transferERC20Tool(context),\n      transferERC721Tool(context),\n      mintERC721Tool(context),\n      createERC721Tool(context),\n    ];\n  },\n};\n\n// Export tool names as an object for destructuring\nexport const coreEVMPluginToolNames = {\n  TRANSFER_ERC721_TOOL,\n  MINT_ERC721_TOOL,\n  CREATE_ERC20_TOOL,\n  TRANSFER_ERC20_TOOL,\n  CREATE_ERC721_TOOL,\n} as const;\n\nexport default { coreEVMPlugin, coreEVMPluginToolNames };\n","import { z } from 'zod';\nimport type { Context } from '@/shared/configuration';\nimport type { Tool } from '@/shared/tools';\nimport { Client } from '@hashgraph/sdk';\nimport { accountBalanceQueryParameters } from '@/shared/parameter-schemas/account.zod';\nimport BigNumber from 'bignumber.js';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { toHBar } from '@/shared/hedera-utils/hbar-conversion-utils';\n\nexport const getHbarBalanceQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const accountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the HBAR balance for a given Hedera account.\n\nParameters:\n- ${accountDesc}\n${usageInstructions}\n`;\n};\n\nconst postProcess = (hbarBalance: string, accountId: string) => {\n  return `Account ${accountId} has a balance of ${hbarBalance} HBAR`;\n};\n\nexport const getHbarBalanceQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof accountBalanceQueryParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseHbarBalanceParams(\n      params,\n      context,\n      client,\n    );\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const balance: BigNumber = await mirrornodeService.getAccountHBarBalance(\n      normalisedParams.accountId,\n    );\n    return {\n      raw: { accountId: normalisedParams.accountId, hbarBalance: toHBar(balance).toString() },\n      humanMessage: postProcess(toHBar(balance).toString() as string, normalisedParams.accountId),\n    };\n  } catch (error) {\n    const desc = 'Failed to get HBAR balance';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_hbar_balance_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_HBAR_BALANCE_QUERY_TOOL = 'get_hbar_balance_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_HBAR_BALANCE_QUERY_TOOL,\n  name: 'Get HBAR Balance',\n  description: getHbarBalanceQueryPrompt(context),\n  parameters: accountBalanceQueryParameters(context),\n  execute: getHbarBalanceQuery,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { Client, Status } from '@hashgraph/sdk';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { AccountResponse } from '@/shared/hedera-utils/mirrornode/types';\nimport { accountQueryParameters } from '@/shared/parameter-schemas/account.zod';\n\nexport const getAccountQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the account information for a given Hedera account.\n\nParameters:\n- accountId (str, required): The account ID to query\n${usageInstructions}\n`;\n};\n\nconst postProcess = (account: AccountResponse) => {\n  return `Details for ${account.accountId}\nBalance: ${account.balance.balance.toString()}\nPublic Key: ${account.accountPublicKey},\nEVM address: ${account.evmAddress},\n`;\n};\n\nexport const getAccountQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof accountQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const account = await mirrornodeService.getAccount(params.accountId);\n    return {\n      raw: { accountId: params.accountId, account: account },\n      humanMessage: postProcess(account),\n    };\n  } catch (error) {\n    const desc = 'Failed to get account query';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_account_query_tool]', message);\n    return { raw: { status: Status.InvalidTransaction, error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_ACCOUNT_QUERY_TOOL = 'get_account_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_ACCOUNT_QUERY_TOOL,\n  name: 'Get Account Query',\n  description: getAccountQueryPrompt(context),\n  parameters: accountQueryParameters(context),\n  execute: getAccountQuery,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { accountTokenBalancesQueryParameters } from '@/shared/parameter-schemas/account.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Tool } from '@/shared/tools';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { TokenBalancesResponse } from '@/shared/hedera-utils/mirrornode/types';\n\nexport const getAccountTokenBalancesQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const accountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the token balances for a given Hedera account.\n\nParameters:\n- ${accountDesc}\n- tokenId (str, optional): The token ID to query for. If not provided, all token balances will be returned\n${usageInstructions}\n`;\n};\n\nconst postProcess = (tokenBalances: TokenBalancesResponse, accountId: string) => {\n  if (tokenBalances.tokens.length === 0) {\n    return `No token balances found for account ${accountId}`;\n  }\n  const balancesText = tokenBalances.tokens\n    .map(\n      token => `  Token: ${token.token_id}, Balance: ${token.balance}, Decimals: ${token.decimals}`,\n    )\n    .join('\\n');\n\n  return `Details for ${accountId}\n--- Token Balances ---\n${balancesText}`;\n};\n\nexport const getAccountTokenBalancesQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof accountTokenBalancesQueryParameters>>,\n) => {\n  try {\n    const normalisedParams = HederaParameterNormaliser.normaliseAccountTokenBalancesParams(\n      params,\n      context,\n      client,\n    );\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const tokenBalances = await mirrornodeService.getAccountTokenBalances(\n      normalisedParams.accountId,\n      normalisedParams.tokenId,\n    );\n    return {\n      raw: { accountId: normalisedParams.accountId, tokenBalances: tokenBalances },\n      humanMessage: postProcess(tokenBalances, normalisedParams.accountId),\n    };\n  } catch (error) {\n    const desc = 'Failed to get account token balances';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_account_token_balances_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL = 'get_account_token_balances_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL,\n  name: 'Get Account Token Balances',\n  description: getAccountTokenBalancesQueryPrompt(context),\n  parameters: accountTokenBalancesQueryParameters(context),\n  execute: getAccountTokenBalancesQuery,\n});\n\nexport default tool;\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport getHbarBalanceQuery, {\n  GET_HBAR_BALANCE_QUERY_TOOL,\n} from '@/plugins/core-account-query-plugin/tools/queries/get-hbar-balance-query';\nimport getAccountQuery, {\n  GET_ACCOUNT_QUERY_TOOL,\n} from '@/plugins/core-account-query-plugin/tools/queries/get-account-query';\nimport getAccountTokenBalancesQuery, {\n  GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL,\n} from '@/plugins/core-account-query-plugin/tools/queries/get-account-token-balances-query';\n\nexport const coreAccountQueryPlugin: Plugin = {\n  name: 'core-account-query-plugin',\n  version: '1.0.0',\n  description: 'A plugin for Hedera Account Service queries',\n  tools: (context: Context) => {\n    return [\n      getHbarBalanceQuery(context),\n      getAccountQuery(context),\n      getAccountTokenBalancesQuery(context),\n    ];\n  },\n};\n\nexport const coreAccountQueryPluginToolNames = {\n  GET_HBAR_BALANCE_QUERY_TOOL,\n  GET_ACCOUNT_QUERY_TOOL,\n  GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL,\n} as const;\n\nexport default { coreAccountQueryPlugin, coreAccountQueryPluginToolNames };\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { tokenInfoQueryParameters } from '@/shared/parameter-schemas/token.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { TokenInfo } from '@/shared/hedera-utils/mirrornode/types';\n\nexport const getTokenInfoQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the information for a given Hedera token.\n\nParameters:\n- tokenId (str): The token ID to query for.\n${usageInstructions}\n`;\n};\n\nconst postProcess = (tokenInfo: TokenInfo) => {\n  const formatSupply = (supply?: string) => {\n    if (!supply) return 'N/A';\n\n    const decimals = Number(tokenInfo.decimals || '0');\n    const amount = Number(supply);\n    if (isNaN(amount)) return supply;\n\n    return (amount / 10 ** decimals).toLocaleString();\n  };\n\n  const formatKey = (key?: { _type: string; key: string } | null) => {\n    if (!key) return 'Not Set';\n    return key._type ? `${key.key}` : 'Present';\n  };\n\n  const supplyType = tokenInfo.supply_type === 'INFINITE' ? 'Infinite' : 'Finite';\n  const freezeStatus = tokenInfo.freeze_default ? 'Frozen' : 'Active';\n\n  return `Here are the details for token **${tokenInfo.token_id}**:\n\n- **Token Name**: ${tokenInfo.name}\n- **Token Symbol**: ${tokenInfo.symbol}\n- **Token Type**: ${tokenInfo.type || 'N/A'}\n- **Decimals**: ${tokenInfo.decimals}\n- **Max Supply**: ${formatSupply(tokenInfo.max_supply)}\n- **Current Supply**: ${formatSupply(tokenInfo.total_supply)}\n- **Supply Type**: ${supplyType}\n- **Treasury Account ID**: ${tokenInfo.treasury_account_id || 'N/A'}\n- **Status (Deleted/Active)**: ${tokenInfo.deleted ? 'Deleted' : 'Active'}\n- **Status (Frozen/Active)**: ${freezeStatus}\n\n**Keys**:\n- Admin Key: ${formatKey(tokenInfo.admin_key)}\n- Supply Key: ${formatKey(tokenInfo.supply_key)}\n- Wipe Key: ${formatKey(tokenInfo.wipe_key)}\n- KYC Key: ${formatKey(tokenInfo.kyc_key)}\n- Freeze Key: ${formatKey(tokenInfo.freeze_key)}\n- Fee Schedule Key: ${formatKey(tokenInfo.fee_schedule_key)}\n- Pause Key: ${formatKey(tokenInfo.pause_key)}\n- Metadata Key: ${formatKey(tokenInfo.metadata_key)}\n\n${tokenInfo.memo ? `**Memo**: ${tokenInfo.memo}` : ''}\n`;\n};\n\nexport const getTokenInfoQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof tokenInfoQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const tokenInfo: TokenInfo = {\n      ...(await mirrornodeService.getTokenInfo(params.tokenId!)),\n      token_id: params.tokenId!,\n    };\n\n    return {\n      raw: { tokenId: params.tokenId, tokenInfo },\n      humanMessage: postProcess(tokenInfo),\n    };\n  } catch (error) {\n    const desc = 'Failed to get token info';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_token_info_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_TOKEN_INFO_QUERY_TOOL = 'get_token_info_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_TOKEN_INFO_QUERY_TOOL,\n  name: 'Get Token Info',\n  description: getTokenInfoQueryPrompt(context),\n  parameters: tokenInfoQueryParameters(context),\n  execute: getTokenInfoQuery,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { accountBalanceQueryParameters } from '@/shared/parameter-schemas/account.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { TokenAirdropsResponse, TokenAirdrop } from '@/shared/hedera-utils/mirrornode/types';\nimport { pendingAirdropQueryParameters } from '@/shared/parameter-schemas/token.zod';\nimport { AccountResolver } from '@/shared/utils/account-resolver';\n\nexport const getPendingAirdropQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const accountDesc = PromptGenerator.getAccountParameterDescription('accountId', context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return pending airdrops for a given Hedera account.\n\nParameters:\n- ${accountDesc}\n${usageInstructions}\n`;\n};\n\nconst formatAirdrop = (airdrop: TokenAirdrop, index: number) => {\n  const token = airdrop.token_id ?? 'N/A';\n  const amount = airdrop.amount ?? 0;\n  const serial = airdrop.serial_number ?? 'N/A';\n  const sender = airdrop.sender_id ?? 'N/A';\n  const receiver = airdrop.receiver_id ?? 'N/A';\n  const fromTs = airdrop.timestamp?.from ?? 'N/A';\n  const toTs = airdrop.timestamp?.to ?? 'N/A';\n  return `#${index + 1} Token: ${token}, Amount: ${amount}, Serial: ${serial}, Sender: ${sender}, Receiver: ${receiver}, Timestamp: ${fromTs}${toTs ? ` → ${toTs}` : ''}`;\n};\n\nconst postProcess = (accountId: string, response: TokenAirdropsResponse) => {\n  const count = response.airdrops?.length ?? 0;\n  if (count === 0) {\n    return `No pending airdrops found for account ${accountId}`;\n  }\n\n  const details = response.airdrops.map(formatAirdrop).join('\\n');\n  return `Here are the pending airdrops for account **${accountId}** (total: ${count}):\\n\\n${details}`;\n};\n\nexport const getPendingAirdropQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof pendingAirdropQueryParameters>>,\n) => {\n  try {\n    const accountId = params.accountId ?? AccountResolver.getDefaultAccount(context, client);\n    if (!accountId) throw new Error('Account ID is required and was not provided');\n\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const response = await mirrornodeService.getPendingAirdrops(accountId);\n\n    return {\n      raw: { accountId, pendingAirdrops: response },\n      humanMessage: postProcess(accountId, response),\n    };\n  } catch (error) {\n    const desc = 'Failed to get pending airdrops';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_pending_airdrop_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_PENDING_AIRDROP_TOOL = 'get_pending_airdrop_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_PENDING_AIRDROP_TOOL,\n  name: 'Get Pending Airdrops',\n  description: getPendingAirdropQueryPrompt(context),\n  parameters: pendingAirdropQueryParameters(context),\n  execute: getPendingAirdropQuery,\n});\n\nexport default tool;\n\n\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport getTokenInfoQuery, {\n  GET_TOKEN_INFO_QUERY_TOOL,\n} from '@/plugins/core-token-query-plugin/tools/queries/get-token-info-query';\nimport getPendingAirdropQuery, {\n  GET_PENDING_AIRDROP_TOOL,\n} from '@/plugins/core-token-query-plugin/tools/queries/get-pending-airdrop-query';\n\nexport const coreTokenQueryPlugin: Plugin = {\n  name: 'core-token-query-plugin',\n  version: '1.0.0',\n  description: 'A plugin for Hedera Token Service queries',\n  tools: (context: Context) => {\n    return [getTokenInfoQuery(context), getPendingAirdropQuery(context)];\n  },\n};\n\nexport const coreTokenQueryPluginToolNames = {\n  GET_TOKEN_INFO_QUERY_TOOL,\n  GET_PENDING_AIRDROP_TOOL,\n} as const;\n\nexport default { coreTokenQueryPlugin, coreTokenQueryPluginToolNames };\n","import { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { topicMessagesQueryParameters } from '@/shared/parameter-schemas/consensus.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { z } from 'zod';\nimport { Tool } from '@/shared/tools';\nimport { TopicMessage, TopicMessagesQueryParams } from '@/shared/hedera-utils/mirrornode/types';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\n\nexport const getTopicMessagesQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the messages for a given Hedera topic.\n\nParameters:\n- topicId (str, required): The topic ID to query\n- startTime (datetime, optional): The start datetime to query. If set, the messages will be returned after this datetime\n- endTime (datetime, optional): The end datetime to query. If set, the messages will be returned before this datetime\n- limit (int, optional): The limit of messages to query. If set, the number of messages to return\n${usageInstructions}\n`;\n};\n\nconst postProcess = (messages: TopicMessage[], topicId: string) => {\n  if (messages.length === 0) {\n    return `No messages found for topic ${topicId}.`;\n  }\n\n  const messagesText = messages.map(\n    message =>\n      `${Buffer.from(message.message, 'base64').toString('utf-8')} - posted at: ${message.consensus_timestamp}\\n`,\n  );\n\n  return `Messages for topic ${topicId}:\n  --- Messages ---\n  ${messagesText}\n  `;\n};\n\nconst getTopicMessagesQueryParams = (\n  params: z.infer<ReturnType<typeof topicMessagesQueryParameters>>,\n): TopicMessagesQueryParams => {\n  return {\n    topicId: params.topicId,\n    lowerTimestamp: params.startTime\n      ? `${Math.floor(new Date(params.startTime).getTime() / 1000)}.000000000`\n      : '',\n    upperTimestamp: params.endTime\n      ? `${Math.floor(new Date(params.endTime).getTime() / 1000)}.000000000`\n      : '',\n    limit: params.limit || 100,\n  };\n};\n\nconst convertMessagesFromBase64ToString = (messages: TopicMessage[]) => {\n  return messages.map(message => {\n    return {\n      ...message,\n      message: Buffer.from(message.message, 'base64').toString('utf-8'),\n    };\n  });\n};\n\nexport const getTopicMessagesQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof topicMessagesQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const messages = await mirrornodeService.getTopicMessages(getTopicMessagesQueryParams(params));\n\n    return {\n      raw: {\n        topicId: messages.topicId,\n        messages: convertMessagesFromBase64ToString(messages.messages),\n      },\n      humanMessage: postProcess(messages.messages, params.topicId),\n    };\n  } catch (error) {\n    const desc = 'Failed to get topic messages';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_topic_messages_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_TOPIC_MESSAGES_QUERY_TOOL = 'get_topic_messages_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_TOPIC_MESSAGES_QUERY_TOOL,\n  name: 'Get Topic Messages',\n  description: getTopicMessagesQueryPrompt(context),\n  parameters: topicMessagesQueryParameters(context),\n  execute: getTopicMessagesQuery,\n});\n\nexport default tool;\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { Client } from '@hashgraph/sdk';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { TopicInfo } from '@/shared/hedera-utils/mirrornode/types';\nimport { getTopicInfoParameters } from '@/shared/parameter-schemas/consensus.zod';\n\nexport const getTopicInfoQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the information for a given Hedera topic (HCS).\n\nParameters:\n- topicId (str): The topic ID to query for.\n${usageInstructions}\n`;\n};\n\nconst postProcess = (topic: TopicInfo) => {\n  const formatKey = (key?: { _type?: string; key?: string } | null) => {\n    if (!key) return 'Not Set';\n    return key._type ? key.key || 'Present' : 'Present';\n  };\n\n  const formatTimestamp = (ts?: string | null) => {\n    if (!ts) return 'N/A';\n    const [seconds] = ts.split('.');\n    const date = new Date(Number(seconds) * 1000);\n    return date.toISOString();\n  };\n\n  return `Here are the details for topic **${topic.topic_id || 'N/A'}**:\n\n- **Memo**: ${topic.memo || 'N/A'}\n- **Deleted**: ${topic.deleted ? 'Yes' : 'No'}\n- **Sequence Number**: ${topic.sequence_number ?? 'N/A'}\n\n**Timestamps**:\n- Created: ${formatTimestamp(topic.created_timestamp)}\n\n**Entity IDs**:\n- Auto Renew Account: ${topic.auto_renew_account || 'N/A'}\n- Auto Renew Period: ${topic.auto_renew_period ?? 'N/A'}\n\n**Keys**:\n- Admin Key: ${formatKey(topic.admin_key)}\n- Submit Key: ${formatKey(topic.submit_key)}\n`;\n};\n\nexport const getTopicInfoQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof getTopicInfoParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const topicInfo: TopicInfo = {\n      ...(await mirrornodeService.getTopicInfo(params.topicId)),\n      topic_id: params.topicId,\n    };\n\n    return {\n      raw: { topicId: params.topicId, topicInfo },\n      humanMessage: postProcess(topicInfo),\n    };\n  } catch (error) {\n    const desc = 'Failed to get topic info';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_topic_info_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_TOPIC_INFO_QUERY_TOOL = 'get_topic_info_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_TOPIC_INFO_QUERY_TOOL,\n  name: 'Get Topic Info',\n  description: getTopicInfoQueryPrompt(context),\n  parameters: getTopicInfoParameters(context),\n  execute: getTopicInfoQuery,\n});\n\nexport default tool;\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport getTopicMessagesQuery, {\n  GET_TOPIC_MESSAGES_QUERY_TOOL,\n} from '@/plugins/core-consensus-query-plugin/tools/queries/get-topic-messages-query';\nimport getTopicInfoQuery, {\n  GET_TOPIC_INFO_QUERY_TOOL,\n} from '@/plugins/core-consensus-query-plugin/tools/queries/get-topic-info-query';\n\nexport const coreConsensusQueryPlugin: Plugin = {\n  name: 'core-consensus-query-plugin',\n  version: '1.0.0',\n  description: 'A plugin for Hedera Consensus Service queries',\n  tools: (context: Context) => {\n    return [getTopicMessagesQuery(context), getTopicInfoQuery(context)];\n  },\n};\n\nexport const coreConsensusQueryPluginToolNames = {\n  GET_TOPIC_MESSAGES_QUERY_TOOL,\n  GET_TOPIC_INFO_QUERY_TOOL,\n} as const;\n\nexport default { coreConsensusQueryPlugin, coreConsensusQueryPluginToolNames };\n","import { z } from 'zod';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { contractInfoQueryParameters } from '@/shared/parameter-schemas/evm.zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { ContractInfo } from '@/shared/hedera-utils/mirrornode/types';\n\nexport const getContractInfoQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the information for a given Hedera contract.\n\nParameters:\n- contractId (str): The contract ID to query for.\n${usageInstructions}\n`;\n};\n\nconst postProcess = (contract: ContractInfo) => {\n  const formatKey = (key?: { _type?: string; key?: string } | null) => {\n    if (!key) return 'Not Set';\n    return key._type ? key.key || 'Present' : 'Present';\n  };\n\n  const formatTimestamp = (ts?: string | null) => {\n    if (!ts) return 'N/A';\n    const [seconds, nanos] = ts.split('.');\n    const date = new Date(Number(seconds) * 1000);\n    return date.toISOString() + (nanos ? `.${nanos}` : '');\n  };\n\n  return `Here are the details for contract **${contract.contract_id || 'N/A'}**:\n\n- **Memo**: ${contract.memo || 'N/A'}\n- **Deleted**: ${contract.deleted ? 'Yes' : 'No'}\n- **Permanent Removal**: ${contract.permanent_removal ? 'Yes' : 'No'}\n- **Nonce**: ${contract.nonce ?? 'N/A'}\n\n**Timestamps**:\n- Created: ${formatTimestamp(contract.created_timestamp)}\n- Expiration: ${formatTimestamp(contract.expiration_timestamp)}\n- Valid From: ${contract.timestamp?.from || 'N/A'}\n- Valid To: ${contract.timestamp?.to || 'N/A'}\n\n**Entity IDs**:\n- Auto Renew Account: ${contract.auto_renew_account || 'N/A'}\n- File ID: ${contract.file_id || 'N/A'}\n- Obtainer ID: ${contract.obtainer_id || 'N/A'}\n- Proxy Account ID: ${contract.proxy_account_id || 'N/A'}\n\n**Keys**:\n- Admin Key: ${formatKey(contract.admin_key)}\n\n**EVM**:\n- Address: ${contract.evm_address || 'N/A'}\n`;\n};\n\nexport const getContractInfoQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof contractInfoQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const contractInfo: ContractInfo = await mirrornodeService.getContractInfo(params.contractId);\n\n    return {\n      raw: { contractId: params.contractId, contractInfo },\n      humanMessage: postProcess(contractInfo),\n    };\n  } catch (error) {\n    const desc = 'Failed to get contract info';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_contract_info_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_CONTRACT_INFO_QUERY_TOOL = 'get_contract_info_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_CONTRACT_INFO_QUERY_TOOL,\n  name: 'Get Contract Info',\n  description: getContractInfoQueryPrompt(context),\n  parameters: contractInfoQueryParameters(context),\n  execute: getContractInfoQuery,\n});\n\nexport default tool;\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport getContractInfoQuery, {\n  GET_CONTRACT_INFO_QUERY_TOOL,\n} from '@/plugins/core-evm-query-plugin/tools/queries/get-contract-info-query';\n\nexport const coreEVMQueryPlugin: Plugin = {\n  name: 'core-evm-query-plugin',\n  version: '1.0.0',\n  description: 'A plugin for Hedera EVM Service queries',\n  tools: (context: Context) => {\n    return [getContractInfoQuery(context)];\n  },\n};\n\nexport const coreEVMQueryPluginToolNames = {\n  GET_CONTRACT_INFO_QUERY_TOOL,\n} as const;\n\nexport default { coreEVMQueryPlugin, coreEVMQueryPluginToolNames };\n","import { z } from 'zod';\nimport { Client } from '@hashgraph/sdk';\nimport { Context } from '@/shared/configuration';\nimport { getMirrornodeService } from '@/shared/hedera-utils/mirrornode/hedera-mirrornode-utils';\nimport { Tool } from '@/shared/tools';\nimport { PromptGenerator } from '@/shared/utils/prompt-generator';\nimport { TransactionDetailsResponse } from '@/shared/hedera-utils/mirrornode/types';\nimport { toDisplayUnit } from '@/shared/hedera-utils/decimals-utils';\nimport HederaParameterNormaliser from '@/shared/hedera-utils/hedera-parameter-normaliser';\nimport { transactionRecordQueryParameters } from '@/shared/parameter-schemas/transaction.zod';\n\nexport const getTransactionRecordQueryPrompt = (context: Context = {}) => {\n  const contextSnippet = PromptGenerator.getContextSnippet(context);\n  const usageInstructions = PromptGenerator.getParameterUsageInstructions();\n\n  return `\n${contextSnippet}\n\nThis tool will return the transaction record for a given Hedera transaction ID.\n\nParameters:\n- transactionId (str, required): The transaction ID to fetch record for. Should be in format \\\\\"shard.realm.num-sss-nnn\\\\\" format where sss are seconds and nnn are nanoseconds\n- nonce (number, optional): Optional nonce value for the transaction\n${usageInstructions}\n\nAdditional information:\nIf user provides transaction ID in format 0.0.4177806@1755169980.051721264, parse it to 0.0.4177806-1755169980-051721264 and use it as transaction ID. Do not remove the staring zeros.\n`;\n};\n\nconst postProcess = (transactionRecord: TransactionDetailsResponse, transactionId: string) => {\n  if (!transactionRecord.transactions || transactionRecord.transactions.length === 0) {\n    return `No transaction details found for transaction ID: ${transactionId}`;\n  }\n\n  const results = transactionRecord.transactions.map((tx, index) => {\n    let transfersInfo = '';\n    if (tx.transfers && tx.transfers.length > 0) {\n      transfersInfo =\n        '\\nTransfers:\\n' +\n        tx.transfers\n          .map(\n            transfer =>\n              `  Account: ${transfer.account}, Amount: ${toDisplayUnit(transfer.amount, 8)}ℏ`,\n          )\n          .join('\\n');\n    }\n\n    const transactionHeader =\n      transactionRecord.transactions.length > 1\n        ? `Transaction ${index + 1} Details for ${transactionId}`\n        : `Transaction Details for ${transactionId}`;\n\n    return `${transactionHeader}\nStatus: ${tx.result}\nConsensus Timestamp: ${tx.consensus_timestamp}\nTransaction Hash: ${tx.transaction_hash}\nTransaction Fee: ${tx.charged_tx_fee}\nType: ${tx.name}\nEntity ID: ${tx.entity_id}${transfersInfo}`;\n  });\n\n  return results.join('\\n\\n' + '='.repeat(50) + '\\n\\n');\n};\n\nexport const getTransactionRecordQuery = async (\n  client: Client,\n  context: Context,\n  params: z.infer<ReturnType<typeof transactionRecordQueryParameters>>,\n) => {\n  try {\n    const mirrornodeService = getMirrornodeService(context.mirrornodeService!, client.ledgerId!);\n    const normalisedParams = HederaParameterNormaliser.normaliseGetTransactionRecordParams(\n      params,\n      context,\n    );\n\n    const transactionRecord = await mirrornodeService.getTransactionRecord(\n      normalisedParams.transactionId,\n      normalisedParams.nonce,\n    );\n\n    return {\n      raw: { transactionId: params.transactionId, transactionRecord: transactionRecord },\n      humanMessage: postProcess(transactionRecord, params.transactionId),\n    };\n  } catch (error) {\n    const desc = 'Failed to get transaction record';\n    const message = desc + (error instanceof Error ? `: ${error.message}` : '');\n    console.error('[get_transaction_record_query_tool]', message);\n    return { raw: { error: message }, humanMessage: message };\n  }\n};\n\nexport const GET_TRANSACTION_RECORD_QUERY_TOOL = 'get_transaction_record_query_tool';\n\nconst tool = (context: Context): Tool => ({\n  method: GET_TRANSACTION_RECORD_QUERY_TOOL,\n  name: 'Get Transaction Record Query',\n  description: getTransactionRecordQueryPrompt(context),\n  parameters: transactionRecordQueryParameters(context),\n  execute: getTransactionRecordQuery,\n});\n\nexport default tool;\n","import { Plugin } from '@/shared/plugin';\nimport { Context } from '@/shared/configuration';\nimport getTransactionRecordQuery, {\n  GET_TRANSACTION_RECORD_QUERY_TOOL,\n} from '@/plugins/core-transactions-query-plugin/tools/queries/get-transaction-record-query';\n\nexport const coreTransactionQueryPlugin: Plugin = {\n  name: 'core-transaction-query-plugin',\n  version: '1.0.0',\n  description: 'A plugin for Hedera Transactions queries',\n  tools: (context: Context) => {\n    return [getTransactionRecordQuery(context)];\n  },\n};\n\nexport const coreTransactionQueryPluginToolNames = {\n  GET_TRANSACTION_RECORD_QUERY_TOOL,\n} as const;\n\nexport default { coreTransactionQueryPlugin, coreTransactionQueryPluginToolNames };\n","import { coreTokenPlugin, coreTokenPluginToolNames } from './core-token-plugin';\nimport { coreAccountPlugin, coreAccountPluginToolNames } from './core-account-plugin';\nimport { coreConsensusPlugin, coreConsensusPluginToolNames } from './core-consensus-plugin';\nimport { coreQueriesPlugin, coreQueriesPluginToolNames } from './core-queries-plugin';\nimport { coreMiscQueriesPluginsToolNames, coreMiscQueriesPlugin } from './core-misc-query-plugin';\nimport { coreEVMPlugin, coreEVMPluginToolNames } from './core-evm-plugin';\nimport {\n  coreAccountQueryPlugin,\n  coreAccountQueryPluginToolNames,\n} from './core-account-query-plugin';\nimport { coreTokenQueryPlugin, coreTokenQueryPluginToolNames } from './core-token-query-plugin';\nimport {\n  coreConsensusQueryPlugin,\n  coreConsensusQueryPluginToolNames,\n} from './core-consensus-query-plugin';\nimport { coreEVMQueryPlugin, coreEVMQueryPluginToolNames } from './core-evm-query-plugin';\nimport {\n  coreTransactionQueryPlugin,\n  coreTransactionQueryPluginToolNames,\n} from './core-transactions-query-plugin';\n\nexport {\n  coreTokenPlugin,\n  coreAccountPlugin,\n  coreConsensusPlugin,\n  coreMiscQueriesPlugin,\n  coreQueriesPlugin,\n  coreTokenPluginToolNames,\n  coreAccountPluginToolNames,\n  coreConsensusPluginToolNames,\n  coreQueriesPluginToolNames,\n  coreEVMPlugin,\n  coreEVMPluginToolNames,\n  coreAccountQueryPlugin,\n  coreTokenQueryPlugin,\n  coreConsensusQueryPlugin,\n  coreAccountQueryPluginToolNames,\n  coreTokenQueryPluginToolNames,\n  coreConsensusQueryPluginToolNames,\n  coreEVMQueryPlugin,\n  coreEVMQueryPluginToolNames,\n  coreTransactionQueryPlugin,\n  coreTransactionQueryPluginToolNames,\n  coreMiscQueriesPluginsToolNames,\n};\n\n// Deprecated exports for backward compatibility\n/**\n * @deprecated Use coreTokenPlugin instead. This export will be removed in a future version.\n */\nexport const coreHTSPlugin = coreTokenPlugin;\n\n/**\n * @deprecated Use coreTokenPluginToolNames instead. This export will be removed in a future version.\n */\nexport const coreHTSPluginToolNames = coreTokenPluginToolNames;\n\n/**\n * @deprecated Use coreEVMPlugin instead. This export will be removed in a future version.\n */\nexport const coreSCSPlugin = coreEVMPlugin;\n\n/**\n * @deprecated Use coreEVMPluginToolNames instead. This export will be removed in a future version.\n */\nexport const coreSCSPluginToolNames = coreEVMPluginToolNames;\n","import { Context } from './configuration';\nimport { Tool } from './tools';\nimport {\n  coreAccountPlugin,\n  coreTokenPlugin,\n  coreConsensusPlugin,\n  coreEVMPlugin,\n  coreAccountQueryPlugin,\n  coreTokenQueryPlugin,\n  coreConsensusQueryPlugin,\n} from '@/plugins';\n\nconst CORE_PLUGINS = [\n  coreAccountPlugin,\n  coreTokenPlugin,\n  coreConsensusPlugin,\n  coreEVMPlugin,\n  coreAccountQueryPlugin,\n  coreTokenQueryPlugin,\n  coreConsensusQueryPlugin,\n];\n\nexport interface Plugin {\n  name: string;\n  version?: string;\n  description?: string;\n  tools: (context: Context) => Tool[];\n}\n\nexport class PluginRegistry {\n  private plugins = new Map<string, Plugin>();\n\n  register(plugin: Plugin): void {\n    if (this.plugins.has(plugin.name)) {\n      console.warn(`Plugin \"${plugin.name}\" is already registered. Overwriting.`);\n    }\n    this.plugins.set(plugin.name, plugin);\n  }\n\n  getPlugins(): Plugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  private loadCorePlugins(context: Context): Tool[] {\n    const pluginTools: Tool[] = [];\n    for (const plugin of CORE_PLUGINS) {\n      try {\n        const tools = plugin.tools(context);\n        pluginTools.push(...tools);\n      } catch (error) {\n        console.error(`Error loading tools from plugin \"${plugin.name}\":`, error);\n      }\n    }\n    return pluginTools;\n  }\n\n  private loadPlugins(context: Context): Tool[] {\n    const pluginTools: Tool[] = [];\n    for (const plugin of this.plugins.values()) {\n      try {\n        const tools = plugin.tools(context);\n        pluginTools.push(...tools);\n      } catch (error) {\n        console.error(`Error loading tools from plugin \"${plugin.name}\":`, error);\n      }\n    }\n    return pluginTools;\n  }\n\n  getTools(context: Context): Tool[] {\n    if (this.plugins.size === 0) {\n      return this.loadCorePlugins(context);\n    } else {\n      return this.loadPlugins(context);\n    }\n  }\n\n  clear(): void {\n    this.plugins.clear();\n  }\n}\n","import { z } from 'zod';\nimport { StructuredTool } from '@langchain/core/tools';\nimport { CallbackManagerForToolRun } from '@langchain/core/callbacks/manager';\nimport { RunnableConfig } from '@langchain/core/runnables';\nimport HederaAgentKitAPI from '@/shared/api';\n\nclass HederaAgentKitTool extends StructuredTool {\n  hederaAPI: HederaAgentKitAPI;\n\n  method: string;\n\n  name: string;\n\n  description: string;\n\n  schema: z.ZodObject<any, any>;\n\n  constructor(\n    HederaAgentKitAPI: HederaAgentKitAPI,\n    method: string,\n    description: string,\n    schema: z.ZodObject<any, any>,\n  ) {\n    super();\n\n    this.hederaAPI = HederaAgentKitAPI;\n    this.method = method;\n    this.name = method;\n    this.description = description;\n    this.schema = schema;\n  }\n\n  _call(\n    arg: z.output<typeof this.schema>,\n    _runManager?: CallbackManagerForToolRun,\n    _parentConfig?: RunnableConfig,\n  ): Promise<any> {\n    return this.hederaAPI.run(this.method, arg);\n  }\n}\n\nexport default HederaAgentKitTool;\n","import { Context, Configuration } from './configuration';\nimport { Tool } from './tools';\nimport { Plugin, PluginRegistry } from './plugin';\n\nexport class ToolDiscovery {\n  private pluginRegistry = new PluginRegistry();\n\n  constructor(plugins: Plugin[] = []) {\n    plugins.forEach(plugin => this.pluginRegistry.register(plugin));\n  }\n\n  getAllTools(context: Context, configuration?: Configuration): Tool[] {\n    // Get plugin tools\n    const pluginTools = this.pluginRegistry.getTools(context);\n\n    // Merge all tools (core tools take precedence in case of name conflicts)\n    const allTools: any = [];\n    const allToolNames = new Set<string>();\n\n    // Add plugin tools that don't conflict with core tools\n    pluginTools.forEach(pluginTool => {\n      if (!allToolNames.has(pluginTool.method)) {\n        allTools.push(pluginTool);\n        allToolNames.add(pluginTool.method);\n      } else {\n        console.warn(\n          `Plugin tool \"${pluginTool.method}\" conflicts with core tool. Using core tool.`,\n        );\n      }\n    });\n\n    // Apply tool filtering if specified in configuration\n    if (configuration?.tools && configuration.tools.length > 0) {\n      return allTools.filter((tool: any) => configuration.tools!.includes(tool.method));\n    }\n\n    return allTools;\n  }\n\n  static createFromConfiguration(configuration: Configuration): ToolDiscovery {\n    return new ToolDiscovery(configuration.plugins || []);\n  }\n}\n","import { BaseToolkit } from '@langchain/core/tools';\nimport HederaAgentKitTool from '@/langchain/tool';\nimport HederaAgentKitAPI from '@/shared/api';\nimport { type Configuration } from '@/shared/configuration';\nimport { ToolDiscovery } from '@/shared/tool-discovery';\nimport { Client } from '@hashgraph/sdk';\n\nclass HederaLangchainToolkit implements BaseToolkit {\n  private _hederaAgentKit: HederaAgentKitAPI;\n\n  tools: HederaAgentKitTool[];\n\n  constructor({ client, configuration }: { client: Client; configuration: Configuration }) {\n    const context = configuration.context || {};\n    const toolDiscovery = ToolDiscovery.createFromConfiguration(configuration);\n    const allTools = toolDiscovery.getAllTools(context, configuration);\n\n    this._hederaAgentKit = new HederaAgentKitAPI(client, configuration.context, allTools);\n    this.tools = allTools.map(\n      tool =>\n        new HederaAgentKitTool(\n          this._hederaAgentKit,\n          tool.method,\n          tool.description,\n          tool.parameters,\n        ),\n    );\n  }\n\n  getTools(): HederaAgentKitTool[] {\n    return this.tools;\n  }\n\n  getHederaAgentKitAPI(): HederaAgentKitAPI {\n    return this._hederaAgentKit;\n  }\n}\n\nexport default HederaLangchainToolkit;\n","import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { Client } from '@hashgraph/sdk';\nimport { Configuration } from '@/shared/configuration';\nimport HederaAgentKitAPI from '@/shared/api';\nimport { ToolDiscovery } from '@/shared/tool-discovery';\nimport { RequestHandlerExtra } from '@modelcontextprotocol/sdk/shared/protocol.js';\n\nclass HederaMCPToolkit extends McpServer {\n  private _hederaAgentKit: HederaAgentKitAPI;\n\n  constructor({ client, configuration }: { client: Client; configuration: Configuration }) {\n    super({\n      name: 'Hedera Agent Kit',\n      version: '0.1.0',\n      configuration: {\n        ...configuration,\n        context: {\n          ...configuration.context,\n          mode: 'modelcontextprotocol',\n        },\n      },\n    });\n\n    const context = configuration.context || {};\n    const toolDiscovery = ToolDiscovery.createFromConfiguration(configuration);\n    const allTools = toolDiscovery.getAllTools(context, configuration);\n    this._hederaAgentKit = new HederaAgentKitAPI(client, configuration.context, allTools);\n\n    allTools.map(tool => {\n      this.tool(\n        tool.method,\n        tool.description,\n        tool.parameters.shape,\n        async (arg: any, _extra: RequestHandlerExtra<any, any>) => {\n          const result = await this._hederaAgentKit.run(tool.method, arg);\n          return {\n            content: [\n              {\n                type: 'text' as const,\n                text: String(result),\n              },\n            ],\n          };\n        },\n      );\n    });\n  }\n}\n\nexport default HederaMCPToolkit;\n","import HederaAgentAPI from '@/shared/api';\nimport { tool } from 'ai';\nimport z from 'zod';\n\nexport default function HederaAgentKitTool(\n  hederaAPI: HederaAgentAPI,\n  method: string,\n  description: string,\n  schema: z.ZodObject<any, any>,\n) {\n  return tool({\n    description: description,\n    parameters: schema,\n    execute: (arg: z.output<typeof schema>) => {\n      return hederaAPI.run(method, arg);\n    },\n  });\n}\n","import HederaAgentAPI from '../shared/api';\nimport { type Configuration } from '@/shared';\nimport { ToolDiscovery } from '@/shared/tool-discovery';\nimport type { Tool, LanguageModelV1Middleware } from 'ai';\nimport { Client } from '@hashgraph/sdk';\nimport HederaAgentKitTool from './tool';\n\nclass HederaAIToolkit {\n  private _hedera: HederaAgentAPI;\n\n  tools: { [key: string]: Tool };\n\n  constructor({ client, configuration }: { client: Client; configuration: Configuration }) {\n    const context = configuration.context || {};\n    const toolDiscovery = ToolDiscovery.createFromConfiguration(configuration);\n    const allTools = toolDiscovery.getAllTools(context, configuration);\n    this._hedera = new HederaAgentAPI(client, configuration.context, allTools);\n    this.tools = {};\n\n    allTools.forEach(tool => {\n      this.tools[tool.method] = HederaAgentKitTool(\n        this._hedera,\n        tool.method,\n        tool.description,\n        tool.parameters,\n      );\n    });\n  }\n\n  middleware(): LanguageModelV1Middleware {\n    return {\n      wrapGenerate: async ({ doGenerate }) => {\n        return doGenerate();\n      },\n      wrapStream: async ({ doStream }) => {\n        // Pre-processing can be added here if needed\n        return doStream();\n      },\n    };\n  }\n  getTools(): { [key: string]: Tool } {\n    return this.tools;\n  }\n}\n\nexport default HederaAIToolkit;\n","var __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\") return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\n\n// src/types/primitives.ts\nfunction asUUID(id) {\n  if (!id || !/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(id)) {\n    throw new Error(`Invalid UUID format: ${id}`);\n  }\n  return id;\n}\nvar ContentType = /* @__PURE__ */ ((ContentType2) => {\n  ContentType2[\"IMAGE\"] = \"image\";\n  ContentType2[\"VIDEO\"] = \"video\";\n  ContentType2[\"AUDIO\"] = \"audio\";\n  ContentType2[\"DOCUMENT\"] = \"document\";\n  ContentType2[\"LINK\"] = \"link\";\n  return ContentType2;\n})(ContentType || {});\n\n// src/types/memory.ts\nvar MemoryType = /* @__PURE__ */ ((MemoryType2) => {\n  MemoryType2[\"DOCUMENT\"] = \"document\";\n  MemoryType2[\"FRAGMENT\"] = \"fragment\";\n  MemoryType2[\"MESSAGE\"] = \"message\";\n  MemoryType2[\"DESCRIPTION\"] = \"description\";\n  MemoryType2[\"CUSTOM\"] = \"custom\";\n  return MemoryType2;\n})(MemoryType || {});\nfunction createMessageMemory(params) {\n  return {\n    ...params,\n    createdAt: Date.now(),\n    metadata: {\n      type: \"message\" /* MESSAGE */,\n      timestamp: Date.now(),\n      scope: params.agentId ? \"private\" : \"shared\"\n    }\n  };\n}\nfunction isDocumentMetadata(metadata) {\n  return metadata.type === \"document\" /* DOCUMENT */;\n}\nfunction isFragmentMetadata(metadata) {\n  return metadata.type === \"fragment\" /* FRAGMENT */;\n}\nfunction isMessageMetadata(metadata) {\n  return metadata.type === \"message\" /* MESSAGE */;\n}\nfunction isDescriptionMetadata(metadata) {\n  return metadata.type === \"description\" /* DESCRIPTION */;\n}\nfunction isCustomMetadata(metadata) {\n  return metadata.type !== \"document\" /* DOCUMENT */ && metadata.type !== \"fragment\" /* FRAGMENT */ && metadata.type !== \"message\" /* MESSAGE */ && metadata.type !== \"description\" /* DESCRIPTION */;\n}\nfunction isDocumentMemory(memory) {\n  return memory.metadata?.type === \"document\" /* DOCUMENT */;\n}\nfunction isFragmentMemory(memory) {\n  return memory.metadata?.type === \"fragment\" /* FRAGMENT */;\n}\nfunction getMemoryText(memory, defaultValue = \"\") {\n  return memory.content.text ?? defaultValue;\n}\n\n// src/types/knowledge.ts\nvar KnowledgeScope = /* @__PURE__ */ ((KnowledgeScope2) => {\n  KnowledgeScope2[\"SHARED\"] = \"shared\";\n  KnowledgeScope2[\"PRIVATE\"] = \"private\";\n  return KnowledgeScope2;\n})(KnowledgeScope || {});\nvar CacheKeyPrefix = /* @__PURE__ */ ((CacheKeyPrefix2) => {\n  CacheKeyPrefix2[\"KNOWLEDGE\"] = \"knowledge\";\n  return CacheKeyPrefix2;\n})(CacheKeyPrefix || {});\n\n// src/types/environment.ts\nvar Role = /* @__PURE__ */ ((Role2) => {\n  Role2[\"OWNER\"] = \"OWNER\";\n  Role2[\"ADMIN\"] = \"ADMIN\";\n  Role2[\"NONE\"] = \"NONE\";\n  return Role2;\n})(Role || {});\nvar ChannelType = /* @__PURE__ */ ((ChannelType2) => {\n  ChannelType2[\"SELF\"] = \"SELF\";\n  ChannelType2[\"DM\"] = \"DM\";\n  ChannelType2[\"GROUP\"] = \"GROUP\";\n  ChannelType2[\"VOICE_DM\"] = \"VOICE_DM\";\n  ChannelType2[\"VOICE_GROUP\"] = \"VOICE_GROUP\";\n  ChannelType2[\"FEED\"] = \"FEED\";\n  ChannelType2[\"THREAD\"] = \"THREAD\";\n  ChannelType2[\"WORLD\"] = \"WORLD\";\n  ChannelType2[\"FORUM\"] = \"FORUM\";\n  ChannelType2[\"API\"] = \"API\";\n  return ChannelType2;\n})(ChannelType || {});\n\n// src/types/agent.ts\nvar AgentStatus = /* @__PURE__ */ ((AgentStatus2) => {\n  AgentStatus2[\"ACTIVE\"] = \"active\";\n  AgentStatus2[\"INACTIVE\"] = \"inactive\";\n  return AgentStatus2;\n})(AgentStatus || {});\n\n// src/types/components.ts\nfunction createActionResult(partial = {}) {\n  return {\n    success: true,\n    // Default to success\n    ...partial\n  };\n}\n\n// src/types/service.ts\nvar ServiceType = {\n  TRANSCRIPTION: \"transcription\",\n  VIDEO: \"video\",\n  BROWSER: \"browser\",\n  PDF: \"pdf\",\n  REMOTE_FILES: \"aws_s3\",\n  WEB_SEARCH: \"web_search\",\n  EMAIL: \"email\",\n  TEE: \"tee\",\n  TASK: \"task\",\n  WALLET: \"wallet\",\n  LP_POOL: \"lp_pool\",\n  TOKEN_DATA: \"token_data\",\n  MESSAGE: \"message\",\n  POST: \"post\",\n  UNKNOWN: \"unknown\"\n};\nvar Service = class {\n  constructor(runtime) {\n    if (runtime) {\n      this.runtime = runtime;\n    }\n  }\n  /** Start service connection */\n  static async start(_runtime) {\n    throw new Error(\"Not implemented\");\n  }\n  /** Stop service connection */\n  static async stop(_runtime) {\n    throw new Error(\"Not implemented\");\n  }\n};\nfunction getTypedService(runtime, serviceType) {\n  return runtime.getService(serviceType);\n}\nfunction createServiceError(error, code = \"UNKNOWN_ERROR\") {\n  if (error instanceof Error) {\n    return {\n      code,\n      message: error.message,\n      cause: error\n    };\n  }\n  return {\n    code,\n    message: String(error)\n  };\n}\n\n// src/types/model.ts\nvar ModelType = {\n  SMALL: \"TEXT_SMALL\",\n  // kept for backwards compatibility\n  MEDIUM: \"TEXT_LARGE\",\n  // kept for backwards compatibility\n  LARGE: \"TEXT_LARGE\",\n  // kept for backwards compatibility\n  TEXT_SMALL: \"TEXT_SMALL\",\n  TEXT_LARGE: \"TEXT_LARGE\",\n  TEXT_EMBEDDING: \"TEXT_EMBEDDING\",\n  TEXT_TOKENIZER_ENCODE: \"TEXT_TOKENIZER_ENCODE\",\n  TEXT_TOKENIZER_DECODE: \"TEXT_TOKENIZER_DECODE\",\n  TEXT_REASONING_SMALL: \"REASONING_SMALL\",\n  TEXT_REASONING_LARGE: \"REASONING_LARGE\",\n  TEXT_COMPLETION: \"TEXT_COMPLETION\",\n  IMAGE: \"IMAGE\",\n  IMAGE_DESCRIPTION: \"IMAGE_DESCRIPTION\",\n  TRANSCRIPTION: \"TRANSCRIPTION\",\n  TEXT_TO_SPEECH: \"TEXT_TO_SPEECH\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  OBJECT_SMALL: \"OBJECT_SMALL\",\n  OBJECT_LARGE: \"OBJECT_LARGE\"\n};\nvar MODEL_SETTINGS = {\n  // Default settings - apply to all model types unless overridden\n  DEFAULT_MAX_TOKENS: \"DEFAULT_MAX_TOKENS\",\n  DEFAULT_TEMPERATURE: \"DEFAULT_TEMPERATURE\",\n  DEFAULT_FREQUENCY_PENALTY: \"DEFAULT_FREQUENCY_PENALTY\",\n  DEFAULT_PRESENCE_PENALTY: \"DEFAULT_PRESENCE_PENALTY\",\n  // TEXT_SMALL specific settings\n  TEXT_SMALL_MAX_TOKENS: \"TEXT_SMALL_MAX_TOKENS\",\n  TEXT_SMALL_TEMPERATURE: \"TEXT_SMALL_TEMPERATURE\",\n  TEXT_SMALL_FREQUENCY_PENALTY: \"TEXT_SMALL_FREQUENCY_PENALTY\",\n  TEXT_SMALL_PRESENCE_PENALTY: \"TEXT_SMALL_PRESENCE_PENALTY\",\n  // TEXT_LARGE specific settings\n  TEXT_LARGE_MAX_TOKENS: \"TEXT_LARGE_MAX_TOKENS\",\n  TEXT_LARGE_TEMPERATURE: \"TEXT_LARGE_TEMPERATURE\",\n  TEXT_LARGE_FREQUENCY_PENALTY: \"TEXT_LARGE_FREQUENCY_PENALTY\",\n  TEXT_LARGE_PRESENCE_PENALTY: \"TEXT_LARGE_PRESENCE_PENALTY\",\n  // OBJECT_SMALL specific settings\n  OBJECT_SMALL_MAX_TOKENS: \"OBJECT_SMALL_MAX_TOKENS\",\n  OBJECT_SMALL_TEMPERATURE: \"OBJECT_SMALL_TEMPERATURE\",\n  OBJECT_SMALL_FREQUENCY_PENALTY: \"OBJECT_SMALL_FREQUENCY_PENALTY\",\n  OBJECT_SMALL_PRESENCE_PENALTY: \"OBJECT_SMALL_PRESENCE_PENALTY\",\n  // OBJECT_LARGE specific settings\n  OBJECT_LARGE_MAX_TOKENS: \"OBJECT_LARGE_MAX_TOKENS\",\n  OBJECT_LARGE_TEMPERATURE: \"OBJECT_LARGE_TEMPERATURE\",\n  OBJECT_LARGE_FREQUENCY_PENALTY: \"OBJECT_LARGE_FREQUENCY_PENALTY\",\n  OBJECT_LARGE_PRESENCE_PENALTY: \"OBJECT_LARGE_PRESENCE_PENALTY\",\n  // Legacy keys for backwards compatibility (will be treated as defaults)\n  MODEL_MAX_TOKEN: \"MODEL_MAX_TOKEN\",\n  MODEL_TEMPERATURE: \"MODEL_TEMPERATURE\",\n  MODEL_FREQ_PENALTY: \"MODEL_FREQ_PENALTY\",\n  MODEL_PRESENCE_PENALTY: \"MODEL_PRESENCE_PENALTY\"\n};\nfunction getModelSpecificSettingKey(modelType, param) {\n  const supportedModelTypes = [\"TEXT_SMALL\", \"TEXT_LARGE\", \"OBJECT_SMALL\", \"OBJECT_LARGE\"];\n  if (!supportedModelTypes.includes(modelType)) {\n    return null;\n  }\n  return `${modelType}_${param}`;\n}\n\n// src/types/database.ts\nvar VECTOR_DIMS = {\n  SMALL: 384,\n  MEDIUM: 512,\n  LARGE: 768,\n  XL: 1024,\n  XXL: 1536,\n  XXXL: 3072\n};\n\n// src/types/events.ts\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[\"WORLD_JOINED\"] = \"WORLD_JOINED\";\n  EventType2[\"WORLD_CONNECTED\"] = \"WORLD_CONNECTED\";\n  EventType2[\"WORLD_LEFT\"] = \"WORLD_LEFT\";\n  EventType2[\"ENTITY_JOINED\"] = \"ENTITY_JOINED\";\n  EventType2[\"ENTITY_LEFT\"] = \"ENTITY_LEFT\";\n  EventType2[\"ENTITY_UPDATED\"] = \"ENTITY_UPDATED\";\n  EventType2[\"ROOM_JOINED\"] = \"ROOM_JOINED\";\n  EventType2[\"ROOM_LEFT\"] = \"ROOM_LEFT\";\n  EventType2[\"MESSAGE_RECEIVED\"] = \"MESSAGE_RECEIVED\";\n  EventType2[\"MESSAGE_SENT\"] = \"MESSAGE_SENT\";\n  EventType2[\"MESSAGE_DELETED\"] = \"MESSAGE_DELETED\";\n  EventType2[\"CHANNEL_CLEARED\"] = \"CHANNEL_CLEARED\";\n  EventType2[\"VOICE_MESSAGE_RECEIVED\"] = \"VOICE_MESSAGE_RECEIVED\";\n  EventType2[\"VOICE_MESSAGE_SENT\"] = \"VOICE_MESSAGE_SENT\";\n  EventType2[\"REACTION_RECEIVED\"] = \"REACTION_RECEIVED\";\n  EventType2[\"POST_GENERATED\"] = \"POST_GENERATED\";\n  EventType2[\"INTERACTION_RECEIVED\"] = \"INTERACTION_RECEIVED\";\n  EventType2[\"RUN_STARTED\"] = \"RUN_STARTED\";\n  EventType2[\"RUN_ENDED\"] = \"RUN_ENDED\";\n  EventType2[\"RUN_TIMEOUT\"] = \"RUN_TIMEOUT\";\n  EventType2[\"ACTION_STARTED\"] = \"ACTION_STARTED\";\n  EventType2[\"ACTION_COMPLETED\"] = \"ACTION_COMPLETED\";\n  EventType2[\"EVALUATOR_STARTED\"] = \"EVALUATOR_STARTED\";\n  EventType2[\"EVALUATOR_COMPLETED\"] = \"EVALUATOR_COMPLETED\";\n  EventType2[\"MODEL_USED\"] = \"MODEL_USED\";\n  return EventType2;\n})(EventType || {});\nvar PlatformPrefix = /* @__PURE__ */ ((PlatformPrefix2) => {\n  PlatformPrefix2[\"DISCORD\"] = \"DISCORD\";\n  PlatformPrefix2[\"TELEGRAM\"] = \"TELEGRAM\";\n  PlatformPrefix2[\"TWITTER\"] = \"TWITTER\";\n  return PlatformPrefix2;\n})(PlatformPrefix || {});\n\n// src/types/tee.ts\nvar TEEMode = /* @__PURE__ */ ((TEEMode2) => {\n  TEEMode2[\"OFF\"] = \"OFF\";\n  TEEMode2[\"LOCAL\"] = \"LOCAL\";\n  TEEMode2[\"DOCKER\"] = \"DOCKER\";\n  TEEMode2[\"PRODUCTION\"] = \"PRODUCTION\";\n  return TEEMode2;\n})(TEEMode || {});\nvar TeeType = /* @__PURE__ */ ((TeeType2) => {\n  TeeType2[\"TDX_DSTACK\"] = \"tdx_dstack\";\n  return TeeType2;\n})(TeeType || {});\n\n// src/types/token.ts\nvar ITokenDataService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Provides standardized access to token market data.\";\n  }\n  static {\n    this.serviceType = ServiceType.TOKEN_DATA;\n  }\n  // Future potential methods:\n  // getHistoricalPriceData(address: string, chain: string, timeFrame: string): Promise<any[]>;\n  // getTokenMarketChart(address: string, chain: string, days: number): Promise<any[]>;\n};\n\n// src/types/messaging.ts\nvar SOCKET_MESSAGE_TYPE = /* @__PURE__ */ ((SOCKET_MESSAGE_TYPE2) => {\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"ROOM_JOINING\"] = 1] = \"ROOM_JOINING\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"SEND_MESSAGE\"] = 2] = \"SEND_MESSAGE\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"MESSAGE\"] = 3] = \"MESSAGE\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"ACK\"] = 4] = \"ACK\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"THINKING\"] = 5] = \"THINKING\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"CONTROL\"] = 6] = \"CONTROL\";\n  return SOCKET_MESSAGE_TYPE2;\n})(SOCKET_MESSAGE_TYPE || {});\n\n// src/types/wallet.ts\nvar IWalletService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Provides standardized access to wallet balances and portfolios.\";\n  }\n  static {\n    this.serviceType = ServiceType.WALLET;\n  }\n};\n\n// src/types/lp.ts\nvar ILpService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Provides standardized access to DEX liquidity pools.\";\n  }\n  static {\n    this.serviceType = \"lp\";\n  }\n};\n\n// src/types/pdf.ts\nvar IPdfService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"PDF processing, extraction, and generation capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.PDF;\n  }\n};\n\n// src/types/video.ts\nvar IVideoService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Video download, processing, and conversion capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.VIDEO;\n  }\n};\n\n// src/types/browser.ts\nvar IBrowserService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Web browser automation and scraping capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.BROWSER;\n  }\n};\n\n// src/types/transcription.ts\nvar ITranscriptionService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Audio transcription and speech processing capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.TRANSCRIPTION;\n  }\n};\n\n// src/types/web-search.ts\nvar IWebSearchService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Web search and content discovery capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.WEB_SEARCH;\n  }\n};\n\n// src/types/email.ts\nvar IEmailService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Email sending, receiving, and management capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.EMAIL;\n  }\n};\n\n// src/types/message.ts\nvar IMessageService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Message sending, receiving, and management capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.MESSAGE;\n  }\n};\n\n// src/types/post.ts\nvar IPostService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Social media posting and content management capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.POST;\n  }\n};\n\n// src/utils.ts\nimport handlebars from \"handlebars\";\nimport { sha1 } from \"js-sha1\";\nimport { RecursiveCharacterTextSplitter } from \"langchain/text_splitter\";\nimport { names, uniqueNamesGenerator } from \"unique-names-generator\";\nimport { z } from \"zod\";\n\n// src/logger.ts\nimport pino from \"pino\";\n\n// src/sentry/instrument.ts\nimport * as Sentry from \"@sentry/browser\";\nvar dsn = process.env.SENTRY_DSN || \"https://c20e2d51b66c14a783b0689d536f7e5c@o4509349865259008.ingest.us.sentry.io/4509352524120064\";\nif (process.env.SENTRY_LOGGING !== \"false\") {\n  Sentry.onLoad(() => {\n    Sentry.init({\n      dsn,\n      environment: process.env.SENTRY_ENVIRONMENT || process.env.NODE_ENV,\n      tracesSampleRate: parseFloat(process.env.SENTRY_TRACES_SAMPLE_RATE ?? \"\") || 1,\n      sendDefaultPii: process.env.SENTRY_SEND_DEFAULT_PII === \"true\"\n    });\n  });\n}\n\n// src/logger.ts\nfunction parseBooleanFromText(value) {\n  if (!value) return false;\n  const normalized = value.toLowerCase().trim();\n  return normalized === \"true\" || normalized === \"1\" || normalized === \"yes\" || normalized === \"on\";\n}\nvar InMemoryDestination = class {\n  /**\n   * Constructor for creating a new instance of the class.\n   * @param {DestinationStream|null} stream - The stream to assign to the instance. Can be null.\n   */\n  constructor(stream) {\n    this.logs = [];\n    this.maxLogs = 1e3;\n    this.stream = stream;\n  }\n  /**\n   * Writes a log entry to the memory buffer and forwards it to the pretty print stream if available.\n   *\n   * @param {string | LogEntry} data - The data to be written, which can be either a string or a LogEntry object.\n   * @returns {void}\n   */\n  write(data) {\n    let logEntry;\n    let stringData;\n    if (typeof data === \"string\") {\n      stringData = data;\n      try {\n        logEntry = JSON.parse(data);\n      } catch (e) {\n        if (this.stream) {\n          this.stream.write(data);\n        }\n        return;\n      }\n    } else {\n      logEntry = data;\n      stringData = JSON.stringify(data);\n    }\n    if (!logEntry.time) {\n      logEntry.time = Date.now();\n    }\n    const isDebugMode2 = (process?.env?.LOG_LEVEL || \"\").toLowerCase() === \"debug\";\n    const isLoggingDiagnostic = Boolean(process?.env?.LOG_DIAGNOSTIC);\n    if (isLoggingDiagnostic) {\n      logEntry.diagnostic = true;\n    }\n    if (!isDebugMode2) {\n      if (logEntry.agentName && logEntry.agentId) {\n        const msg = logEntry.msg || \"\";\n        if (typeof msg === \"string\" && (msg.includes(\"registered successfully\") || msg.includes(\"Registering\") || msg.includes(\"Success:\") || msg.includes(\"linked to\") || msg.includes(\"Started\"))) {\n          if (isLoggingDiagnostic) {\n            console.error(\"Filtered log:\", stringData);\n          }\n          return;\n        }\n      }\n    }\n    this.logs.push(logEntry);\n    if (this.logs.length > this.maxLogs) {\n      this.logs.shift();\n    }\n    if (this.stream) {\n      this.stream.write(stringData);\n    }\n  }\n  /**\n   * Retrieves the recent logs from the system.\n   *\n   * @returns {LogEntry[]} An array of LogEntry objects representing the recent logs.\n   */\n  recentLogs() {\n    return this.logs;\n  }\n  /**\n   * Clears all logs from memory.\n   *\n   * @returns {void}\n   */\n  clear() {\n    this.logs = [];\n  }\n};\nvar customLevels = {\n  fatal: 60,\n  error: 50,\n  warn: 40,\n  info: 30,\n  log: 29,\n  progress: 28,\n  success: 27,\n  debug: 20,\n  trace: 10\n};\nvar raw = parseBooleanFromText(process?.env?.LOG_JSON_FORMAT) || false;\nvar isDebugMode = (process?.env?.LOG_LEVEL || \"\").toLowerCase() === \"debug\";\nvar effectiveLogLevel = isDebugMode ? \"debug\" : process?.env?.DEFAULT_LOG_LEVEL || \"info\";\nvar showTimestamps = process?.env?.LOG_TIMESTAMPS !== void 0 ? parseBooleanFromText(process?.env?.LOG_TIMESTAMPS) : true;\nvar createPrettyConfig = () => ({\n  colorize: true,\n  translateTime: showTimestamps ? \"yyyy-mm-dd HH:MM:ss\" : false,\n  ignore: showTimestamps ? \"pid,hostname\" : \"pid,hostname,time\",\n  levelColors: {\n    60: \"red\",\n    // fatal\n    50: \"red\",\n    // error\n    40: \"yellow\",\n    // warn\n    30: \"blue\",\n    // info\n    29: \"green\",\n    // log\n    28: \"cyan\",\n    // progress\n    27: \"greenBright\",\n    // success\n    20: \"magenta\",\n    // debug\n    10: \"grey\",\n    // trace\n    \"*\": \"white\"\n    // default for any unspecified level\n  },\n  customPrettifiers: {\n    level: (inputData) => {\n      let level;\n      if (typeof inputData === \"object\" && inputData !== null) {\n        level = inputData.level || inputData.value;\n      } else {\n        level = inputData;\n      }\n      const levelNames = {\n        10: \"TRACE\",\n        20: \"DEBUG\",\n        27: \"SUCCESS\",\n        28: \"PROGRESS\",\n        29: \"LOG\",\n        30: \"INFO\",\n        40: \"WARN\",\n        50: \"ERROR\",\n        60: \"FATAL\"\n      };\n      if (typeof level === \"number\") {\n        return levelNames[level] || `LEVEL${level}`;\n      }\n      if (level === void 0 || level === null) {\n        return \"UNKNOWN\";\n      }\n      return String(level).toUpperCase();\n    },\n    // Add a custom prettifier for error messages\n    msg: (msg) => {\n      return msg.replace(/ERROR \\([^)]+\\):/g, \"ERROR:\");\n    }\n  },\n  messageFormat: \"{msg}\"\n});\nvar createStream = async () => {\n  if (raw) {\n    return void 0;\n  }\n  const pretty = await import(\"pino-pretty\");\n  return pretty.default(createPrettyConfig());\n};\nvar options = {\n  level: effectiveLogLevel,\n  // Use more restrictive level unless in debug mode\n  customLevels,\n  hooks: {\n    logMethod(inputArgs, method) {\n      const [arg1, ...rest] = inputArgs;\n      if (process.env.SENTRY_LOGGING !== \"false\") {\n        if (arg1 instanceof Error) {\n          Sentry.captureException(arg1);\n        } else {\n          for (const item of rest) {\n            if (item instanceof Error) {\n              Sentry.captureException(item);\n            }\n          }\n        }\n      }\n      const formatError = (err) => ({\n        message: `(${err.name}) ${err.message}`,\n        stack: err.stack?.split(\"\\n\").map((line) => line.trim())\n      });\n      if (typeof arg1 === \"object\") {\n        if (arg1 instanceof Error) {\n          method.apply(this, [\n            {\n              error: formatError(arg1)\n            }\n          ]);\n        } else {\n          const messageParts = rest.map(\n            (arg) => typeof arg === \"string\" ? arg : JSON.stringify(arg)\n          );\n          const message = messageParts.join(\" \");\n          method.apply(this, [arg1, message]);\n        }\n      } else {\n        const context = {};\n        const messageParts = [arg1, ...rest].map((arg) => {\n          if (arg instanceof Error) {\n            return formatError(arg);\n          }\n          return typeof arg === \"string\" ? arg : arg;\n        });\n        const message = messageParts.filter((part) => typeof part === \"string\").join(\" \");\n        const jsonParts = messageParts.filter((part) => typeof part === \"object\");\n        Object.assign(context, ...jsonParts);\n        method.apply(this, [context, message]);\n      }\n    }\n  }\n};\nvar createLogger = (bindings = false) => {\n  const opts = { ...options };\n  if (bindings) {\n    opts.base = bindings;\n    opts.transport = {\n      target: \"pino-pretty\",\n      // this is just a string, not a dynamic import\n      options: {\n        colorize: true,\n        translateTime: showTimestamps ? \"SYS:standard\" : false,\n        ignore: showTimestamps ? \"pid,hostname\" : \"pid,hostname,time\"\n      }\n    };\n  }\n  const logger2 = pino(opts);\n  return logger2;\n};\nvar logger = pino(options);\nif (typeof process !== \"undefined\") {\n  let stream = null;\n  if (!raw) {\n    try {\n      const pretty = __require(\"pino-pretty\");\n      stream = pretty.default ? pretty.default(createPrettyConfig()) : null;\n    } catch (e) {\n      createStream().then((prettyStream) => {\n        const destination = new InMemoryDestination(prettyStream);\n        logger = pino(options, destination);\n        logger[Symbol.for(\"pino-destination\")] = destination;\n        logger.clear = () => {\n          const destination2 = logger[Symbol.for(\"pino-destination\")];\n          if (destination2 instanceof InMemoryDestination) {\n            destination2.clear();\n          }\n        };\n      });\n    }\n  }\n  if (stream !== null || raw) {\n    const destination = new InMemoryDestination(stream);\n    logger = pino(options, destination);\n    logger[Symbol.for(\"pino-destination\")] = destination;\n    logger.clear = () => {\n      const destination2 = logger[Symbol.for(\"pino-destination\")];\n      if (destination2 instanceof InMemoryDestination) {\n        destination2.clear();\n      }\n    };\n  }\n}\nvar elizaLogger = logger;\nvar logger_default = logger;\n\n// src/utils.ts\nfunction upgradeDoubleToTriple(tpl) {\n  return tpl.replace(\n    // ────────╮ negative-LB: not already \"{{{\"\n    //          │   {{     ─ opening braces\n    //          │    ╰──── negative-LA: not {, #, /, !, >\n    //          ▼\n    /(?<!{){{(?![{#\\/!>])([\\s\\S]*?)}}/g,\n    (_match, inner) => {\n      if (inner.trim() === \"else\") return `{{${inner}}}`;\n      return `{{{${inner}}}}`;\n    }\n  );\n}\nvar composePrompt = ({\n  state,\n  template\n}) => {\n  const templateStr = typeof template === \"function\" ? template({ state }) : template;\n  const templateFunction = handlebars.compile(upgradeDoubleToTriple(templateStr));\n  const output = composeRandomUser(templateFunction(state), 10);\n  return output;\n};\nvar composePromptFromState = ({\n  state,\n  template\n}) => {\n  const templateStr = typeof template === \"function\" ? template({ state }) : template;\n  const templateFunction = handlebars.compile(upgradeDoubleToTriple(templateStr));\n  const stateKeys = Object.keys(state);\n  const filteredKeys = stateKeys.filter((key) => ![\"text\", \"values\", \"data\"].includes(key));\n  const filteredState = filteredKeys.reduce((acc, key) => {\n    acc[key] = state[key];\n    return acc;\n  }, {});\n  const output = composeRandomUser(templateFunction({ ...filteredState, ...state.values }), 10);\n  return output;\n};\nvar addHeader = (header, body) => {\n  return body.length > 0 ? `${header ? `${header}\n` : header}${body}\n` : \"\";\n};\nvar composeRandomUser = (template, length) => {\n  const exampleNames = Array.from(\n    { length },\n    () => uniqueNamesGenerator({ dictionaries: [names] })\n  );\n  let result = template;\n  for (let i = 0; i < exampleNames.length; i++) {\n    result = result.replaceAll(`{{name${i + 1}}}`, exampleNames[i]);\n  }\n  return result;\n};\nvar formatPosts = ({\n  messages,\n  entities,\n  conversationHeader = true\n}) => {\n  const groupedMessages = {};\n  messages.forEach((message) => {\n    if (message.roomId) {\n      if (!groupedMessages[message.roomId]) {\n        groupedMessages[message.roomId] = [];\n      }\n      groupedMessages[message.roomId].push(message);\n    }\n  });\n  Object.values(groupedMessages).forEach((roomMessages) => {\n    roomMessages.sort((a, b) => a.createdAt - b.createdAt);\n  });\n  const sortedRooms = Object.entries(groupedMessages).sort(\n    ([, messagesA], [, messagesB]) => messagesB[messagesB.length - 1].createdAt - messagesA[messagesA.length - 1].createdAt\n  );\n  const formattedPosts = sortedRooms.map(([roomId, roomMessages]) => {\n    const messageStrings = roomMessages.filter((message) => message.entityId).map((message) => {\n      const entity = entities.find((entity2) => entity2.id === message.entityId);\n      if (!entity) {\n        logger_default.warn({ entityId: message.entityId }, \"core::prompts:formatPosts - no entity for\");\n      }\n      const userName = entity?.names[0] || \"Unknown User\";\n      const displayName = entity?.names[0] || \"unknown\";\n      return `Name: ${userName} (@${displayName} EntityID:${message.entityId})\nMessageID: ${message.id}${message.content.inReplyTo ? `\nIn reply to: ${message.content.inReplyTo}` : \"\"}\nSource: ${message.content.source}\nDate: ${formatTimestamp(message.createdAt)}\nText:\n${message.content.text}`;\n    });\n    const header = conversationHeader ? `Conversation: ${roomId.slice(-5)}\n` : \"\";\n    return `${header}${messageStrings.join(\"\\n\\n\")}`;\n  });\n  return formattedPosts.join(\"\\n\\n\");\n};\nvar formatMessages = ({\n  messages,\n  entities\n}) => {\n  const messageStrings = messages.reverse().filter((message) => message.entityId).map((message) => {\n    const messageText = message.content.text;\n    const messageActions = message.content.actions;\n    const messageThought = message.content.thought;\n    const formattedName = entities.find((entity) => entity.id === message.entityId)?.names[0] || \"Unknown User\";\n    const attachments = message.content.attachments;\n    const attachmentString = attachments && attachments.length > 0 ? ` (Attachments: ${attachments.map((media) => {\n      const lines = [`[${media.id} - ${media.title} (${media.url})]`];\n      if (media.text) lines.push(`Text: ${media.text}`);\n      if (media.description) lines.push(`Description: ${media.description}`);\n      return lines.join(\"\\n\");\n    }).join(\n      // Use comma separator only if all attachments are single-line (no text/description)\n      attachments.every((media) => !media.text && !media.description) ? \", \" : \"\\n\"\n    )})` : null;\n    const messageTime = new Date(message.createdAt);\n    const hours = messageTime.getHours().toString().padStart(2, \"0\");\n    const minutes = messageTime.getMinutes().toString().padStart(2, \"0\");\n    const timeString = `${hours}:${minutes}`;\n    const timestamp = formatTimestamp(message.createdAt);\n    const thoughtString = messageThought ? `(${formattedName}'s internal thought: ${messageThought})` : null;\n    const timestampString = `${timeString} (${timestamp}) [${message.entityId}]`;\n    const textString = messageText ? `${timestampString} ${formattedName}: ${messageText}` : null;\n    const actionString = messageActions && messageActions.length > 0 ? `${textString ? \"\" : timestampString} (${formattedName}'s actions: ${messageActions.join(\", \")})` : null;\n    const messageString = [textString, thoughtString, actionString, attachmentString].filter(Boolean).join(\"\\n\");\n    return messageString;\n  }).join(\"\\n\");\n  return messageStrings;\n};\nvar formatTimestamp = (messageDate) => {\n  const now = /* @__PURE__ */ new Date();\n  const diff = now.getTime() - messageDate;\n  const absDiff = Math.abs(diff);\n  const seconds = Math.floor(absDiff / 1e3);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  if (absDiff < 6e4) {\n    return \"just now\";\n  }\n  if (minutes < 60) {\n    return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} ago`;\n  }\n  if (hours < 24) {\n    return `${hours} hour${hours !== 1 ? \"s\" : \"\"} ago`;\n  }\n  return `${days} day${days !== 1 ? \"s\" : \"\"} ago`;\n};\nvar jsonBlockPattern = /```json\\n([\\s\\S]*?)\\n```/;\nfunction parseKeyValueXml(text) {\n  if (!text) return null;\n  let xmlBlockMatch = text.match(/<response>([\\s\\S]*?)<\\/response>/);\n  let xmlContent;\n  if (xmlBlockMatch) {\n    xmlContent = xmlBlockMatch[1];\n    logger_default.debug(\"Found response XML block\");\n  } else {\n    const findFirstXmlBlock = (input) => {\n      let i = 0;\n      const length = input.length;\n      while (i < length) {\n        const openIdx = input.indexOf(\"<\", i);\n        if (openIdx === -1) break;\n        if (input.startsWith(\"</\", openIdx) || input.startsWith(\"<!--\", openIdx) || input.startsWith(\"<?\", openIdx)) {\n          i = openIdx + 1;\n          continue;\n        }\n        let j = openIdx + 1;\n        let tag = \"\";\n        while (j < length) {\n          const ch = input[j];\n          if (/^[A-Za-z0-9_-]$/.test(ch)) {\n            tag += ch;\n            j++;\n            continue;\n          }\n          break;\n        }\n        if (!tag) {\n          i = openIdx + 1;\n          continue;\n        }\n        const startTagEnd = input.indexOf(\">\", j);\n        if (startTagEnd === -1) break;\n        const startTagText = input.slice(openIdx, startTagEnd + 1);\n        if (/\\/\\s*>$/.test(startTagText)) {\n          i = startTagEnd + 1;\n          continue;\n        }\n        const closeSeq = `</${tag}>`;\n        let depth = 1;\n        let searchStart = startTagEnd + 1;\n        while (depth > 0 && searchStart < length) {\n          const nextOpen = input.indexOf(`<${tag}`, searchStart);\n          const nextClose = input.indexOf(closeSeq, searchStart);\n          if (nextClose === -1) {\n            break;\n          }\n          if (nextOpen !== -1 && nextOpen < nextClose) {\n            const nestedStartEnd = input.indexOf(\">\", nextOpen + 1);\n            if (nestedStartEnd === -1) {\n              break;\n            }\n            const nestedStartText = input.slice(nextOpen, nestedStartEnd + 1);\n            if (/\\/\\s*>$/.test(nestedStartText)) {\n              searchStart = nestedStartEnd + 1;\n            } else {\n              depth++;\n              searchStart = nestedStartEnd + 1;\n            }\n          } else {\n            depth--;\n            searchStart = nextClose + closeSeq.length;\n          }\n        }\n        if (depth === 0) {\n          const closeIdx = searchStart - closeSeq.length;\n          const inner = input.slice(startTagEnd + 1, closeIdx);\n          return { tag, content: inner };\n        }\n        i = startTagEnd + 1;\n      }\n      return null;\n    };\n    const fb = findFirstXmlBlock(text);\n    if (!fb) {\n      logger_default.warn(\"Could not find XML block in text\");\n      logger_default.debug({ textPreview: text.substring(0, 200) + \"...\" }, \"Text content\");\n      return null;\n    }\n    xmlContent = fb.content;\n    logger_default.debug(`Found XML block with tag: ${fb.tag}`);\n  }\n  const result = {};\n  const extractDirectChildren = (input) => {\n    const pairs = [];\n    const length = input.length;\n    let i = 0;\n    while (i < length) {\n      const openIdx = input.indexOf(\"<\", i);\n      if (openIdx === -1) break;\n      if (input.startsWith(\"</\", openIdx) || input.startsWith(\"<!--\", openIdx) || input.startsWith(\"<?\", openIdx)) {\n        i = openIdx + 1;\n        continue;\n      }\n      let j = openIdx + 1;\n      let tag = \"\";\n      while (j < length) {\n        const ch = input[j];\n        if (/^[A-Za-z0-9_-]$/.test(ch)) {\n          tag += ch;\n          j++;\n          continue;\n        }\n        break;\n      }\n      if (!tag) {\n        i = openIdx + 1;\n        continue;\n      }\n      const startTagEnd = input.indexOf(\">\", j);\n      if (startTagEnd === -1) break;\n      const startTagText = input.slice(openIdx, startTagEnd + 1);\n      if (/\\/\\s*>$/.test(startTagText)) {\n        i = startTagEnd + 1;\n        continue;\n      }\n      const closeSeq = `</${tag}>`;\n      let depth = 1;\n      let searchStart = startTagEnd + 1;\n      while (depth > 0 && searchStart < length) {\n        const nextOpen = input.indexOf(`<${tag}`, searchStart);\n        const nextClose = input.indexOf(closeSeq, searchStart);\n        if (nextClose === -1) {\n          break;\n        }\n        if (nextOpen !== -1 && nextOpen < nextClose) {\n          const nestedStartEnd = input.indexOf(\">\", nextOpen + 1);\n          if (nestedStartEnd === -1) {\n            break;\n          }\n          const nestedStartText = input.slice(nextOpen, nestedStartEnd + 1);\n          if (!/\\/\\s*>$/.test(nestedStartText)) {\n            depth++;\n          }\n          searchStart = nestedStartEnd + 1;\n        } else {\n          depth--;\n          searchStart = nextClose + closeSeq.length;\n        }\n      }\n      if (depth !== 0) {\n        i = startTagEnd + 1;\n        continue;\n      }\n      const closeIdx = searchStart - closeSeq.length;\n      const innerRaw = input.slice(startTagEnd + 1, closeIdx);\n      const unescaped = innerRaw.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&amp;/g, \"&\").replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").trim();\n      pairs.push({ key: tag, value: unescaped });\n      i = searchStart;\n    }\n    return pairs;\n  };\n  const children = extractDirectChildren(xmlContent);\n  for (const { key, value } of children) {\n    if (key === \"actions\" || key === \"providers\" || key === \"evaluators\") {\n      result[key] = value ? value.split(\",\").map((s) => s.trim()) : [];\n    } else if (key === \"simple\") {\n      result[key] = value.toLowerCase() === \"true\";\n    } else {\n      result[key] = value;\n    }\n  }\n  if (Object.keys(result).length === 0) {\n    logger_default.warn(\"No key-value pairs extracted from XML content\");\n    logger_default.debug({ xmlPreview: xmlContent.substring(0, 200) + \"...\" }, \"XML content was\");\n    return null;\n  }\n  return result;\n}\nfunction parseJSONObjectFromText(text) {\n  let jsonData = null;\n  const jsonBlockMatch = text.match(jsonBlockPattern);\n  try {\n    if (jsonBlockMatch) {\n      jsonData = JSON.parse(normalizeJsonString(jsonBlockMatch[1].trim()));\n    } else {\n      jsonData = JSON.parse(normalizeJsonString(text.trim()));\n    }\n  } catch (_e) {\n    return null;\n  }\n  if (jsonData && typeof jsonData === \"object\" && !Array.isArray(jsonData)) {\n    return jsonData;\n  }\n  return null;\n}\nvar normalizeJsonString = (str) => {\n  str = str.replace(/\\{\\s+/, \"{\").replace(/\\s+\\}/, \"}\").trim();\n  str = str.replace(/(\"[\\w\\d_-]+\")\\s*: \\s*(?!\"|\\[)([\\s\\S]+?)(?=(,\\s*\"|\\}$))/g, '$1: \"$2\"');\n  str = str.replace(/\"([^\"]+)\"\\s*:\\s*'([^']*)'/g, (_, key, value) => `\"${key}\": \"${value}\"`);\n  str = str.replace(/(\"[\\w\\d_-]+\")\\s*:\\s*([A-Za-z_]+)(?![\"\\w])/g, '$1: \"$2\"');\n  return str;\n};\nfunction truncateToCompleteSentence(text, maxLength) {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const lastPeriodIndex = text.lastIndexOf(\".\", maxLength - 1);\n  if (lastPeriodIndex !== -1) {\n    const truncatedAtPeriod = text.slice(0, lastPeriodIndex + 1).trim();\n    if (truncatedAtPeriod.length > 0) {\n      return truncatedAtPeriod;\n    }\n  }\n  const lastSpaceIndex = text.lastIndexOf(\" \", maxLength - 1);\n  if (lastSpaceIndex !== -1) {\n    const truncatedAtSpace = text.slice(0, lastSpaceIndex).trim();\n    if (truncatedAtSpace.length > 0) {\n      return `${truncatedAtSpace}...`;\n    }\n  }\n  const hardTruncated = text.slice(0, maxLength - 3).trim();\n  return `${hardTruncated}...`;\n}\nasync function splitChunks(content, chunkSize = 512, bleed = 20) {\n  logger_default.debug(\"[splitChunks] Starting text split\");\n  const characterstoTokens = 3.5;\n  const textSplitter = new RecursiveCharacterTextSplitter({\n    chunkSize: Number(Math.floor(chunkSize * characterstoTokens)),\n    chunkOverlap: Number(Math.floor(bleed * characterstoTokens))\n  });\n  const chunks = await textSplitter.splitText(content);\n  logger_default.debug(\n    {\n      numberOfChunks: chunks.length,\n      averageChunkSize: chunks.reduce((acc, chunk) => acc + chunk.length, 0) / chunks.length\n    },\n    \"[splitChunks] Split complete\"\n  );\n  return chunks;\n}\nasync function trimTokens(prompt, maxTokens, runtime) {\n  if (!prompt) throw new Error(\"Trim tokens received a null prompt\");\n  if (prompt.length < maxTokens / 5) return prompt;\n  if (maxTokens <= 0) throw new Error(\"maxTokens must be positive\");\n  const tokens = await runtime.useModel(ModelType.TEXT_TOKENIZER_ENCODE, {\n    prompt\n  });\n  if (tokens.length <= maxTokens) {\n    return prompt;\n  }\n  const truncatedTokens = tokens.slice(-maxTokens);\n  return await runtime.useModel(ModelType.TEXT_TOKENIZER_DECODE, {\n    tokens: truncatedTokens\n  });\n}\nfunction safeReplacer() {\n  const seen = /* @__PURE__ */ new WeakSet();\n  return function(_key, value) {\n    if (typeof value === \"object\" && value !== null) {\n      if (seen.has(value)) {\n        return \"[Circular]\";\n      }\n      seen.add(value);\n    }\n    return value;\n  };\n}\nfunction parseBooleanFromText2(value) {\n  if (!value) return false;\n  const affirmative = [\"YES\", \"Y\", \"TRUE\", \"T\", \"1\", \"ON\", \"ENABLE\"];\n  const negative = [\"NO\", \"N\", \"FALSE\", \"F\", \"0\", \"OFF\", \"DISABLE\"];\n  const normalizedText = value.trim().toUpperCase();\n  if (affirmative.includes(normalizedText)) {\n    return true;\n  }\n  if (negative.includes(normalizedText)) {\n    return false;\n  }\n  return false;\n}\nvar uuidSchema = z.string().uuid();\nfunction validateUuid(value) {\n  const result = uuidSchema.safeParse(value);\n  return result.success ? result.data : null;\n}\nfunction stringToUuid(target) {\n  if (typeof target === \"number\") {\n    target = target.toString();\n  }\n  if (typeof target !== \"string\") {\n    throw TypeError(\"Value must be string\");\n  }\n  const _uint8ToHex = (ubyte) => {\n    const first = ubyte >> 4;\n    const second = ubyte - (first << 4);\n    const HEX_DIGITS = \"0123456789abcdef\".split(\"\");\n    return HEX_DIGITS[first] + HEX_DIGITS[second];\n  };\n  const _uint8ArrayToHex = (buf) => {\n    let out = \"\";\n    for (let i = 0; i < buf.length; i++) {\n      out += _uint8ToHex(buf[i]);\n    }\n    return out;\n  };\n  const escapedStr = encodeURIComponent(target);\n  const buffer = new Uint8Array(escapedStr.length);\n  for (let i = 0; i < escapedStr.length; i++) {\n    buffer[i] = escapedStr[i].charCodeAt(0);\n  }\n  const hash = sha1(buffer);\n  const hashBuffer = new Uint8Array(hash.length / 2);\n  for (let i = 0; i < hash.length; i += 2) {\n    hashBuffer[i / 2] = Number.parseInt(hash.slice(i, i + 2), 16);\n  }\n  return `${_uint8ArrayToHex(hashBuffer.slice(0, 4))}-${_uint8ArrayToHex(hashBuffer.slice(4, 6))}-${_uint8ToHex(hashBuffer[6] & 15)}${_uint8ToHex(hashBuffer[7])}-${_uint8ToHex(hashBuffer[8] & 63 | 128)}${_uint8ToHex(hashBuffer[9])}-${_uint8ArrayToHex(hashBuffer.slice(10, 16))}`;\n}\nvar getContentTypeFromMimeType = (mimeType) => {\n  if (mimeType.startsWith(\"image/\")) return \"image\" /* IMAGE */;\n  if (mimeType.startsWith(\"video/\")) return \"video\" /* VIDEO */;\n  if (mimeType.startsWith(\"audio/\")) return \"audio\" /* AUDIO */;\n  if (mimeType.includes(\"pdf\") || mimeType.includes(\"document\") || mimeType.startsWith(\"text/\")) {\n    return \"document\" /* DOCUMENT */;\n  }\n  return void 0;\n};\nfunction getLocalServerUrl(path) {\n  const port = process.env.SERVER_PORT || \"3000\";\n  return `http://localhost:${port}${path}`;\n}\n\n// src/schemas/character.ts\nimport { z as z2 } from \"zod\";\nvar uuidSchema2 = z2.string().regex(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i, \"Invalid UUID format\");\nvar contentSchema = z2.object({\n  text: z2.string().optional(),\n  thought: z2.string().optional(),\n  actions: z2.array(z2.string()).optional(),\n  providers: z2.array(z2.string()).optional(),\n  source: z2.string().optional(),\n  target: z2.string().optional(),\n  url: z2.string().optional(),\n  inReplyTo: uuidSchema2.optional(),\n  attachments: z2.array(z2.any()).optional(),\n  channelType: z2.string().optional()\n}).passthrough();\nvar messageExampleSchema = z2.object({\n  name: z2.string(),\n  content: contentSchema\n});\nvar directoryItemSchema = z2.object({\n  directory: z2.string(),\n  shared: z2.boolean().optional()\n});\nvar knowledgeItemSchema = z2.union([\n  z2.string(),\n  z2.object({\n    path: z2.string(),\n    shared: z2.boolean().optional()\n  }),\n  directoryItemSchema\n]);\nvar templateTypeSchema = z2.union([\n  z2.string(),\n  z2.function().optional()\n  // Functions won't be in JSON but allowed in runtime\n]);\nvar styleSchema = z2.object({\n  all: z2.array(z2.string()).optional(),\n  chat: z2.array(z2.string()).optional(),\n  post: z2.array(z2.string()).optional()\n}).optional();\nvar settingsSchema = z2.record(z2.union([z2.string(), z2.boolean(), z2.number(), z2.any()])).optional();\nvar secretsSchema = z2.record(z2.union([z2.string(), z2.boolean(), z2.number()])).optional();\nvar characterSchema = z2.object({\n  id: uuidSchema2.optional(),\n  name: z2.string().min(1, \"Character name is required\"),\n  username: z2.string().optional(),\n  system: z2.string().optional(),\n  templates: z2.record(templateTypeSchema).optional(),\n  bio: z2.union([z2.string(), z2.array(z2.string())]),\n  messageExamples: z2.array(z2.array(messageExampleSchema)).optional(),\n  postExamples: z2.array(z2.string()).optional(),\n  topics: z2.array(z2.string()).optional(),\n  adjectives: z2.array(z2.string()).optional(),\n  knowledge: z2.array(knowledgeItemSchema).optional(),\n  plugins: z2.array(z2.string()).optional(),\n  settings: settingsSchema,\n  secrets: secretsSchema,\n  style: styleSchema\n}).strict();\nfunction validateCharacter(data) {\n  const result = characterSchema.safeParse(data);\n  if (result.success) {\n    return {\n      success: true,\n      data: result.data\n    };\n  }\n  return {\n    success: false,\n    error: {\n      message: `Character validation failed: ${result.error.message}`,\n      issues: result.error.issues\n    }\n  };\n}\nfunction parseAndValidateCharacter(jsonString) {\n  try {\n    const parsed = JSON.parse(jsonString);\n    return validateCharacter(parsed);\n  } catch (error) {\n    return {\n      success: false,\n      error: {\n        message: `Invalid JSON: ${error instanceof Error ? error.message : \"Unknown JSON parsing error\"}`\n      }\n    };\n  }\n}\nfunction isValidCharacter(data) {\n  return validateCharacter(data).success;\n}\n\n// src/actions.ts\nimport { names as names2, uniqueNamesGenerator as uniqueNamesGenerator2 } from \"unique-names-generator\";\nvar composeActionExamples = (actionsData, count) => {\n  if (!actionsData.length || count <= 0) {\n    return \"\";\n  }\n  const actionsWithExamples = actionsData.filter(\n    (action) => action.examples && Array.isArray(action.examples) && action.examples.length > 0\n  );\n  if (!actionsWithExamples.length) {\n    return \"\";\n  }\n  const examplesCopy = actionsWithExamples.map((action) => [\n    ...action.examples\n  ]);\n  const selectedExamples = [];\n  let availableActionIndices = examplesCopy.map((examples, index) => examples.length > 0 ? index : -1).filter((index) => index !== -1);\n  while (selectedExamples.length < count && availableActionIndices.length > 0) {\n    const randomIndex = Math.floor(Math.random() * availableActionIndices.length);\n    const actionIndex = availableActionIndices[randomIndex];\n    const examples = examplesCopy[actionIndex];\n    const exampleIndex = Math.floor(Math.random() * examples.length);\n    selectedExamples.push(examples.splice(exampleIndex, 1)[0]);\n    if (examples.length === 0) {\n      availableActionIndices.splice(randomIndex, 1);\n    }\n  }\n  return formatSelectedExamples(selectedExamples);\n};\nvar formatSelectedExamples = (examples) => {\n  const MAX_NAME_PLACEHOLDERS = 5;\n  return examples.map((example) => {\n    const randomNames = Array.from(\n      { length: MAX_NAME_PLACEHOLDERS },\n      () => uniqueNamesGenerator2({ dictionaries: [names2] })\n    );\n    const conversation = example.map((message) => {\n      let messageText = `${message.name}: ${message.content.text}`;\n      for (let i = 0; i < randomNames.length; i++) {\n        messageText = messageText.replaceAll(`{{name${i + 1}}}`, randomNames[i]);\n      }\n      return messageText;\n    }).join(\"\\n\");\n    return `\n${conversation}`;\n  }).join(\"\\n\");\n};\nfunction formatActionNames(actions) {\n  if (!actions?.length) return \"\";\n  return [...actions].sort(() => Math.random() - 0.5).map((action) => action.name).join(\", \");\n}\nfunction formatActions(actions) {\n  if (!actions?.length) return \"\";\n  return [...actions].sort(() => Math.random() - 0.5).map((action) => `- **${action.name}**: ${action.description || \"No description available\"}`).join(\"\\n\");\n}\n\n// src/database.ts\nvar DatabaseAdapter = class {\n};\n\n// src/entities.ts\nvar entityResolutionTemplate = `# Task: Resolve Entity Name\nMessage Sender: {{senderName}} (ID: {{senderId}})\nAgent: {{agentName}} (ID: {{agentId}})\n\n# Entities in Room:\n{{#if entitiesInRoom}}\n{{entitiesInRoom}}\n{{/if}}\n\n{{recentMessages}}\n\n# Instructions:\n1. Analyze the context to identify which entity is being referenced\n2. Consider special references like \"me\" (the message sender) or \"you\" (agent the message is directed to)\n3. Look for usernames/handles in standard formats (e.g. @username, user#1234)\n4. Consider context from recent messages for pronouns and references\n5. If multiple matches exist, use context to disambiguate\n6. Consider recent interactions and relationship strength when resolving ambiguity\n\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nReturn an XML response with:\n<response>\n  <entityId>exact-id-if-known-otherwise-null</entityId>\n  <type>EXACT_MATCH | USERNAME_MATCH | NAME_MATCH | RELATIONSHIP_MATCH | AMBIGUOUS | UNKNOWN</type>\n  <matches>\n    <match>\n      <name>matched-name</name>\n      <reason>why this entity matches</reason>\n    </match>\n  </matches>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.`;\nasync function getRecentInteractions(runtime, sourceEntityId, candidateEntities, roomId, relationships) {\n  const results = [];\n  const recentMessages = await runtime.getMemories({\n    tableName: \"messages\",\n    roomId,\n    count: 20\n    // Reduced from 100 since we only need context\n  });\n  for (const entity of candidateEntities) {\n    const interactions = [];\n    let interactionScore = 0;\n    const directReplies = recentMessages.filter(\n      (msg) => msg.entityId === sourceEntityId && msg.content.inReplyTo === entity.id || msg.entityId === entity.id && msg.content.inReplyTo === sourceEntityId\n    );\n    interactions.push(...directReplies);\n    const relationship = relationships.find(\n      (rel) => rel.sourceEntityId === sourceEntityId && rel.targetEntityId === entity.id || rel.targetEntityId === sourceEntityId && rel.sourceEntityId === entity.id\n    );\n    if (relationship?.metadata?.interactions) {\n      interactionScore = relationship.metadata.interactions;\n    }\n    interactionScore += directReplies.length;\n    const uniqueInteractions = [...new Set(interactions)];\n    results.push({\n      entity,\n      interactions: uniqueInteractions.slice(-5),\n      // Only keep last 5 messages for context\n      count: Math.round(interactionScore)\n    });\n  }\n  return results.sort((a, b) => b.count - a.count);\n}\nasync function findEntityByName(runtime, message, state) {\n  const room = state.data.room ?? await runtime.getRoom(message.roomId);\n  if (!room) {\n    logger.warn(\"Room not found for entity search\");\n    return null;\n  }\n  const world = room.worldId ? await runtime.getWorld(room.worldId) : null;\n  const entitiesInRoom = await runtime.getEntitiesForRoom(room.id, true);\n  const filteredEntities = await Promise.all(\n    entitiesInRoom.map(async (entity) => {\n      if (!entity.components) return entity;\n      const worldRoles = world?.metadata?.roles || {};\n      entity.components = entity.components.filter((component) => {\n        if (component.sourceEntityId === message.entityId) return true;\n        if (world && component.sourceEntityId) {\n          const sourceRole = worldRoles[component.sourceEntityId];\n          if (sourceRole === \"OWNER\" || sourceRole === \"ADMIN\") return true;\n        }\n        if (component.sourceEntityId === runtime.agentId) return true;\n        return false;\n      });\n      return entity;\n    })\n  );\n  const relationships = await runtime.getRelationships({\n    entityId: message.entityId\n  });\n  const relationshipEntities = await Promise.all(\n    relationships.map(async (rel) => {\n      const entityId = rel.sourceEntityId === message.entityId ? rel.targetEntityId : rel.sourceEntityId;\n      return runtime.getEntityById(entityId);\n    })\n  );\n  const allEntities = [\n    ...filteredEntities,\n    ...relationshipEntities.filter((e) => e !== null)\n  ];\n  const interactionData = await getRecentInteractions(\n    runtime,\n    message.entityId,\n    allEntities,\n    room.id,\n    relationships\n  );\n  const prompt = composePrompt({\n    state: {\n      roomName: room.name || room.id,\n      worldName: world?.name || \"Unknown\",\n      entitiesInRoom: JSON.stringify(filteredEntities, null, 2),\n      entityId: message.entityId,\n      senderId: message.entityId\n    },\n    template: entityResolutionTemplate\n  });\n  const result = await runtime.useModel(ModelType.TEXT_SMALL, {\n    prompt,\n    stopSequences: []\n  });\n  const resolution = parseKeyValueXml(result);\n  if (!resolution) {\n    logger.warn(\"Failed to parse entity resolution result\");\n    return null;\n  }\n  if (resolution.type === \"EXACT_MATCH\" && resolution.entityId) {\n    const entity = await runtime.getEntityById(resolution.entityId);\n    if (entity) {\n      if (entity.components) {\n        const worldRoles = world?.metadata?.roles || {};\n        entity.components = entity.components.filter((component) => {\n          if (component.sourceEntityId === message.entityId) return true;\n          if (world && component.sourceEntityId) {\n            const sourceRole = worldRoles[component.sourceEntityId];\n            if (sourceRole === \"OWNER\" || sourceRole === \"ADMIN\") return true;\n          }\n          if (component.sourceEntityId === runtime.agentId) return true;\n          return false;\n        });\n      }\n      return entity;\n    }\n  }\n  let matchesArray = [];\n  if (resolution.matches?.match) {\n    matchesArray = Array.isArray(resolution.matches.match) ? resolution.matches.match : [resolution.matches.match];\n  }\n  if (matchesArray.length > 0 && matchesArray[0]?.name) {\n    const matchName = matchesArray[0].name.toLowerCase();\n    const matchingEntity = allEntities.find((entity) => {\n      if (entity.names.some((n) => n.toLowerCase() === matchName)) return true;\n      return entity.components?.some(\n        (c) => c.data.username?.toLowerCase() === matchName || c.data.handle?.toLowerCase() === matchName\n      );\n    });\n    if (matchingEntity) {\n      if (resolution.type === \"RELATIONSHIP_MATCH\") {\n        const interactionInfo = interactionData.find((d) => d.entity.id === matchingEntity.id);\n        if (interactionInfo && interactionInfo.count > 0) {\n          return matchingEntity;\n        }\n      } else {\n        return matchingEntity;\n      }\n    }\n  }\n  return null;\n}\nvar createUniqueUuid = (runtime, baseUserId) => {\n  if (baseUserId === runtime.agentId) {\n    return runtime.agentId;\n  }\n  const combinedString = `${baseUserId}:${runtime.agentId}`;\n  return stringToUuid(combinedString);\n};\nasync function getEntityDetails({\n  runtime,\n  roomId\n}) {\n  const [room, roomEntities] = await Promise.all([\n    runtime.getRoom(roomId),\n    runtime.getEntitiesForRoom(roomId, true)\n  ]);\n  const uniqueEntities = /* @__PURE__ */ new Map();\n  for (const entity of roomEntities) {\n    if (uniqueEntities.has(entity.id)) continue;\n    const allData = {};\n    for (const component of entity.components || []) {\n      Object.assign(allData, component.data);\n    }\n    const mergedData = {};\n    for (const [key, value] of Object.entries(allData)) {\n      if (!mergedData[key]) {\n        mergedData[key] = value;\n        continue;\n      }\n      if (Array.isArray(mergedData[key]) && Array.isArray(value)) {\n        mergedData[key] = [.../* @__PURE__ */ new Set([...mergedData[key], ...value])];\n      } else if (typeof mergedData[key] === \"object\" && typeof value === \"object\") {\n        mergedData[key] = { ...mergedData[key], ...value };\n      }\n    }\n    uniqueEntities.set(entity.id, {\n      id: entity.id,\n      name: room?.source ? entity.metadata[room.source]?.name || entity.names[0] : entity.names[0],\n      names: entity.names,\n      data: JSON.stringify({ ...mergedData, ...entity.metadata })\n    });\n  }\n  return Array.from(uniqueEntities.values());\n}\nfunction formatEntities({ entities }) {\n  const entityStrings = entities.map((entity) => {\n    const header = `\"${entity.names.join('\" aka \"')}\"\nID: ${entity.id}${entity.metadata && Object.keys(entity.metadata).length > 0 ? `\nData: ${JSON.stringify(entity.metadata)}\n` : \"\\n\"}`;\n    return header;\n  });\n  return entityStrings.join(\"\\n\");\n}\n\n// src/prompts.ts\nvar shouldRespondTemplate = `<task>Decide on behalf of {{agentName}} whether they should respond to the message, ignore it or stop the conversation.</task>\n\n<providers>\n{{providers}}\n</providers>\n\n<instructions>Decide if {{agentName}} should respond to or interact with the conversation.\nIf the message is directed at or relevant to {{agentName}}, respond with RESPOND action.\nIf a user asks {{agentName}} to be quiet, respond with STOP action.\nIf {{agentName}} should ignore the message, respond with IGNORE action.</instructions>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n  <name>{{agentName}}</name>\n  <reasoning>Your reasoning here</reasoning>\n  <action>RESPOND | IGNORE | STOP</action>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\nvar messageHandlerTemplate = `<task>Generate dialog and actions for the character {{agentName}}.</task>\n\n<providers>\n{{providers}}\n</providers>\n\nThese are the available valid actions:\n<actionNames>\n{{actionNames}}\n</actionNames>\n\n<instructions>\nWrite a thought and plan for {{agentName}} and decide what actions to take. Also include the providers that {{agentName}} will use to have the right context for responding and acting, if any.\n\nIMPORTANT ACTION ORDERING RULES:\n- Actions are executed in the ORDER you list them - the order MATTERS!\n- REPLY should come FIRST to acknowledge the user's request before executing other actions\n- Common patterns:\n  - For requests requiring tool use: REPLY,CALL_MCP_TOOL (acknowledge first, then gather info)\n  - For task execution: REPLY,SEND_MESSAGE or REPLY,EVM_SWAP_TOKENS (acknowledge first, then do the task)\n  - For multi-step operations: REPLY,ACTION1,ACTION2 (acknowledge first, then complete all steps)\n- REPLY is used to acknowledge and inform the user about what you're going to do\n- Follow-up actions execute the actual tasks after acknowledgment\n- Use IGNORE only when you should not respond at all\n- If you use IGNORE, do not include any other actions. IGNORE should be used alone when you should not respond or take any actions.\n\nIMPORTANT PROVIDER SELECTION RULES:\n- Only include providers if they are needed to respond accurately.\n- If the message mentions images, photos, pictures, attachments, or visual content, OR if you see \"(Attachments:\" in the conversation, you MUST include \"ATTACHMENTS\" in your providers list\n- If the message asks about or references specific people, include \"ENTITIES\" in your providers list  \n- If the message asks about relationships or connections between people, include \"RELATIONSHIPS\" in your providers list\n- If the message asks about facts or specific information, include \"FACTS\" in your providers list\n- If the message asks about the environment or world context, include \"WORLD\" in your providers list\n- If no additional context is needed, you may leave the providers list empty.\n\nIMPORTANT CODE BLOCK FORMATTING RULES:\n- If {{agentName}} includes code examples, snippets, or multi-line code in the response, ALWAYS wrap the code with \\`\\`\\` fenced code blocks (specify the language if known, e.g., \\`\\`\\`python).\n- ONLY use fenced code blocks for actual code. Do NOT wrap non-code text, instructions, or single words in fenced code blocks.\n- If including inline code (short single words or function names), use single backticks (\\`) as appropriate.\n- This ensures the user sees clearly formatted and copyable code when relevant.\n\nFirst, think about what you want to do next and plan your actions. Then, write the next message and include the actions you plan to take.\n</instructions>\n\n<keys>\n\"thought\" should be a short description of what the agent is thinking about and planning.\n\"actions\" should be a comma-separated list of the actions {{agentName}} plans to take based on the thought, IN THE ORDER THEY SHOULD BE EXECUTED (if none, use IGNORE, if simply responding with text, use REPLY)\n\"providers\" should be a comma-separated list of the providers that {{agentName}} will use to have the right context for responding and acting (NEVER use \"IGNORE\" as a provider - use specific provider names like ATTACHMENTS, ENTITIES, FACTS, KNOWLEDGE, etc.)\n\"text\" should be the text of the next message for {{agentName}} which they will send to the conversation.\n</keys>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n    <thought>Your thought here</thought>\n    <actions>ACTION1,ACTION2</actions>\n    <providers>PROVIDER1,PROVIDER2</providers>\n    <text>Your response text here</text>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\nvar postCreationTemplate = `# Task: Create a post in the voice and style and perspective of {{agentName}} @{{twitterUserName}}.\n\nExample task outputs:\n1. A post about the importance of AI in our lives\n<response>\n  <thought>I am thinking about writing a post about the importance of AI in our lives</thought>\n  <post>AI is changing the world and it is important to understand how it works</post>\n  <imagePrompt>A futuristic cityscape with flying cars and people using AI to do things</imagePrompt>\n</response>\n\n2. A post about dogs\n<response>\n  <thought>I am thinking about writing a post about dogs</thought>\n  <post>Dogs are man's best friend and they are loyal and loving</post>\n  <imagePrompt>A dog playing with a ball in a park</imagePrompt>\n</response>\n\n3. A post about finding a new job\n<response>\n  <thought>Getting a job is hard, I bet there's a good tweet in that</thought>\n  <post>Just keep going!</post>\n  <imagePrompt>A person looking at a computer screen with a job search website</imagePrompt>\n</response>\n\n{{providers}}\n\nWrite a post that is {{adjective}} about {{topic}} (without mentioning {{topic}} directly), from the perspective of {{agentName}}. Do not add commentary or acknowledge this request, just write the post.\nYour response should be 1, 2, or 3 sentences (choose the length at random).\nYour response should not contain any questions. Brief, concise statements only. The total character count MUST be less than 280. No emojis. Use \\\\n\\\\n (double spaces) between statements if there are multiple statements in your response.\n\nYour output should be formatted in XML like this:\n<response>\n  <thought>Your thought here</thought>\n  <post>Your post text here</post>\n  <imagePrompt>Optional image prompt here</imagePrompt>\n</response>\n\nThe \"post\" field should be the post you want to send. Do not including any thinking or internal reflection in the \"post\" field.\nThe \"imagePrompt\" field is optional and should be a prompt for an image that is relevant to the post. It should be a single sentence that captures the essence of the post. ONLY USE THIS FIELD if it makes sense that the post would benefit from an image.\nThe \"thought\" field should be a short description of what the agent is thinking about before responding, including a brief justification for the response. Includate an explanation how the post is relevant to the topic but unique and different than other posts.\n\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.`;\nvar booleanFooter = \"Respond with only a YES or a NO.\";\nvar imageDescriptionTemplate = `<task>Analyze the provided image and generate a comprehensive description with multiple levels of detail.</task>\n\n<instructions>\nCarefully examine the image and provide:\n1. A concise, descriptive title that captures the main subject or scene\n2. A brief summary description (1-2 sentences) highlighting the key elements\n3. An extensive, detailed description that covers all visible elements, composition, lighting, colors, mood, and any other relevant details\n\nBe objective and descriptive. Focus on what you can actually see in the image rather than making assumptions about context or meaning.\n</instructions>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n  <title>A concise, descriptive title for the image</title>\n  <description>A brief 1-2 sentence summary of the key elements in the image</description>\n  <text>An extensive, detailed description covering all visible elements, composition, lighting, colors, mood, setting, objects, people, activities, and any other relevant details you can observe in the image</text>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\n\n// src/roles.ts\nasync function getUserServerRole(runtime, entityId, serverId) {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n  if (!world || !world.metadata?.roles) {\n    return \"NONE\" /* NONE */;\n  }\n  if (world.metadata.roles[entityId]) {\n    return world.metadata.roles[entityId];\n  }\n  if (world.metadata.roles[entityId]) {\n    return world.metadata.roles[entityId];\n  }\n  return \"NONE\" /* NONE */;\n}\nasync function findWorldsForOwner(runtime, entityId) {\n  if (!entityId) {\n    logger.error(\"User ID is required to find server\");\n    return null;\n  }\n  const worlds = await runtime.getAllWorlds();\n  if (!worlds || worlds.length === 0) {\n    logger.info(\"No worlds found for this agent\");\n    return null;\n  }\n  const ownerWorlds = [];\n  for (const world of worlds) {\n    if (world.metadata?.ownership?.ownerId === entityId) {\n      ownerWorlds.push(world);\n    }\n  }\n  return ownerWorlds.length ? ownerWorlds : null;\n}\n\n// src/runtime.ts\nimport { v4 as uuidv4 } from \"uuid\";\n\n// src/search.ts\nvar isV = (char) => {\n  switch (char) {\n    case 97:\n    case 101:\n    case 105:\n    case 111:\n    case 117:\n    case 121:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isWxy = (char) => {\n  switch (char) {\n    case 97:\n    case 101:\n    case 105:\n    case 111:\n    case 117:\n    case 121:\n    case 119:\n    case 120:\n    case 89:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isValidLi = (char) => {\n  switch (char) {\n    case 99:\n    case 100:\n    case 101:\n    case 103:\n    case 104:\n    case 107:\n    case 109:\n    case 110:\n    case 114:\n    case 116:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isDouble = (char) => {\n  switch (char) {\n    case 98:\n    case 100:\n    case 102:\n    case 103:\n    case 109:\n    case 110:\n    case 112:\n    case 114:\n    case 116:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isShortV = (w, len) => {\n  return len >= 2 && isV(w[len - 2]) && (len === 2 && !isV(w[len - 1]) || len >= 3 && !isV(w[len - 3]) && !isWxy(w[len - 1]));\n};\nvar stem = (word) => {\n  if (word.length < 3) return word;\n  if (word.length <= 6) {\n    switch (word) {\n      case \"ski\":\n        return \"ski\";\n      case \"skies\":\n        return \"sky\";\n      case \"dying\":\n        return \"die\";\n      case \"lying\":\n        return \"lie\";\n      case \"tying\":\n        return \"tie\";\n      // special -LY cases\n      case \"idly\":\n        return \"idl\";\n      case \"gently\":\n        return \"gentl\";\n      case \"ugly\":\n        return \"ugli\";\n      case \"early\":\n        return \"earli\";\n      case \"only\":\n        return \"onli\";\n      case \"singly\":\n        return \"singl\";\n      // invariant forms\n      case \"sky\":\n      case \"news\":\n      case \"howe\":\n      // not plural forms\n      case \"atlas\":\n      case \"cosmos\":\n      case \"bias\":\n      case \"andes\":\n        return word;\n    }\n  }\n  const initialOffset = word.charCodeAt(0) === 39 ? 1 : 0;\n  let l = word.length - initialOffset;\n  const w = new Array(l);\n  let yFound = false;\n  for (let i = 0; i < l; ++i) {\n    const ch = word.charCodeAt(i + initialOffset);\n    if (ch === 121 && (i === 0 || isV(w[i - 1]))) {\n      yFound = true;\n      w[i] = 89;\n      continue;\n    }\n    w[i] = ch;\n  }\n  if (w[l - 1] === 39) --l;\n  if (l >= 2 && w[l - 2] === 39 && w[l - 1] === 115) l -= 2;\n  let rv = 0;\n  while (rv < l && !isV(w[rv])) ++rv;\n  if (rv < l) ++rv;\n  let r1 = rv;\n  if (l >= 5 && (w[0] === 103 && w[1] === 101 && w[2] === 110 && w[3] === 101 && w[4] === 114 || // gener\n  w[0] === 97 && w[1] === 114 && w[2] === 115 && w[3] === 101 && w[4] === 110))\n    r1 = 5;\n  else if (l >= 6 && w[0] === 99 && // c\n  w[1] === 111 && // o\n  w[2] === 109 && // m\n  w[3] === 109 && // m\n  w[4] === 117 && // u\n  w[5] === 110)\n    r1 = 6;\n  else {\n    while (r1 < l && isV(w[r1])) ++r1;\n    if (r1 < l) ++r1;\n  }\n  let r2 = r1;\n  while (r2 < l && !isV(w[r2])) ++r2;\n  while (r2 < l && isV(w[r2])) ++r2;\n  if (r2 < l) ++r2;\n  if (l >= 3) {\n    if (w[l - 1] === 115) {\n      if (l >= 4 && w[l - 2] === 101 && w[l - 3] === 115 && w[l - 4] === 115)\n        l -= 2;\n      else if (w[l - 2] === 101 && w[l - 3] === 105)\n        l -= l >= 5 ? 2 : 1;\n      else if (w[l - 2] !== 117 && w[l - 2] !== 115 && rv < l - 1)\n        l -= 1;\n    } else if (w[l - 1] === 100 && w[l - 2] === 101 && w[l - 3] === 105) l -= l >= 5 ? 2 : 1;\n  }\n  if (l === 6 && (w[0] === 105 && // i\n  w[1] === 110 && // n\n  w[2] === 110 && // n\n  w[3] === 105 && // i\n  w[4] === 110 && // n\n  w[5] === 103 || // g (inning)\n  w[0] === 111 && // o\n  w[1] === 117 && // u\n  w[2] === 116 && // t\n  w[3] === 105 && // i\n  w[4] === 110 && // n\n  w[5] === 103 || // g (outing)\n  w[0] === 101 && // e\n  w[1] === 120 && // x\n  w[2] === 99 && // c\n  w[3] === 101 && // e\n  w[4] === 101 && // e\n  w[5] === 100) || // d (exceed)\n  l === 7 && (w[0] === 99 && // c\n  w[1] === 97 && // a\n  w[2] === 110 && // n\n  w[3] === 110 && // n\n  w[4] === 105 && // i\n  w[5] === 110 && // n\n  w[6] === 103 || // g (canning)\n  w[0] === 104 && // h\n  w[1] === 101 && // e\n  w[2] === 114 && // r\n  w[3] === 114 && // r\n  w[4] === 105 && // i\n  w[5] === 110 && // n\n  w[6] === 103 || // g (herring)\n  w[0] === 101 && // e\n  w[1] === 97 && // a\n  w[2] === 114 && // r\n  w[3] === 114 && // r\n  w[4] === 105 && // i\n  w[5] === 110 && // n\n  w[6] === 103 || // g (earring)\n  w[0] === 112 && // p\n  w[1] === 114 && // r\n  w[2] === 111 && // o\n  w[3] === 99 && // c\n  w[4] === 101 && // e\n  w[5] === 101 && // e\n  w[6] === 100 || // d (proceed)\n  w[0] === 115 && // s\n  w[1] === 117 && // u\n  w[2] === 99 && // c\n  w[3] === 99 && // c\n  w[4] === 101 && // e\n  w[5] === 101 && // e\n  w[6] === 100)) {\n    let exp2Out = \"\";\n    for (let i = 0; i < l; ++i) exp2Out += String.fromCharCode(w[i]);\n    return exp2Out;\n  }\n  let ll = (\n    // l (length) without the -ly ending\n    l >= 2 && w[l - 1] === 121 && w[l - 2] === 108 ? l - 2 : l\n  );\n  if (ll >= 3) {\n    if (w[ll - 3] === 101 && w[ll - 2] === 101 && w[ll - 1] === 100) {\n      if (ll >= r1 + 3) l = ll - 1;\n    } else {\n      if (w[ll - 2] === 101 && w[ll - 1] === 100)\n        ll -= 2;\n      else if (w[ll - 3] === 105 && w[ll - 2] === 110 && w[ll - 1] === 103)\n        ll -= 3;\n      else ll = -1;\n      if (ll >= 0 && rv <= ll) {\n        l = ll;\n        if (l >= 2) {\n          if (w[l - 1] === 116 && w[l - 2] === 97 || // at\n          w[l - 1] === 108 && w[l - 2] === 98 || // bl\n          w[l - 1] === 122 && w[l - 2] === 105) {\n            w[l] = 101;\n            ++l;\n          } else if (w[l - 2] === w[l - 1] && isDouble(w[l - 1])) {\n            --l;\n          } else if (r1 >= l && isShortV(w, l)) {\n            w[l] = 101;\n            ++l;\n          }\n        }\n      }\n    }\n  }\n  if (l >= 3 && (w[l - 1] === 89 || w[l - 1] === 121) && !isV(w[l - 2])) w[l - 1] = 105;\n  if (l >= r1 + 2) {\n    switch (w[l - 1]) {\n      case 108:\n        if (l >= r1 + 6 && w[l - 2] === 97 && // a\n        w[l - 3] === 110 && // n\n        w[l - 4] === 111 && // o\n        w[l - 5] === 105 && // i\n        w[l - 6] === 116) {\n          if (l >= 7 && w[l - 7] === 97) {\n            if (l >= r1 + 7) {\n              l -= 4;\n              w[l - 1] = 101;\n            }\n          } else {\n            l -= 2;\n          }\n        }\n        break;\n      case 110:\n        if (l >= r1 + 5 && w[l - 2] === 111 && // o\n        w[l - 3] === 105 && // i\n        w[l - 4] === 116 && // t\n        w[l - 5] === 97) {\n          if (l >= 7 && w[l - 6] === 122 && w[l - 7] === 105) {\n            if (l >= r1 + 7) {\n              l -= 4;\n              w[l - 1] = 101;\n            }\n          } else {\n            l -= 2;\n            w[l - 1] = 101;\n          }\n        }\n        break;\n      case 114:\n        if (l >= r1 + 4) {\n          if (w[l - 2] === 101) {\n            if (w[l - 3] === 122 && w[l - 4] === 105) --l;\n          } else if (w[l - 2] === 111) {\n            if (w[l - 3] === 116 && w[l - 4] === 97) {\n              --l;\n              w[l - 1] = 101;\n            }\n          }\n        }\n        break;\n      case 115:\n        if (l >= r1 + 7 && w[l - 2] === 115 && // s\n        w[l - 3] === 101 && // e\n        w[l - 4] === 110 && // n (ness)\n        (w[l - 5] === 108 && w[l - 6] === 117 && w[l - 7] === 102 || // fulness\n        w[l - 5] === 115 && w[l - 6] === 117 && w[l - 7] === 111 || // ousness\n        w[l - 5] === 101 && w[l - 6] === 118 && w[l - 7] === 105)) {\n          l -= 4;\n        }\n        break;\n      case 109:\n        if (l >= r1 + 5 && w[l - 2] === 115 && // s\n        w[l - 3] === 105 && // i\n        w[l - 4] === 108 && // l\n        w[l - 5] === 97)\n          l -= 3;\n        break;\n      case 105:\n        if (w[l - 2] === 99) {\n          if (l >= r1 + 4 && (w[l - 4] === 101 || w[l - 4] === 97) && w[l - 3] === 110) {\n            w[l - 1] = 101;\n          }\n        } else if (w[l - 2] === 103) {\n          if (l >= r1 + 3 && l >= 4 && w[l - 2] === 103 && w[l - 3] === 111 && w[l - 4] === 108)\n            --l;\n        } else if (w[l - 2] === 116) {\n          if (l >= r1 + 5 && w[l - 3] === 105) {\n            if (w[l - 4] === 108) {\n              if (l >= 6 && w[l - 5] === 105 && w[l - 6] === 98) {\n                if (l >= r1 + 6) {\n                  l -= 3;\n                  w[l - 2] = 108;\n                  w[l - 1] = 101;\n                }\n              } else if (w[l - 4] === 108 && w[l - 5] === 97) {\n                l -= 3;\n              }\n            } else if (w[l - 4] === 118 && w[l - 5] === 105) {\n              l -= 2;\n              w[l - 1] = 101;\n            }\n          }\n        } else if (w[l - 2] === 108 && l >= 3) {\n          if (w[l - 3] === 98) {\n            if (l >= 4 && w[l - 4] === 97) {\n              if (l >= r1 + 4) w[l - 1] = 101;\n            } else if (l >= r1 + 3) {\n              w[l - 1] = 101;\n            }\n          } else {\n            if (w[l - 3] === 108) {\n              if (l >= 5 && w[l - 4] === 117 && w[l - 5] === 102) {\n                if (l >= r1 + 5) l -= 2;\n              } else if (l >= r1 + 4 && w[l - 4] === 97) {\n                l -= 2;\n              }\n            } else if (w[l - 3] === 115) {\n              if (l >= 6 && w[l - 4] === 115 && w[l - 5] === 101 && w[l - 6] === 108) {\n                if (l >= r1 + 6) l -= 2;\n              } else if (l >= r1 + 5 && w[l - 4] === 117 && w[l - 5] === 111) {\n                l -= 2;\n              }\n            } else if (l >= 5 && w[l - 3] === 116 && w[l - 4] === 110 && w[l - 5] === 101) {\n              if (l >= r1 + 5) l -= 2;\n            } else if (isValidLi(w[l - 3])) {\n              l -= 2;\n            }\n          }\n        }\n    }\n  }\n  if (l >= r1 + 3) {\n    switch (w[l - 1]) {\n      case 108:\n        if (w[l - 3] === 99) {\n          if (l >= r1 + 4 && w[l - 4] === 105 && w[l - 2] === 97) l -= 2;\n        } else if (w[l - 3] === 102) {\n          if (w[l - 2] === 117) l -= 3;\n        } else if (w[l - 3] === 110) {\n          if (l >= r1 + 6 && w[l - 2] === 97 && // a\n          w[l - 4] === 111 && // o\n          w[l - 5] === 105 && // i\n          w[l - 6] === 116) {\n            if (l >= 7 && w[l - 7] === 97) {\n              if (l >= r1 + 7) {\n                l -= 4;\n                w[l - 1] = 101;\n              }\n            } else {\n              l -= 2;\n            }\n          }\n        }\n        break;\n      case 101:\n        if (w[l - 2] === 122) {\n          if (l >= r1 + 5 && w[l - 3] === 105 && w[l - 4] === 108 && w[l - 5] === 97) l -= 3;\n        } else if (w[l - 2] === 116) {\n          if (l >= r1 + 5 && w[l - 3] === 97 && w[l - 4] === 99 && w[l - 5] === 105) l -= 3;\n        } else if (w[l - 2] === 118) {\n          if (l >= r2 + 5 && w[l - 3] === 105 && w[l - 4] === 116 && w[l - 5] === 97) l -= 5;\n        }\n        break;\n      case 105:\n        if (l >= r1 + 5 && w[l - 2] === 116 && // t\n        w[l - 3] === 105 && // i\n        w[l - 4] === 99 && // c\n        w[l - 5] === 105)\n          l -= 3;\n        break;\n      case 115:\n        if (l >= r1 + 4 && w[l - 2] === 115 && w[l - 3] === 101 && w[l - 4] === 110) l -= 4;\n    }\n  }\n  if (l >= r2 + 2) {\n    switch (w[l - 1]) {\n      case 110:\n        if (l >= r2 + 3 && w[l - 2] === 111 && // o\n        w[l - 3] === 105 && // i (ion)\n        (w[l - 4] === 115 || w[l - 4] === 116))\n          l -= 3;\n        break;\n      case 108:\n        if (w[l - 2] === 97) l -= 2;\n        break;\n      case 114:\n        if (w[l - 2] === 101) l -= 2;\n        break;\n      case 99:\n        if (w[l - 2] === 105) l -= 2;\n        break;\n      case 109:\n        if (l >= r2 + 3 && w[l - 2] === 115 && w[l - 3] === 105) l -= 3;\n        break;\n      case 105:\n        if (l >= r2 + 3 && w[l - 2] === 116 && w[l - 3] === 105) l -= 3;\n        break;\n      case 115:\n        if (l >= r2 + 3 && w[l - 2] === 117 && w[l - 3] === 111) l -= 3;\n        break;\n      case 116:\n        if (l >= r2 + 3 && w[l - 2] === 110) {\n          if (w[l - 3] === 97) {\n            l -= 3;\n          } else if (w[l - 3] === 101) {\n            if (l >= 4 && w[l - 4] === 109) {\n              if (l >= 5 && w[l - 5] === 101) {\n                if (l >= r2 + 5) l -= 5;\n              } else if (l >= r2 + 4) {\n                l -= 4;\n              }\n            } else {\n              l -= 3;\n            }\n          }\n        }\n        break;\n      case 101:\n        if (w[l - 2] === 99) {\n          if (l >= r2 + 4 && w[l - 3] === 110 && (w[l - 4] === 97 || w[l - 4] === 101)) l -= 4;\n        } else if (w[l - 2] === 108) {\n          if (l >= r2 + 4 && w[l - 3] === 98 && (w[l - 4] === 97 || w[l - 4] === 105)) l -= 4;\n        } else if (w[l - 2] === 116) {\n          if (l >= r2 + 3 && w[l - 3] === 97) l -= 3;\n        } else if (l >= r2 + 3 && (w[l - 2] === 118 || w[l - 2] === 122) && w[l - 3] === 105) {\n          l -= 3;\n        }\n    }\n  }\n  if (l >= r1 + 1 && // r1 is >= 1\n  (l >= r2 + 1 && w[l - 1] === 108 && w[l - 2] === 108 || // ll\n  w[l - 1] === 101 && (l >= r2 + 1 || !isShortV(w, l - 1))))\n    --l;\n  let out = \"\";\n  if (yFound) {\n    for (let i = 0; i < l; ++i) {\n      out += String.fromCharCode(w[i] === 89 ? 121 : w[i]);\n    }\n  } else {\n    for (let i = 0; i < l; ++i) out += String.fromCharCode(w[i]);\n  }\n  return out;\n};\nvar DEFAULT_OPTIONS = {\n  k1: 1.2,\n  b: 0.75,\n  minLength: 2,\n  stopWords: /* @__PURE__ */ new Set([\n    \"a\",\n    \"an\",\n    \"and\",\n    \"are\",\n    \"as\",\n    \"at\",\n    \"be\",\n    \"by\",\n    \"for\",\n    \"from\",\n    \"has\",\n    \"he\",\n    \"in\",\n    \"is\",\n    \"it\",\n    \"its\",\n    \"of\",\n    \"on\",\n    \"that\",\n    \"the\",\n    \"to\",\n    \"was\",\n    \"were\",\n    \"will\",\n    \"with\"\n  ]),\n  stemming: false,\n  stemWords: (word) => word\n};\nvar Tokenizer = class _Tokenizer {\n  static {\n    /** Default options for the Tokenizer. */\n    this.DEFAULT_OPTIONS = {\n      stopWords: /* @__PURE__ */ new Set(),\n      minLength: 2,\n      stemming: false,\n      stemmingRules: []\n    };\n  }\n  /**\n   * Creates a new tokenizer instance.\n   * @param options - Tokenization options including stop words, min length, stemming, and custom rules.\n   */\n  constructor(options2 = {}) {\n    const mergedOptions = { ..._Tokenizer.DEFAULT_OPTIONS, ...options2 };\n    this.stopWords = mergedOptions.stopWords;\n    this.minLength = mergedOptions.minLength;\n    this.stemming = mergedOptions.stemming;\n    this.stemmingRules = mergedOptions.stemmingRules.map((rule) => ({\n      ...rule,\n      pattern: typeof rule.pattern === \"string\" ? new RegExp(rule.pattern) : rule.pattern\n    }));\n  }\n  /**\n   * Tokenizes input text into an array of processed terms.\n   * Steps:\n   * 1. Cleans the text (lowercase, normalize, remove punctuation/symbols).\n   * 2. Splits the text into potential tokens.\n   * 3. Filters tokens based on `minLength` and `stopWords`.\n   * 4. Applies stemming if `stemming` is true (custom rules first, then Porter2).\n   * 5. Optionally calculates statistics.\n   *\n   * @param text - The input text string to tokenize.\n   * @param includeStats - If true, returns tokenization statistics along with tokens. Defaults to false.\n   * @returns A `TokenizationResult` object containing the array of tokens and optional stats.\n   * @throws {Error} If the input text is null, undefined, or empty.\n   */\n  tokenize(text, includeStats = false) {\n    if (!text) {\n      throw new Error(\"Input text cannot be null or empty\");\n    }\n    const startTime = Date.now();\n    const originalWords = text.split(/\\s+/).filter((word) => word.length > 0);\n    const cleaned = this.cleanText(text);\n    const tokens = cleaned.split(/\\s+/).filter((token) => this.isValidToken(token)).map((token) => this.stemming ? this.stemWord(token) : token);\n    const stats = includeStats ? {\n      originalWordCount: originalWords.length,\n      stopWordsRemoved: originalWords.length - tokens.length,\n      // This might be incorrect if stemming changes token count\n      stemmedWords: this.stemming ? tokens.length : 0,\n      processingTimeMs: Date.now() - startTime\n    } : {\n      originalWordCount: 0,\n      stopWordsRemoved: 0,\n      stemmedWords: 0,\n      processingTimeMs: 0\n    };\n    return { tokens, stats };\n  }\n  /**\n   * Cleans and normalizes text for tokenization.\n   * - Converts to lowercase.\n   * - Normalizes Unicode characters (NFKD).\n   * - Removes control characters and zero-width spaces.\n   * - Removes diacritical marks (accents).\n   * - Removes emojis and pictographs.\n   * - Removes common symbols (™, ®, ©, ℠, ‼).\n   * - Replaces Unicode punctuation with spaces.\n   * - Removes characters not matching basic Latin, CJK, Hangul, or whitespace.\n   * - Collapses multiple spaces into single spaces.\n   * - Trims leading/trailing whitespace.\n   *\n   * @param text - Input text to clean.\n   * @returns Cleaned and normalized text, ready for splitting into tokens.\n   *\n   * @example\n   * cleanText(\"Hello, World™!\") // \"hello world\"\n   * cleanText(\"héllo 👋\") // \"hello\"\n   * cleanText(\"Hello 世界!\") // \"hello 世界\"\n   * cleanText(\"I'm don't\") // \"i'm don't\" (apostrophes kept by replacing punctuation with space)\n   * cleanText(\"test©2023\") // \"test 2023\"\n   */\n  cleanText(text) {\n    return text.toLowerCase().normalize(\"NFKD\").replace(/[\\u0000-\\u001F\\u007F-\\u009F\\u200B-\\u200D\\uFEFF]/g, \"\").replace(/[\\u0300-\\u036f]/g, \"\").replace(/[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/gu, \"\").replace(/[™®©℠‼]/g, \"\").replace(/[\\p{P}]/gu, \" \").replace(/[^a-z0-9\\u3040-\\u30FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uAC00-\\uD7AF\\s]/gu, \" \").replace(/\\s+/g, \" \").trim();\n  }\n  /**\n   * Checks if a token is valid (meets `minLength` criteria and is not a stop word).\n   * Numeric tokens are always considered valid regardless of length.\n   * @param token - The token string to validate.\n   * @returns `true` if the token is valid, `false` otherwise.\n   */\n  isValidToken(token) {\n    const isNumeric = /^\\d+$/.test(token);\n    return (token.length >= this.minLength || isNumeric) && !this.stopWords.has(token);\n  }\n  /**\n   * Applies stemming to a single word.\n   * First, tries to apply custom stemming rules defined in `stemmingRules`.\n   * If no custom rule matches, applies the default Porter2 stemming algorithm.\n   * Words shorter than 3 characters are not stemmed.\n   * @param word - The word to stem.\n   * @returns The stemmed word.\n   */\n  stemWord(word) {\n    if (word.length < 3) return word;\n    let customRuleApplied = false;\n    let stemmed = word;\n    for (const rule of this.stemmingRules) {\n      const match = stemmed.match(rule.pattern);\n      if (match) {\n        if (!rule.minMeasure || this.measure(stemmed.substring(0, match.index)) >= rule.minMeasure) {\n          if (typeof rule.replacement === \"string\") {\n            stemmed = stemmed.replace(rule.pattern, rule.replacement);\n          } else {\n            stemmed = stemmed.replace(\n              rule.pattern,\n              (...args) => rule.replacement(...args)\n            );\n          }\n          customRuleApplied = true;\n        }\n      }\n    }\n    if (customRuleApplied && stemmed !== word) return stemmed;\n    return stem(stemmed);\n  }\n  /**\n   * Checks if the character at a given index in a word is a consonant.\n   * Treats 'y' as a consonant if it's the first letter or follows a consonant.\n   * @param word - The word string.\n   * @param i - The index of the character to check.\n   * @returns `true` if the character is a consonant, `false` otherwise.\n   */\n  isConsonant(word, i) {\n    const char = word[i];\n    if (\"aeiou\".includes(char)) return false;\n    return char !== \"y\" || (i === 0 ? true : !this.isConsonant(word, i - 1));\n  }\n  /**\n   * Calculates the \"measure\" of a word stem (approximates syllable count).\n   * The measure (m) is the number of times a sequence of vowels is followed by a\n   * sequence of consonants (VC). Used in some stemming rules.\n   * Example: measure(\"tree\") = 0, measure(\"trouble\") = 1, measure(\"private\") = 2\n   * @param word - The word (or stem) to measure.\n   * @returns The measure (m) of the word.\n   */\n  measure(word) {\n    let m = 0;\n    let vowelSeen = false;\n    for (let i = 0; i < word.length; i++) {\n      if (this.isConsonant(word, i)) {\n        if (vowelSeen) {\n          m++;\n          vowelSeen = false;\n        }\n      } else {\n        vowelSeen = true;\n      }\n    }\n    return m;\n  }\n};\nvar BM25 = class {\n  // Consider using a generic <T>\n  /**\n   * Creates a new BM25 search instance.\n   * @param docs - Optional array of initial documents (objects with string fields) to index.\n   * @param options - Configuration options for BM25 parameters (k1, b), tokenizer (stopWords, stemming, minLength), and field boosts.\n   */\n  constructor(docs, options2 = {}) {\n    const opts = { ...DEFAULT_OPTIONS, ...options2 };\n    this.termFrequencySaturation = opts.k1;\n    this.lengthNormalizationFactor = opts.b;\n    this.tokenizer = new Tokenizer(opts);\n    this.fieldBoosts = opts.fieldBoosts || {};\n    this.documents = [];\n    this.documentLengths = new Uint32Array(0);\n    this.termToIndex = /* @__PURE__ */ new Map();\n    this.documentFrequency = new Uint32Array(0);\n    this.averageDocLength = 0;\n    this.termFrequencies = /* @__PURE__ */ new Map();\n    if (docs && docs.length > 0) {\n      this.documents = [...docs];\n      const { documentLengths, termToIndex, documentFrequency, averageDocLength, termFrequencies } = this.processDocuments(docs);\n      this.documentLengths = documentLengths;\n      this.termToIndex = termToIndex;\n      this.documentFrequency = documentFrequency;\n      this.averageDocLength = averageDocLength;\n      this.termFrequencies = termFrequencies;\n    }\n  }\n  /**\n   * Processes an array of documents to build the initial index structures.\n   * Calculates document lengths, term frequencies, document frequencies, and average document length.\n   * @param docs - Array of documents to process.\n   * @returns An object containing the calculated index data.\n   * @internal\n   */\n  processDocuments(docs) {\n    const numDocs = docs.length;\n    const documentLengths = new Uint32Array(numDocs);\n    const termToIndex = /* @__PURE__ */ new Map();\n    const termDocs = /* @__PURE__ */ new Map();\n    const termFrequencies = /* @__PURE__ */ new Map();\n    let totalDocLength = 0;\n    let nextTermIndex = 0;\n    docs.forEach((doc, docIndex) => {\n      let currentDocLength = 0;\n      const docTermFrequencies = /* @__PURE__ */ new Map();\n      Object.entries(doc).forEach(([field, content]) => {\n        if (typeof content !== \"string\") return;\n        const fieldBoost = this.fieldBoosts[field] || 1;\n        const { tokens } = this.tokenizer.tokenize(content);\n        const fieldLength = tokens.length * fieldBoost;\n        currentDocLength += fieldLength;\n        tokens.forEach((term) => {\n          if (!termToIndex.has(term)) {\n            termToIndex.set(term, nextTermIndex++);\n          }\n          const termIndexVal = termToIndex.get(term);\n          if (!termDocs.has(term)) {\n            termDocs.set(term, /* @__PURE__ */ new Set());\n          }\n          termDocs.get(term).add(docIndex);\n          const currentFreq = docTermFrequencies.get(termIndexVal) || 0;\n          docTermFrequencies.set(termIndexVal, currentFreq + fieldBoost);\n        });\n      });\n      documentLengths[docIndex] = currentDocLength;\n      totalDocLength += currentDocLength;\n      docTermFrequencies.forEach((freq, termIndexVal) => {\n        if (!termFrequencies.has(termIndexVal)) {\n          termFrequencies.set(termIndexVal, /* @__PURE__ */ new Map());\n        }\n        termFrequencies.get(termIndexVal).set(docIndex, freq);\n      });\n    });\n    const documentFrequency = new Uint32Array(termToIndex.size);\n    termDocs.forEach((docsSet, term) => {\n      const termIndexVal = termToIndex.get(term);\n      documentFrequency[termIndexVal] = docsSet.size;\n    });\n    return {\n      documentLengths,\n      termToIndex,\n      documentFrequency,\n      averageDocLength: numDocs > 0 ? totalDocLength / numDocs : 0,\n      termFrequencies\n    };\n  }\n  /**\n   * Recalculates the average document length based on the current `documentLengths`.\n   * @internal\n   */\n  recalculateAverageLength() {\n    if (this.documentLengths.length === 0) {\n      this.averageDocLength = 0;\n      return;\n    }\n    const totalLength = Array.prototype.reduce.call(\n      this.documentLengths,\n      (sum, len) => sum + len,\n      0\n    );\n    this.averageDocLength = totalLength / this.documentLengths.length;\n  }\n  /**\n   * Searches the indexed documents for a given query string using the BM25 ranking formula.\n   *\n   * @param query - The search query text.\n   * @param topK - The maximum number of top-scoring results to return. Defaults to 10.\n   * @returns An array of `SearchResult` objects, sorted by descending BM25 score.\n   */\n  search(query, topK = 10) {\n    const { tokens: queryTokens } = this.tokenizer.tokenize(query);\n    const scores = new Float32Array(this.documentLengths.length).fill(0);\n    queryTokens.forEach((term) => {\n      const termIndex = this.termToIndex.get(term);\n      if (termIndex === void 0) return;\n      const idf = this.calculateIdf(termIndex);\n      if (idf <= 0) return;\n      const termFreqsInDocs = this.termFrequencies.get(termIndex);\n      if (!termFreqsInDocs) return;\n      termFreqsInDocs.forEach((tf, docIndex) => {\n        const docLength = this.documentLengths[docIndex];\n        const numerator = tf * (this.termFrequencySaturation + 1);\n        const denominator = tf + this.termFrequencySaturation * (1 - this.lengthNormalizationFactor + this.lengthNormalizationFactor * docLength / this.averageDocLength);\n        scores[docIndex] += idf * (numerator / denominator);\n      });\n    });\n    return Array.from({ length: scores.length }, (_, i) => ({\n      index: i,\n      score: scores[i]\n      // Optionally add: doc: this.getDocument(i) // If you want the full doc in results\n    })).filter((result) => result.score > 0).sort((a, b) => b.score - a.score).slice(0, topK);\n  }\n  /**\n   * Searches for an exact phrase within the indexed documents.\n   * Ranks documents containing the exact sequence of tokens higher.\n   * Note: This is a basic implementation. More sophisticated phrase search might consider proximity.\n   *\n   * @param phrase - The exact phrase to search for.\n   * @param topK - The maximum number of results to return. Defaults to 10.\n   * @returns An array of `SearchResult` objects, sorted by score, for documents containing the phrase.\n   */\n  searchPhrase(phrase, topK = 10) {\n    const { tokens: phraseTokens } = this.tokenizer.tokenize(phrase);\n    if (phraseTokens.length === 0) return [];\n    let candidateDocs = null;\n    for (const term of phraseTokens) {\n      const termIndex = this.termToIndex.get(term);\n      if (termIndex === void 0) return [];\n      const docsContainingTermIter = this.termFrequencies.get(termIndex)?.keys();\n      if (!docsContainingTermIter) return [];\n      const currentTermDocs = new Set(docsContainingTermIter);\n      if (candidateDocs === null) {\n        candidateDocs = currentTermDocs;\n      } else {\n        candidateDocs = new Set([...candidateDocs].filter((docIdx) => currentTermDocs.has(docIdx)));\n      }\n      if (candidateDocs.size === 0) return [];\n    }\n    if (candidateDocs === null || candidateDocs.size === 0) return [];\n    const scores = /* @__PURE__ */ new Map();\n    candidateDocs.forEach((docIndex) => {\n      const doc = this.getDocument(docIndex);\n      let phraseFoundInDoc = false;\n      Object.entries(doc).forEach(([field, content]) => {\n        if (typeof content !== \"string\" || phraseFoundInDoc) return;\n        const fieldBoost = this.fieldBoosts[field] || 1;\n        const { tokens: docTokens } = this.tokenizer.tokenize(content);\n        for (let i = 0; i <= docTokens.length - phraseTokens.length; i++) {\n          let match = true;\n          for (let j = 0; j < phraseTokens.length; j++) {\n            if (docTokens[i + j] !== phraseTokens[j]) {\n              match = false;\n              break;\n            }\n          }\n          if (match) {\n            const phraseScoreVal = this.calculatePhraseScore(phraseTokens, docIndex) * fieldBoost;\n            scores.set(docIndex, (scores.get(docIndex) || 0) + phraseScoreVal);\n            phraseFoundInDoc = true;\n            break;\n          }\n        }\n      });\n    });\n    return Array.from(scores.entries()).map(([index, score]) => ({ index, score })).sort((a, b) => b.score - a.score).slice(0, topK);\n  }\n  /**\n   * Calculates a BM25-like score for a sequence of phrase tokens within a specific document.\n   * Sums the individual BM25 scores of the terms in the phrase for that document.\n   * @param phraseTokens - The tokenized phrase.\n   * @param docIndex - The index of the document to score against.\n   * @returns The calculated phrase score for the document.\n   * @internal\n   */\n  calculatePhraseScore(phraseTokens, docIndex) {\n    return phraseTokens.reduce((currentScore, term) => {\n      const termIndex = this.termToIndex.get(term);\n      if (termIndex === void 0) return currentScore;\n      const idf = this.calculateIdf(termIndex);\n      const tf = this.termFrequencies.get(termIndex)?.get(docIndex) || 0;\n      const docLength = this.documentLengths[docIndex];\n      const numerator = tf * (this.termFrequencySaturation + 1);\n      const denominator = tf + this.termFrequencySaturation * (1 - this.lengthNormalizationFactor + this.lengthNormalizationFactor * docLength / this.averageDocLength);\n      return currentScore + idf * (numerator / denominator);\n    }, 0);\n  }\n  /**\n   * Adds a single new document to the index.\n   * Updates all internal index structures incrementally.\n   * Note: For adding many documents, `addDocumentsParallel` is generally more efficient.\n   *\n   * @param doc - The document object (with string fields) to add.\n   * @throws {Error} If the document is null or undefined.\n   */\n  async addDocument(doc) {\n    if (!doc) throw new Error(\"Document cannot be null\");\n    const docIndex = this.documentLengths.length;\n    this.documents.push(doc);\n    const newDocLengths = new Uint32Array(docIndex + 1);\n    newDocLengths.set(this.documentLengths, 0);\n    this.documentLengths = newDocLengths;\n    let currentDocLength = 0;\n    const docTermFrequencies = /* @__PURE__ */ new Map();\n    Object.entries(doc).forEach(([field, content]) => {\n      if (typeof content !== \"string\") return;\n      const fieldBoost = this.fieldBoosts[field] || 1;\n      const { tokens } = this.tokenizer.tokenize(content);\n      currentDocLength += tokens.length * fieldBoost;\n      tokens.forEach((term) => {\n        let termIndexVal;\n        if (!this.termToIndex.has(term)) {\n          termIndexVal = this.termToIndex.size;\n          this.termToIndex.set(term, termIndexVal);\n          if (this.documentFrequency.length <= termIndexVal) {\n            const oldDf = this.documentFrequency;\n            const newSize = Math.max(termIndexVal + 1, oldDf.length * 2 || 1);\n            this.documentFrequency = new Uint32Array(newSize);\n            this.documentFrequency.set(oldDf, 0);\n          }\n          this.documentFrequency[termIndexVal] = 0;\n        } else {\n          termIndexVal = this.termToIndex.get(term);\n        }\n        const currentFreq = docTermFrequencies.get(termIndexVal) || 0;\n        docTermFrequencies.set(termIndexVal, currentFreq + fieldBoost);\n      });\n    });\n    this.documentLengths[docIndex] = currentDocLength;\n    docTermFrequencies.forEach((freq, termIndexVal) => {\n      if (!this.termFrequencies.has(termIndexVal)) {\n        this.termFrequencies.set(termIndexVal, /* @__PURE__ */ new Map());\n      }\n      this.termFrequencies.get(termIndexVal).set(docIndex, freq);\n      if (termIndexVal < this.documentFrequency.length) {\n        this.documentFrequency[termIndexVal]++;\n      } else {\n        console.error(\n          `Error: termIndexVal ${termIndexVal} is out of bounds for documentFrequency (length ${this.documentFrequency.length}). This indicates an issue with array resizing or term indexing.`\n        );\n      }\n    });\n    this.recalculateAverageLength();\n  }\n  /**\n   * Calculates the Inverse Document Frequency (IDF) for a given term index.\n   * Uses the BM25 IDF formula: log(1 + (N - n + 0.5) / (n + 0.5))\n   * where N is the total number of documents and n is the number of documents\n   * containing the term. The +1 smooths the logarithm.\n   *\n   * @param termIndex - The integer index of the term.\n   * @returns The IDF score for the term. Returns 0 if the term is not found or has 0 DF.\n   */\n  calculateIdf(termIndex) {\n    if (termIndex < 0 || termIndex >= this.documentFrequency.length) {\n      return 0;\n    }\n    const docFreq = this.documentFrequency[termIndex];\n    if (docFreq <= 0 || docFreq > this.documentLengths.length) {\n      return 0;\n    }\n    const N = this.documentLengths.length;\n    const numerator = N - docFreq + 0.5;\n    const denominator = docFreq + 0.5;\n    return Math.log(1 + numerator / denominator);\n  }\n  /**\n   * Retrieves the term frequency (TF) for a specific term in a specific document.\n   * @param termIndex - The integer index of the term.\n   * @param docIndex - The index of the document.\n   * @returns The term frequency, or 0 if the term is not in the document or indices are invalid.\n   */\n  getTermFrequency(termIndex, docIndex) {\n    return this.termFrequencies.get(termIndex)?.get(docIndex) || 0;\n  }\n  /**\n   * Retrieves the original document object stored at a given index.\n   * @param index - The index of the document to retrieve.\n   * @returns The document object.\n   * @throws {Error} If the index is out of bounds.\n   */\n  getDocument(index) {\n    if (index < 0 || index >= this.documents.length) {\n      throw new Error(`Document index ${index} out of bounds (0-${this.documents.length - 1})`);\n    }\n    return this.documents[index];\n  }\n  /**\n   * Clears all indexed documents and resets the BM25 instance to its initial state.\n   */\n  clearDocuments() {\n    this.documents = [];\n    this.documentLengths = new Uint32Array(0);\n    this.termToIndex.clear();\n    this.documentFrequency = new Uint32Array(0);\n    this.averageDocLength = 0;\n    this.termFrequencies.clear();\n  }\n  /**\n   * Gets the total number of documents currently indexed.\n   * @returns The document count.\n   */\n  getDocumentCount() {\n    return this.documents.length;\n  }\n  /**\n   * Adds multiple documents sequentially by calling `addDocument` for each.\n   * This method processes documents sequentially in the main thread.\n   * @param docs - An array of documents to add.\n   */\n  async addDocuments(docs) {\n    return Promise.all(docs.map((doc) => this.addDocument(doc)));\n  }\n};\n\n// src/runtime.ts\nvar environmentSettings = {};\nvar Semaphore = class {\n  constructor(count) {\n    this.waiting = [];\n    this.permits = count;\n  }\n  async acquire() {\n    if (this.permits > 0) {\n      this.permits -= 1;\n      return Promise.resolve();\n    }\n    return new Promise((resolve) => {\n      this.waiting.push(resolve);\n    });\n  }\n  release() {\n    this.permits += 1;\n    const nextResolve = this.waiting.shift();\n    if (nextResolve && this.permits > 0) {\n      this.permits -= 1;\n      nextResolve();\n    }\n  }\n};\nvar AgentRuntime = class {\n  // Default value, can be overridden\n  constructor(opts) {\n    this.#conversationLength = 32;\n    this.actions = [];\n    this.evaluators = [];\n    this.providers = [];\n    this.plugins = [];\n    this.isInitialized = false;\n    this.events = /* @__PURE__ */ new Map();\n    this.stateCache = /* @__PURE__ */ new Map();\n    this.fetch = fetch;\n    this.services = /* @__PURE__ */ new Map();\n    this.serviceTypes = /* @__PURE__ */ new Map();\n    this.models = /* @__PURE__ */ new Map();\n    this.routes = [];\n    this.taskWorkers = /* @__PURE__ */ new Map();\n    this.sendHandlers = /* @__PURE__ */ new Map();\n    this.eventHandlers = /* @__PURE__ */ new Map();\n    // A map of all plugins available to the runtime, keyed by name, for dependency resolution.\n    this.allAvailablePlugins = /* @__PURE__ */ new Map();\n    // The initial list of plugins specified by the character configuration.\n    this.characterPlugins = [];\n    this.servicesInitQueue = /* @__PURE__ */ new Set();\n    this.maxWorkingMemoryEntries = 50;\n    this.agentId = opts.character?.id ?? opts?.agentId ?? stringToUuid(opts.character?.name ?? uuidv4() + opts.character?.username);\n    this.character = opts.character;\n    const logLevel = process.env.LOG_LEVEL || \"info\";\n    this.logger = createLogger({\n      agentName: this.character?.name,\n      logLevel\n    });\n    this.#conversationLength = opts.conversationLength ?? this.#conversationLength;\n    if (opts.adapter) {\n      this.registerDatabaseAdapter(opts.adapter);\n    }\n    this.fetch = opts.fetch ?? this.fetch;\n    this.settings = opts.settings ?? environmentSettings;\n    this.plugins = [];\n    this.characterPlugins = opts?.plugins ?? [];\n    if (opts.allAvailablePlugins) {\n      for (const plugin of opts.allAvailablePlugins) {\n        if (plugin?.name) {\n          this.allAvailablePlugins.set(plugin.name, plugin);\n        }\n      }\n    }\n    this.logger.debug(`Success: Agent ID: ${this.agentId}`);\n    this.currentRunId = void 0;\n    if (opts.settings?.MAX_WORKING_MEMORY_ENTRIES) {\n      this.maxWorkingMemoryEntries = parseInt(opts.settings.MAX_WORKING_MEMORY_ENTRIES, 10) || 50;\n    } else if (process.env.MAX_WORKING_MEMORY_ENTRIES) {\n      this.maxWorkingMemoryEntries = parseInt(process.env.MAX_WORKING_MEMORY_ENTRIES, 10) || 50;\n    }\n  }\n  #conversationLength;\n  /**\n   * Create a new run ID for tracking a sequence of model calls\n   */\n  createRunId() {\n    return uuidv4();\n  }\n  /**\n   * Start a new run for tracking prompts\n   */\n  startRun() {\n    this.currentRunId = this.createRunId();\n    return this.currentRunId;\n  }\n  /**\n   * End the current run\n   */\n  endRun() {\n    this.currentRunId = void 0;\n  }\n  /**\n   * Get the current run ID (creates one if it doesn't exist)\n   */\n  getCurrentRunId() {\n    if (!this.currentRunId) {\n      this.currentRunId = this.createRunId();\n    }\n    return this.currentRunId;\n  }\n  async registerPlugin(plugin) {\n    if (!plugin?.name) {\n      const errorMsg = \"Plugin or plugin name is undefined\";\n      this.logger.error(`*** registerPlugin: ${errorMsg}`);\n      throw new Error(`*** registerPlugin: ${errorMsg}`);\n    }\n    const existingPlugin = this.plugins.find((p) => p.name === plugin.name);\n    if (existingPlugin) {\n      this.logger.warn(\n        `${this.character.name}(${this.agentId}) - Plugin ${plugin.name} is already registered. Skipping re-registration.`\n      );\n      return;\n    }\n    this.plugins.push(plugin);\n    this.logger.debug(\n      `Success: Plugin ${plugin.name} added to active plugins for ${this.character.name}(${this.agentId}).`\n    );\n    if (plugin.init) {\n      try {\n        await plugin.init(plugin.config || {}, this);\n        this.logger.debug(`Success: Plugin ${plugin.name} initialized successfully`);\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        if (errorMessage.includes(\"API key\") || errorMessage.includes(\"environment variables\") || errorMessage.includes(\"Invalid plugin configuration\")) {\n          console.warn(`Plugin ${plugin.name} requires configuration. ${errorMessage}`);\n          console.warn(\n            \"Please check your environment variables and ensure all required API keys are set.\"\n          );\n          console.warn(\"You can set these in your .env file.\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    if (plugin.adapter) {\n      this.logger.debug(`Registering database adapter for plugin ${plugin.name}`);\n      this.registerDatabaseAdapter(plugin.adapter);\n    }\n    if (plugin.actions) {\n      for (const action of plugin.actions) {\n        this.registerAction(action);\n      }\n    }\n    if (plugin.evaluators) {\n      for (const evaluator of plugin.evaluators) {\n        this.registerEvaluator(evaluator);\n      }\n    }\n    if (plugin.providers) {\n      for (const provider of plugin.providers) {\n        this.registerProvider(provider);\n      }\n    }\n    if (plugin.models) {\n      for (const [modelType, handler] of Object.entries(plugin.models)) {\n        this.registerModel(\n          modelType,\n          handler,\n          plugin.name,\n          plugin?.priority\n        );\n      }\n    }\n    if (plugin.routes) {\n      for (const route of plugin.routes) {\n        this.routes.push(route);\n      }\n    }\n    if (plugin.events) {\n      for (const [eventName, eventHandlers] of Object.entries(plugin.events)) {\n        for (const eventHandler of eventHandlers) {\n          this.registerEvent(eventName, eventHandler);\n        }\n      }\n    }\n    if (plugin.services) {\n      for (const service of plugin.services) {\n        if (this.isInitialized) {\n          await this.registerService(service);\n        } else {\n          this.servicesInitQueue.add(service);\n        }\n      }\n    }\n  }\n  getAllServices() {\n    return this.services;\n  }\n  async stop() {\n    this.logger.debug(`runtime::stop - character ${this.character.name}`);\n    for (const [serviceName, services] of this.services) {\n      this.logger.debug(`runtime::stop - requesting service stop for ${serviceName}`);\n      for (const service of services) {\n        await service.stop();\n      }\n    }\n  }\n  async initialize() {\n    if (this.isInitialized) {\n      this.logger.warn(\"Agent already initialized\");\n      return;\n    }\n    const pluginRegistrationPromises = [];\n    const pluginsToLoad = this.characterPlugins;\n    for (const plugin of pluginsToLoad) {\n      if (plugin) {\n        pluginRegistrationPromises.push(this.registerPlugin(plugin));\n      }\n    }\n    await Promise.all(pluginRegistrationPromises);\n    if (!this.adapter) {\n      this.logger.error(\n        \"Database adapter not initialized. Make sure @elizaos/plugin-sql is included in your plugins.\"\n      );\n      throw new Error(\n        \"Database adapter not initialized. The SQL plugin (@elizaos/plugin-sql) is required for agent initialization. Please ensure it is included in your character configuration.\"\n      );\n    }\n    try {\n      await this.adapter.init();\n      this.logger.info(\"Running plugin migrations...\");\n      await this.runPluginMigrations();\n      this.logger.info(\"Plugin migrations completed.\");\n      const existingAgent = await this.ensureAgentExists(this.character);\n      if (!existingAgent) {\n        const errorMsg = `Agent ${this.character.name} does not exist in database after ensureAgentExists call`;\n        throw new Error(errorMsg);\n      }\n      let agentEntity = await this.getEntityById(this.agentId);\n      if (!agentEntity) {\n        const created = await this.createEntity({\n          id: this.agentId,\n          names: [this.character.name],\n          metadata: {},\n          agentId: existingAgent.id\n        });\n        if (!created) {\n          const errorMsg = `Failed to create entity for agent ${this.agentId}`;\n          throw new Error(errorMsg);\n        }\n        agentEntity = await this.getEntityById(this.agentId);\n        if (!agentEntity) throw new Error(`Agent entity not found for ${this.agentId}`);\n        this.logger.debug(`Success: Agent entity created successfully for ${this.character.name}`);\n      }\n    } catch (error) {\n      const errorMsg = error instanceof Error ? error.message : String(error);\n      this.logger.error(`Failed to create agent entity: ${errorMsg}`);\n      throw error;\n    }\n    try {\n      const room = await this.getRoom(this.agentId);\n      if (!room) {\n        await this.createRoom({\n          id: this.agentId,\n          name: this.character.name,\n          source: \"elizaos\",\n          type: \"SELF\" /* SELF */,\n          channelId: this.agentId,\n          serverId: this.agentId,\n          worldId: this.agentId\n        });\n      }\n      const participants = await this.adapter.getParticipantsForRoom(this.agentId);\n      if (!participants.includes(this.agentId)) {\n        const added = await this.addParticipant(this.agentId, this.agentId);\n        if (!added) {\n          const errorMsg = `Failed to add agent ${this.agentId} as participant to its own room`;\n          throw new Error(errorMsg);\n        }\n        this.logger.debug(`Agent ${this.character.name} linked to its own room successfully`);\n      }\n    } catch (error) {\n      const errorMsg = error instanceof Error ? error.message : String(error);\n      this.logger.error(`Failed to add agent as participant: ${errorMsg}`);\n      throw error;\n    }\n    const embeddingModel = this.getModel(ModelType.TEXT_EMBEDDING);\n    if (!embeddingModel) {\n      this.logger.warn(\n        `[AgentRuntime][${this.character.name}] No TEXT_EMBEDDING model registered. Skipping embedding dimension setup.`\n      );\n    } else {\n      await this.ensureEmbeddingDimension();\n    }\n    for (const service of this.servicesInitQueue) {\n      await this.registerService(service);\n    }\n    this.isInitialized = true;\n  }\n  async runPluginMigrations() {\n    const drizzle = this.adapter?.db;\n    if (!drizzle) {\n      this.logger.warn(\"Drizzle instance not found on adapter, skipping plugin migrations.\");\n      return;\n    }\n    const pluginsWithSchemas = this.plugins.filter((p) => p.schema);\n    this.logger.info(`Found ${pluginsWithSchemas.length} plugins with schemas to migrate.`);\n    for (const p of pluginsWithSchemas) {\n      if (p.schema) {\n        this.logger.info(`Running migrations for plugin: ${p.name}`);\n        try {\n          if (this.adapter && \"runMigrations\" in this.adapter) {\n            await this.adapter.runMigrations(p.schema, p.name);\n            this.logger.info(`Successfully migrated plugin: ${p.name}`);\n          }\n        } catch (error) {\n          this.logger.error(`Failed to migrate plugin ${p.name}:`, error);\n        }\n      }\n    }\n  }\n  async getConnection() {\n    if (!this.adapter) {\n      throw new Error(\"Database adapter not registered\");\n    }\n    return this.adapter.getConnection();\n  }\n  setSetting(key, value, secret = false) {\n    if (secret) {\n      if (!this.character.secrets) {\n        this.character.secrets = {};\n      }\n      this.character.secrets[key] = value;\n    } else {\n      if (!this.character.settings) {\n        this.character.settings = {};\n      }\n      this.character.settings[key] = value;\n    }\n  }\n  getSetting(key) {\n    const value = this.character.secrets?.[key] || this.character.settings?.[key] || this.character.settings?.secrets?.[key] || this.settings[key];\n    const decryptedValue = decryptStringValue(value, getSalt());\n    if (decryptedValue === \"true\") return true;\n    if (decryptedValue === \"false\") return false;\n    return decryptedValue || null;\n  }\n  getConversationLength() {\n    return this.#conversationLength;\n  }\n  registerDatabaseAdapter(adapter) {\n    if (this.adapter) {\n      this.logger.warn(\n        \"Database adapter already registered. Additional adapters will be ignored. This may lead to unexpected behavior.\"\n      );\n    } else {\n      this.adapter = adapter;\n      this.logger.debug(\"Success: Database adapter registered successfully.\");\n    }\n  }\n  registerProvider(provider) {\n    this.providers.push(provider);\n    this.logger.debug(`Success: Provider ${provider.name} registered successfully.`);\n  }\n  registerAction(action) {\n    this.logger.debug(\n      `${this.character.name}(${this.agentId}) - Registering action: ${action.name}`\n    );\n    if (this.actions.find((a) => a.name === action.name)) {\n      this.logger.warn(\n        `${this.character.name}(${this.agentId}) - Action ${action.name} already exists. Skipping registration.`\n      );\n    } else {\n      this.actions.push(action);\n      this.logger.debug(\n        `${this.character.name}(${this.agentId}) - Action ${action.name} registered successfully.`\n      );\n    }\n  }\n  registerEvaluator(evaluator) {\n    this.evaluators.push(evaluator);\n  }\n  // Helper functions for immutable action plan updates\n  updateActionPlan(plan, updates) {\n    return { ...plan, ...updates };\n  }\n  updateActionStep(plan, index, stepUpdates) {\n    if (!plan.steps || index < 0 || index >= plan.steps.length) {\n      this.logger.warn(\n        `Invalid step index: ${index} for plan with ${plan.steps?.length || 0} steps`\n      );\n      return plan;\n    }\n    return {\n      ...plan,\n      steps: plan.steps.map(\n        (step, i) => i === index ? { ...step, ...stepUpdates } : step\n      )\n    };\n  }\n  async processActions(message, responses, state, callback) {\n    const allActions = [];\n    for (const response of responses) {\n      if (response.content?.actions && response.content.actions.length > 0) {\n        allActions.push(...response.content.actions);\n      }\n    }\n    const hasMultipleActions = allActions.length > 1;\n    const runId = this.createRunId();\n    let actionPlan = null;\n    if (hasMultipleActions) {\n      const thought = responses[0]?.content?.thought || `Executing ${allActions.length} actions: ${allActions.join(\", \")}`;\n      actionPlan = {\n        runId,\n        totalSteps: allActions.length,\n        currentStep: 0,\n        steps: allActions.map((action) => ({\n          action,\n          status: \"pending\"\n        })),\n        thought,\n        startTime: Date.now()\n      };\n    }\n    let actionIndex = 0;\n    for (const response of responses) {\n      let normalizeAction = function(actionString) {\n        return actionString.toLowerCase().replace(/_/g, \"\");\n      };\n      if (!response.content?.actions || response.content.actions.length === 0) {\n        this.logger.warn(\"No action found in the response content.\");\n        continue;\n      }\n      const actions = response.content.actions;\n      const actionResults = [];\n      let accumulatedState = state;\n      this.logger.debug(`Found actions: ${this.actions.map((a) => normalizeAction(a.name))}`);\n      for (const responseAction of actions) {\n        if (actionPlan) {\n          actionPlan = this.updateActionPlan(actionPlan, { currentStep: actionIndex + 1 });\n        }\n        accumulatedState = await this.composeState(message, [\n          \"RECENT_MESSAGES\",\n          \"ACTION_STATE\"\n          // This will include the action plan\n        ]);\n        if (actionPlan && accumulatedState.data) {\n          accumulatedState.data.actionPlan = actionPlan;\n          accumulatedState.data.actionResults = actionResults;\n        }\n        this.logger.debug(`Success: Calling action: ${responseAction}`);\n        const normalizedResponseAction = normalizeAction(responseAction);\n        let action = this.actions.find(\n          (a) => normalizeAction(a.name) === normalizedResponseAction\n        );\n        if (!action) {\n          action = this.actions.find(\n            (a) => normalizeAction(a.name).includes(normalizedResponseAction) || normalizedResponseAction.includes(normalizeAction(a.name))\n          );\n        }\n        if (action) {\n          this.logger.debug(`Success: Found action: ${action?.name}`);\n        } else {\n          this.logger.debug(\"Attempting to find action in similes.\");\n          for (const _action of this.actions) {\n            const exactSimileMatch = _action.similes?.find(\n              (simile) => normalizeAction(simile) === normalizedResponseAction\n            );\n            if (exactSimileMatch) {\n              action = _action;\n              this.logger.debug(`Success: Action found in similes (exact match): ${action.name}`);\n              break;\n            }\n            const fuzzySimileMatch = _action.similes?.find(\n              (simile) => normalizeAction(simile).includes(normalizedResponseAction) || normalizedResponseAction.includes(normalizeAction(simile))\n            );\n            if (fuzzySimileMatch) {\n              action = _action;\n              this.logger.debug(`Success: Action found in similes (fuzzy match): ${action.name}`);\n              break;\n            }\n          }\n        }\n        if (!action) {\n          const errorMsg = `No action found for: ${responseAction}`;\n          this.logger.error(errorMsg);\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: \"failed\",\n              error: errorMsg\n            });\n          }\n          const actionMemory = {\n            id: uuidv4(),\n            entityId: message.entityId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            content: {\n              thought: errorMsg,\n              source: \"auto\",\n              type: \"action_result\",\n              actionName: responseAction,\n              actionStatus: \"failed\",\n              runId\n            }\n          };\n          await this.createMemory(actionMemory, \"messages\");\n          actionIndex++;\n          continue;\n        }\n        if (!action.handler) {\n          this.logger.error(`Action ${action.name} has no handler.`);\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: \"failed\",\n              error: \"No handler\"\n            });\n          }\n          actionIndex++;\n          continue;\n        }\n        try {\n          this.logger.debug(`Executing handler for action: ${action.name}`);\n          const actionId = uuidv4();\n          this.currentActionContext = {\n            actionName: action.name,\n            actionId,\n            prompts: []\n          };\n          const actionContext = {\n            previousResults: actionResults,\n            getPreviousResult: (actionName) => {\n              return actionResults.find((r) => r.data?.actionName === actionName);\n            }\n          };\n          const options2 = {\n            context: actionContext\n          };\n          if (actionPlan) {\n            options2.actionPlan = {\n              totalSteps: actionPlan.totalSteps,\n              currentStep: actionPlan.currentStep,\n              steps: actionPlan.steps,\n              thought: actionPlan.thought\n            };\n          }\n          const result = await action.handler(\n            this,\n            message,\n            accumulatedState,\n            options2,\n            callback,\n            responses\n          );\n          const isLegacyReturn = result === void 0 || result === null || typeof result === \"boolean\";\n          let actionResult = null;\n          if (!isLegacyReturn) {\n            if (typeof result === \"object\" && result !== null && (\"values\" in result || \"data\" in result || \"text\" in result)) {\n              actionResult = {\n                success: true,\n                // Default to true if not specified\n                ...result\n              };\n            } else {\n              actionResult = {\n                success: true,\n                // Default success for legacy results\n                data: {\n                  actionName: action.name,\n                  legacyResult: result\n                }\n              };\n            }\n            actionResults.push(actionResult);\n            if (actionResult.values) {\n              accumulatedState = {\n                ...accumulatedState,\n                values: { ...accumulatedState.values, ...actionResult.values },\n                data: {\n                  ...accumulatedState.data || {},\n                  actionResults: [...accumulatedState.data?.actionResults || [], actionResult],\n                  actionPlan\n                }\n              };\n            }\n            if (actionResult && accumulatedState.data) {\n              if (!accumulatedState.data.workingMemory) accumulatedState.data.workingMemory = {};\n              const memoryKey = `action_${responseAction}_${uuidv4()}`;\n              const memoryEntry = {\n                actionName: action.name,\n                result: actionResult,\n                timestamp: Date.now()\n              };\n              accumulatedState.data.workingMemory[memoryKey] = memoryEntry;\n              const entries = Object.entries(accumulatedState.data.workingMemory);\n              if (entries.length > this.maxWorkingMemoryEntries) {\n                const sorted = entries.sort((a, b) => {\n                  const entryA = a[1];\n                  const entryB = b[1];\n                  const timestampA = entryA?.timestamp ?? 0;\n                  const timestampB = entryB?.timestamp ?? 0;\n                  return timestampB - timestampA;\n                });\n                accumulatedState.data.workingMemory = Object.fromEntries(\n                  sorted.slice(0, this.maxWorkingMemoryEntries)\n                );\n              }\n            }\n            if (actionPlan && actionPlan.steps[actionIndex]) {\n              actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n                status: \"completed\",\n                result: actionResult\n              });\n            }\n          }\n          const actionMemory = {\n            id: actionId,\n            entityId: this.agentId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            content: {\n              text: actionResult?.text || `Executed action: ${action.name}`,\n              source: \"action\",\n              type: \"action_result\",\n              actionName: action.name,\n              actionStatus: actionResult?.success ? \"completed\" : \"failed\",\n              actionResult: isLegacyReturn ? { legacy: result } : actionResult,\n              runId,\n              ...actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought\n              }\n            },\n            metadata: {\n              type: \"action_result\",\n              actionName: action.name,\n              runId,\n              actionId,\n              ...actionPlan && {\n                totalSteps: actionPlan.totalSteps,\n                currentStep: actionPlan.currentStep\n              }\n            }\n          };\n          await this.createMemory(actionMemory, \"messages\");\n          this.logger.debug(`Action ${action.name} completed`, {\n            isLegacyReturn,\n            result: isLegacyReturn ? result : void 0,\n            hasValues: actionResult ? !!actionResult.values : false,\n            hasData: actionResult ? !!actionResult.data : false,\n            hasText: actionResult ? !!actionResult.text : false\n          });\n          await this.adapter.log({\n            entityId: message.entityId,\n            roomId: message.roomId,\n            type: \"action\",\n            body: {\n              action: action.name,\n              actionId,\n              message: message.content.text,\n              messageId: message.id,\n              state: accumulatedState,\n              responses,\n              result: isLegacyReturn ? { legacy: result } : actionResult,\n              isLegacyReturn,\n              prompts: this.currentActionContext?.prompts || [],\n              promptCount: this.currentActionContext?.prompts.length || 0,\n              runId,\n              ...actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought\n              }\n            }\n          });\n          this.currentActionContext = void 0;\n        } catch (error) {\n          const errorMessage = error instanceof Error ? error.message : String(error);\n          this.logger.error(error);\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: \"failed\",\n              error: errorMessage\n            });\n          }\n          this.currentActionContext = void 0;\n          const errorResult = {\n            success: false,\n            // Required field\n            data: {\n              actionName: action.name,\n              error: errorMessage,\n              errorObject: error\n            }\n          };\n          actionResults.push(errorResult);\n          const actionMemory = {\n            id: uuidv4(),\n            content: {\n              thought: errorMessage,\n              source: \"auto\",\n              type: \"action_result\",\n              actionName: action.name,\n              actionStatus: \"failed\",\n              error: errorMessage,\n              runId,\n              ...actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought\n              }\n            },\n            entityId: this.agentId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            metadata: {\n              type: \"action_result\",\n              actionName: action.name,\n              runId,\n              error: true,\n              ...actionPlan && {\n                totalSteps: actionPlan.totalSteps,\n                currentStep: actionPlan.currentStep\n              }\n            }\n          };\n          await this.createMemory(actionMemory, \"messages\");\n          if (error?.critical || error?.code === \"CRITICAL_ERROR\") {\n            throw error;\n          }\n        }\n        actionIndex++;\n      }\n      if (message.id) {\n        this.stateCache.set(`${message.id}_action_results`, {\n          values: { actionResults },\n          data: { actionResults, actionPlan },\n          text: JSON.stringify(actionResults)\n        });\n      }\n    }\n  }\n  async evaluate(message, state, didRespond, callback, responses) {\n    const evaluatorPromises = this.evaluators.map(async (evaluator) => {\n      if (!evaluator.handler) {\n        return null;\n      }\n      if (!didRespond && !evaluator.alwaysRun) {\n        return null;\n      }\n      const result = await evaluator.validate(this, message, state);\n      if (result) {\n        return evaluator;\n      }\n      return null;\n    });\n    const evaluators = (await Promise.all(evaluatorPromises)).filter(Boolean);\n    if (evaluators.length === 0) {\n      return [];\n    }\n    state = await this.composeState(message, [\"RECENT_MESSAGES\", \"EVALUATORS\"]);\n    await Promise.all(\n      evaluators.map(async (evaluator) => {\n        if (evaluator.handler) {\n          await evaluator.handler(this, message, state, {}, callback, responses);\n          this.adapter.log({\n            entityId: message.entityId,\n            roomId: message.roomId,\n            type: \"evaluator\",\n            body: {\n              evaluator: evaluator.name,\n              messageId: message.id,\n              message: message.content.text,\n              state\n            }\n          });\n        }\n      })\n    );\n    return evaluators;\n  }\n  // highly SQL optimized queries\n  async ensureConnections(entities, rooms, source, world) {\n    if (!entities) {\n      console.trace();\n      this.logger.error(\"ensureConnections - no entities\");\n      return;\n    }\n    if (!rooms || rooms.length === 0) {\n      console.trace();\n      this.logger.error(\"ensureConnections - no rooms\");\n      return;\n    }\n    await this.ensureWorldExists({ ...world, agentId: this.agentId });\n    const firstRoom = rooms[0];\n    const chunkArray = (arr, size) => arr.reduce((chunks, item, i) => {\n      if (i % size === 0) chunks.push([]);\n      chunks[chunks.length - 1].push(item);\n      return chunks;\n    }, []);\n    const roomIds = rooms.map((r2) => r2.id);\n    const roomExistsCheck = await this.getRoomsByIds(roomIds);\n    const roomsIdExists = roomExistsCheck.map((r2) => r2.id);\n    const roomsToCreate = roomIds.filter((id) => !roomsIdExists.includes(id));\n    const rf = {\n      worldId: world.id,\n      serverId: world.serverId,\n      source,\n      agentId: this.agentId\n    };\n    if (roomsToCreate.length) {\n      this.logger.debug(\n        \"runtime/ensureConnections - create\",\n        roomsToCreate.length.toLocaleString(),\n        \"rooms\"\n      );\n      const roomObjsToCreate = rooms.filter((r2) => roomsToCreate.includes(r2.id)).map((r2) => ({ ...r2, ...rf }));\n      await this.createRooms(roomObjsToCreate);\n    }\n    const entityIds = entities.map((e) => e.id);\n    const entityExistsCheck = await this.adapter.getEntitiesByIds(entityIds);\n    const entitiesToUpdate = entityExistsCheck.map((e) => e.id);\n    const entitiesToCreate = entities.filter((e) => !entitiesToUpdate.includes(e.id));\n    const r = {\n      roomId: firstRoom.id,\n      channelId: firstRoom.channelId,\n      type: firstRoom.type\n    };\n    const wf = {\n      worldId: world.id,\n      serverId: world.serverId\n    };\n    if (entitiesToCreate.length) {\n      this.logger.debug(\n        \"runtime/ensureConnections - creating\",\n        entitiesToCreate.length.toLocaleString(),\n        \"entities...\"\n      );\n      const ef = {\n        ...r,\n        ...wf,\n        source,\n        agentId: this.agentId\n      };\n      const entitiesToCreateWFields = entitiesToCreate.map((e) => ({ ...e, ...ef }));\n      const batches = chunkArray(entitiesToCreateWFields, 5e3);\n      for (const batch of batches) {\n        await this.createEntities(batch);\n      }\n    }\n    await this.ensureParticipantInRoom(this.agentId, firstRoom.id);\n    const entityIdsInFirstRoom = await this.getParticipantsForRoom(firstRoom.id);\n    const entityIdsInFirstRoomFiltered = entityIdsInFirstRoom.filter(Boolean);\n    const missingIdsInRoom = entityIds.filter((id) => !entityIdsInFirstRoomFiltered.includes(id));\n    if (missingIdsInRoom.length) {\n      this.logger.debug(\n        \"runtime/ensureConnections - Missing\",\n        missingIdsInRoom.length.toLocaleString(),\n        \"connections in\",\n        firstRoom.id\n      );\n      await this.addParticipantsRoom(missingIdsInRoom, firstRoom.id);\n    }\n    this.logger.success(`Success: Successfully connected world`);\n  }\n  async ensureConnection({\n    entityId,\n    roomId,\n    worldId,\n    worldName,\n    userName,\n    name,\n    source,\n    type,\n    channelId,\n    serverId,\n    userId,\n    metadata\n  }) {\n    if (!worldId && serverId) {\n      worldId = createUniqueUuid(this.agentId + serverId, serverId);\n    }\n    const names3 = [name, userName].filter(Boolean);\n    const entityMetadata = {\n      [source]: {\n        id: userId,\n        name,\n        userName\n      }\n    };\n    try {\n      const entity = await this.getEntityById(entityId);\n      if (!entity) {\n        try {\n          const success = await this.createEntity({\n            id: entityId,\n            names: names3,\n            metadata: entityMetadata,\n            agentId: this.agentId\n          });\n          if (success) {\n            this.logger.debug(\n              `Created new entity ${entityId} for user ${name || userName || \"unknown\"}`\n            );\n          } else {\n            throw new Error(`Failed to create entity ${entityId}`);\n          }\n        } catch (error) {\n          if (error.message?.includes(\"duplicate key\") || error.code === \"23505\") {\n            this.logger.debug(\n              `Entity ${entityId} exists in database but not for this agent. This is normal in multi-agent setups.`\n            );\n          } else {\n            throw error;\n          }\n        }\n      } else {\n        await this.adapter.updateEntity({\n          id: entityId,\n          names: [.../* @__PURE__ */ new Set([...entity.names || [], ...names3])].filter(Boolean),\n          metadata: {\n            ...entity.metadata,\n            [source]: {\n              ...entity.metadata?.[source],\n              id: userId,\n              name,\n              userName\n            }\n          },\n          agentId: this.agentId\n        });\n      }\n      await this.ensureWorldExists({\n        id: worldId,\n        name: worldName || serverId ? `World for server ${serverId}` : `World for room ${roomId}`,\n        agentId: this.agentId,\n        serverId: serverId || \"default\",\n        metadata\n      });\n      await this.ensureRoomExists({\n        id: roomId,\n        name,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId\n      });\n      try {\n        await this.ensureParticipantInRoom(entityId, roomId);\n      } catch (error) {\n        if (error.message?.includes(\"not found\")) {\n          const added = await this.addParticipant(entityId, roomId);\n          if (!added) {\n            throw new Error(`Failed to add participant ${entityId} to room ${roomId}`);\n          }\n          this.logger.debug(`Added participant ${entityId} to room ${roomId} directly`);\n        } else {\n          throw error;\n        }\n      }\n      await this.ensureParticipantInRoom(this.agentId, roomId);\n      this.logger.debug(`Success: Successfully connected entity ${entityId} in room ${roomId}`);\n    } catch (error) {\n      this.logger.error(\n        `Failed to ensure connection: ${error instanceof Error ? error.message : String(error)}`\n      );\n      throw error;\n    }\n  }\n  async ensureParticipantInRoom(entityId, roomId) {\n    const entity = await this.getEntityById(entityId);\n    if (!entity && entityId !== this.agentId) {\n      this.logger.warn(\n        `Entity ${entityId} not directly accessible to agent ${this.agentId}. Will attempt to add as participant anyway.`\n      );\n    } else if (!entity && entityId === this.agentId) {\n      throw new Error(`Agent entity ${entityId} not found, cannot add as participant.`);\n    } else if (!entity) {\n      throw new Error(`User entity ${entityId} not found, cannot add as participant.`);\n    }\n    const participants = await this.adapter.getParticipantsForRoom(roomId);\n    if (!participants.includes(entityId)) {\n      const added = await this.addParticipant(entityId, roomId);\n      if (!added) {\n        throw new Error(`Failed to add participant ${entityId} to room ${roomId}`);\n      }\n      if (entityId === this.agentId) {\n        this.logger.debug(`Agent ${this.character.name} linked to room ${roomId} successfully.`);\n      } else {\n        this.logger.debug(`User ${entityId} linked to room ${roomId} successfully.`);\n      }\n    }\n  }\n  async removeParticipant(entityId, roomId) {\n    return await this.adapter.removeParticipant(entityId, roomId);\n  }\n  async getParticipantsForEntity(entityId) {\n    return await this.adapter.getParticipantsForEntity(entityId);\n  }\n  async getParticipantsForRoom(roomId) {\n    return await this.adapter.getParticipantsForRoom(roomId);\n  }\n  async addParticipant(entityId, roomId) {\n    return await this.adapter.addParticipantsRoom([entityId], roomId);\n  }\n  async addParticipantsRoom(entityIds, roomId) {\n    return await this.adapter.addParticipantsRoom(entityIds, roomId);\n  }\n  /**\n   * Ensure the existence of a world.\n   */\n  async ensureWorldExists({ id, name, serverId, metadata }) {\n    const world = await this.getWorld(id);\n    if (!world) {\n      this.logger.debug(\"Creating world:\", {\n        id,\n        name,\n        serverId,\n        agentId: this.agentId\n      });\n      await this.adapter.createWorld({\n        id,\n        name,\n        agentId: this.agentId,\n        serverId: serverId || \"default\",\n        metadata\n      });\n      this.logger.debug(`World ${id} created successfully.`);\n    }\n  }\n  async ensureRoomExists({ id, name, source, type, channelId, serverId, worldId, metadata }) {\n    if (!worldId) throw new Error(\"worldId is required\");\n    const room = await this.getRoom(id);\n    if (!room) {\n      await this.createRoom({\n        id,\n        name,\n        agentId: this.agentId,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId,\n        metadata\n      });\n      this.logger.debug(`Room ${id} created successfully.`);\n    }\n  }\n  async composeState(message, includeList = null, onlyInclude = false, skipCache = false) {\n    const filterList = onlyInclude ? includeList : null;\n    const emptyObj = {\n      values: {},\n      data: {},\n      text: \"\"\n    };\n    const cachedState = skipCache ? emptyObj : await this.stateCache.get(message.id) || emptyObj;\n    const providerNames = /* @__PURE__ */ new Set();\n    if (filterList && filterList.length > 0) {\n      filterList.forEach((name) => providerNames.add(name));\n    } else {\n      this.providers.filter((p) => !p.private && !p.dynamic).forEach((p) => providerNames.add(p.name));\n    }\n    if (!filterList && includeList && includeList.length > 0) {\n      includeList.forEach((name) => providerNames.add(name));\n    }\n    const providersToGet = Array.from(\n      new Set(this.providers.filter((p) => providerNames.has(p.name)))\n    ).sort((a, b) => (a.position || 0) - (b.position || 0));\n    const providerData = await Promise.all(\n      providersToGet.map(async (provider) => {\n        const start = Date.now();\n        try {\n          const result = await provider.get(this, message, cachedState);\n          const duration = Date.now() - start;\n          this.logger.debug(`${provider.name} Provider took ${duration}ms to respond`);\n          return {\n            ...result,\n            providerName: provider.name\n          };\n        } catch (error) {\n          console.error(\"provider error\", provider.name, error);\n          return { values: {}, text: \"\", data: {}, providerName: provider.name };\n        }\n      })\n    );\n    const currentProviderResults = { ...cachedState.data?.providers || {} };\n    for (const freshResult of providerData) {\n      currentProviderResults[freshResult.providerName] = freshResult;\n    }\n    const orderedTexts = [];\n    for (const provider of providersToGet) {\n      const result = currentProviderResults[provider.name];\n      if (result && result.text && result.text.trim() !== \"\") {\n        orderedTexts.push(result.text);\n      }\n    }\n    const providersText = orderedTexts.join(\"\\n\");\n    const aggregatedStateValues = { ...cachedState.values || {} };\n    for (const provider of providersToGet) {\n      const providerResult = currentProviderResults[provider.name];\n      if (providerResult && providerResult.values && typeof providerResult.values === \"object\") {\n        Object.assign(aggregatedStateValues, providerResult.values);\n      }\n    }\n    for (const providerName in currentProviderResults) {\n      if (!providersToGet.some((p) => p.name === providerName)) {\n        const providerResult = currentProviderResults[providerName];\n        if (providerResult && providerResult.values && typeof providerResult.values === \"object\") {\n          Object.assign(aggregatedStateValues, providerResult.values);\n        }\n      }\n    }\n    const newState = {\n      values: {\n        ...aggregatedStateValues,\n        providers: providersText\n      },\n      data: {\n        ...cachedState.data || {},\n        providers: currentProviderResults\n      },\n      text: providersText\n    };\n    this.stateCache.set(message.id, newState);\n    return newState;\n  }\n  getService(serviceName) {\n    const serviceInstances = this.services.get(serviceName);\n    if (!serviceInstances || serviceInstances.length === 0) {\n      this.logger.debug(`Service ${serviceName} not found`);\n      return null;\n    }\n    return serviceInstances[0];\n  }\n  /**\n   * Type-safe service getter that ensures the correct service type is returned\n   * @template T - The expected service class type\n   * @param serviceName - The service type name\n   * @returns The service instance with proper typing, or null if not found\n   */\n  getTypedService(serviceName) {\n    return this.getService(serviceName);\n  }\n  /**\n   * Get all services of a specific type\n   * @template T - The expected service class type\n   * @param serviceName - The service type name\n   * @returns Array of service instances with proper typing\n   */\n  getServicesByType(serviceName) {\n    const serviceInstances = this.services.get(serviceName);\n    if (!serviceInstances || serviceInstances.length === 0) {\n      this.logger.debug(`No services found for type ${serviceName}`);\n      return [];\n    }\n    return serviceInstances;\n  }\n  /**\n   * Get all registered service types\n   * @returns Array of registered service type names\n   */\n  getRegisteredServiceTypes() {\n    return Array.from(this.services.keys());\n  }\n  /**\n   * Check if a service type is registered\n   * @param serviceType - The service type to check\n   * @returns true if the service is registered\n   */\n  hasService(serviceType) {\n    const serviceInstances = this.services.get(serviceType);\n    return serviceInstances !== void 0 && serviceInstances.length > 0;\n  }\n  async registerService(serviceDef) {\n    const serviceType = serviceDef.serviceType;\n    if (!serviceType) {\n      this.logger.warn(\n        `Service ${serviceDef.name} is missing serviceType. Please define a static serviceType property.`\n      );\n      return;\n    }\n    this.logger.debug(\n      `${this.character.name}(${this.agentId}) - Registering service:`,\n      serviceType\n    );\n    try {\n      const serviceInstance = await serviceDef.start(this);\n      if (!this.services.has(serviceType)) {\n        this.services.set(serviceType, []);\n      }\n      if (!this.serviceTypes.has(serviceType)) {\n        this.serviceTypes.set(serviceType, []);\n      }\n      this.services.get(serviceType).push(serviceInstance);\n      this.serviceTypes.get(serviceType).push(serviceDef);\n      if (typeof serviceDef.registerSendHandlers === \"function\") {\n        serviceDef.registerSendHandlers(this, serviceInstance);\n      }\n      this.logger.debug(\n        `${this.character.name}(${this.agentId}) - Service ${serviceType} registered successfully`\n      );\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      this.logger.error(\n        `${this.character.name}(${this.agentId}) - Failed to register service ${serviceType}: ${errorMessage}`\n      );\n      throw error;\n    }\n  }\n  registerModel(modelType, handler, provider, priority) {\n    const modelKey = typeof modelType === \"string\" ? modelType : ModelType[modelType];\n    if (!this.models.has(modelKey)) {\n      this.models.set(modelKey, []);\n    }\n    const registrationOrder = Date.now();\n    this.models.get(modelKey)?.push({\n      handler,\n      provider,\n      priority: priority || 0,\n      registrationOrder\n    });\n    this.models.get(modelKey)?.sort((a, b) => {\n      if ((b.priority || 0) !== (a.priority || 0)) {\n        return (b.priority || 0) - (a.priority || 0);\n      }\n      return a.registrationOrder - b.registrationOrder;\n    });\n  }\n  getModel(modelType, provider) {\n    const modelKey = typeof modelType === \"string\" ? modelType : ModelType[modelType];\n    const models = this.models.get(modelKey);\n    if (!models?.length) {\n      return void 0;\n    }\n    if (provider) {\n      const modelWithProvider = models.find((m) => m.provider === provider);\n      if (modelWithProvider) {\n        this.logger.debug(\n          `[AgentRuntime][${this.character.name}] Using model ${modelKey} from provider ${provider}`\n        );\n        return modelWithProvider.handler;\n      } else {\n        this.logger.warn(\n          `[AgentRuntime][${this.character.name}] No model found for provider ${provider}`\n        );\n      }\n    }\n    this.logger.debug(\n      `[AgentRuntime][${this.character.name}] Using model ${modelKey} from provider ${models[0].provider}`\n    );\n    return models[0].handler;\n  }\n  /**\n   * Retrieves model configuration settings from character settings with support for\n   * model-specific overrides and default fallbacks.\n   *\n   * Precedence order (highest to lowest):\n   * 1. Model-specific settings (e.g., TEXT_SMALL_TEMPERATURE)\n   * 2. Default settings (e.g., DEFAULT_TEMPERATURE)\n   * 3. Legacy settings for backwards compatibility (e.g., MODEL_TEMPERATURE)\n   *\n   * @param modelType The specific model type to get settings for\n   * @returns Object containing model parameters if they exist, or null if no settings are configured\n   */\n  getModelSettings(modelType) {\n    const modelSettings = {};\n    const getSettingWithFallback = (param, legacyKey) => {\n      if (modelType) {\n        const modelSpecificKey = `${modelType}_${param}`;\n        const modelValue = this.getSetting(modelSpecificKey);\n        if (modelValue !== null && modelValue !== void 0) {\n          const numValue = Number(modelValue);\n          if (!isNaN(numValue)) {\n            return numValue;\n          }\n        }\n      }\n      const defaultKey = `DEFAULT_${param}`;\n      const defaultValue = this.getSetting(defaultKey);\n      if (defaultValue !== null && defaultValue !== void 0) {\n        const numValue = Number(defaultValue);\n        if (!isNaN(numValue)) {\n          return numValue;\n        }\n      }\n      const legacyValue = this.getSetting(legacyKey);\n      if (legacyValue !== null && legacyValue !== void 0) {\n        const numValue = Number(legacyValue);\n        if (!isNaN(numValue)) {\n          return numValue;\n        }\n      }\n      return null;\n    };\n    const maxTokens = getSettingWithFallback(\"MAX_TOKENS\", MODEL_SETTINGS.MODEL_MAX_TOKEN);\n    const temperature = getSettingWithFallback(\"TEMPERATURE\", MODEL_SETTINGS.MODEL_TEMPERATURE);\n    const frequencyPenalty = getSettingWithFallback(\n      \"FREQUENCY_PENALTY\",\n      MODEL_SETTINGS.MODEL_FREQ_PENALTY\n    );\n    const presencePenalty = getSettingWithFallback(\n      \"PRESENCE_PENALTY\",\n      MODEL_SETTINGS.MODEL_PRESENCE_PENALTY\n    );\n    if (maxTokens !== null) modelSettings.maxTokens = maxTokens;\n    if (temperature !== null) modelSettings.temperature = temperature;\n    if (frequencyPenalty !== null) modelSettings.frequencyPenalty = frequencyPenalty;\n    if (presencePenalty !== null) modelSettings.presencePenalty = presencePenalty;\n    return Object.keys(modelSettings).length > 0 ? modelSettings : null;\n  }\n  async useModel(modelType, params, provider) {\n    const modelKey = typeof modelType === \"string\" ? modelType : ModelType[modelType];\n    const promptContent = params?.prompt || params?.input || (Array.isArray(params?.messages) ? JSON.stringify(params.messages) : null);\n    const model = this.getModel(modelKey, provider);\n    if (!model) {\n      const errorMsg = `No handler found for delegate type: ${modelKey}`;\n      throw new Error(errorMsg);\n    }\n    this.logger.debug(\n      `[useModel] ${modelKey} input: ` + JSON.stringify(params, safeReplacer(), 2).replace(/\\\\n/g, \"\\n\")\n    );\n    let paramsWithRuntime;\n    if (params === null || params === void 0 || typeof params !== \"object\" || Array.isArray(params) || typeof Buffer !== \"undefined\" && Buffer.isBuffer(params)) {\n      paramsWithRuntime = params;\n    } else {\n      const modelSettings = this.getModelSettings(modelKey);\n      if (modelSettings) {\n        paramsWithRuntime = {\n          ...modelSettings,\n          // Apply model settings first (includes defaults and model-specific)\n          ...params,\n          // Then apply specific params (allowing overrides)\n          runtime: this\n        };\n      } else {\n        paramsWithRuntime = {\n          ...params,\n          runtime: this\n        };\n      }\n    }\n    const startTime = performance.now();\n    try {\n      const response = await model(this, paramsWithRuntime);\n      const elapsedTime = performance.now() - startTime;\n      this.logger.debug(\n        `[useModel] ${modelKey} output (took ${Number(elapsedTime.toFixed(2)).toLocaleString()}ms):`,\n        Array.isArray(response) ? `${JSON.stringify(response.slice(0, 5))}...${JSON.stringify(response.slice(-5))} (${response.length} items)` : JSON.stringify(response, safeReplacer(), 2).replace(/\\\\n/g, \"\\n\")\n      );\n      if (modelKey !== ModelType.TEXT_EMBEDDING && promptContent) {\n        if (this.currentActionContext) {\n          this.currentActionContext.prompts.push({\n            modelType: modelKey,\n            prompt: promptContent,\n            timestamp: Date.now()\n          });\n        }\n      }\n      this.adapter.log({\n        entityId: this.agentId,\n        roomId: this.agentId,\n        body: {\n          modelType,\n          modelKey,\n          params: {\n            ...typeof params === \"object\" && !Array.isArray(params) && params ? params : {},\n            prompt: promptContent\n          },\n          prompt: promptContent,\n          runId: this.getCurrentRunId(),\n          timestamp: Date.now(),\n          executionTime: elapsedTime,\n          provider: provider || this.models.get(modelKey)?.[0]?.provider || \"unknown\",\n          actionContext: this.currentActionContext ? {\n            actionName: this.currentActionContext.actionName,\n            actionId: this.currentActionContext.actionId\n          } : void 0,\n          response: Array.isArray(response) && response.every((x) => typeof x === \"number\") ? \"[array]\" : response\n        },\n        type: `useModel:${modelKey}`\n      });\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n  registerEvent(event, handler) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)?.push(handler);\n  }\n  getEvent(event) {\n    return this.events.get(event);\n  }\n  async emitEvent(event, params) {\n    const events = Array.isArray(event) ? event : [event];\n    for (const eventName of events) {\n      const eventHandlers = this.events.get(eventName);\n      if (!eventHandlers) {\n        continue;\n      }\n      try {\n        await Promise.all(eventHandlers.map((handler) => handler(params)));\n      } catch (error) {\n        this.logger.error(`Error during emitEvent for ${eventName} (handler execution):`, error);\n      }\n    }\n  }\n  async ensureEmbeddingDimension() {\n    this.logger.debug(`[AgentRuntime][${this.character.name}] Starting ensureEmbeddingDimension`);\n    if (!this.adapter) {\n      throw new Error(\n        `[AgentRuntime][${this.character.name}] Database adapter not initialized before ensureEmbeddingDimension`\n      );\n    }\n    try {\n      const model = this.getModel(ModelType.TEXT_EMBEDDING);\n      if (!model) {\n        throw new Error(\n          `[AgentRuntime][${this.character.name}] No TEXT_EMBEDDING model registered`\n        );\n      }\n      this.logger.debug(`[AgentRuntime][${this.character.name}] Getting embedding dimensions`);\n      const embedding = await this.useModel(ModelType.TEXT_EMBEDDING, null);\n      if (!embedding || !embedding.length) {\n        throw new Error(`[AgentRuntime][${this.character.name}] Invalid embedding received`);\n      }\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Setting embedding dimension: ${embedding.length}`\n      );\n      await this.adapter.ensureEmbeddingDimension(embedding.length);\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Successfully set embedding dimension`\n      );\n    } catch (error) {\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Error in ensureEmbeddingDimension:`,\n        error\n      );\n      throw error;\n    }\n  }\n  registerTaskWorker(taskHandler) {\n    if (this.taskWorkers.has(taskHandler.name)) {\n      this.logger.warn(\n        `Task definition ${taskHandler.name} already registered. Will be overwritten.`\n      );\n    }\n    this.taskWorkers.set(taskHandler.name, taskHandler);\n  }\n  getTaskWorker(name) {\n    return this.taskWorkers.get(name);\n  }\n  get db() {\n    return this.adapter.db;\n  }\n  async init() {\n    await this.adapter.init();\n  }\n  async close() {\n    await this.adapter.close();\n  }\n  async getAgent(agentId) {\n    return await this.adapter.getAgent(agentId);\n  }\n  async getAgents() {\n    return await this.adapter.getAgents();\n  }\n  async createAgent(agent) {\n    return await this.adapter.createAgent(agent);\n  }\n  async updateAgent(agentId, agent) {\n    return await this.adapter.updateAgent(agentId, agent);\n  }\n  async deleteAgent(agentId) {\n    return await this.adapter.deleteAgent(agentId);\n  }\n  async ensureAgentExists(agent) {\n    if (!agent.name) {\n      throw new Error(\"Agent name is required\");\n    }\n    const agents = await this.adapter.getAgents();\n    const existingAgentId = agents.find((a) => a.name === agent.name)?.id;\n    if (existingAgentId) {\n      const updatedAgent = {\n        ...agent,\n        id: existingAgentId,\n        updatedAt: Date.now()\n      };\n      await this.adapter.updateAgent(existingAgentId, updatedAgent);\n      const existingAgent = await this.adapter.getAgent(existingAgentId);\n      if (!existingAgent) {\n        throw new Error(`Failed to retrieve agent after update: ${existingAgentId}`);\n      }\n      this.logger.debug(`Updated existing agent ${agent.name} on restart`);\n      return existingAgent;\n    }\n    const newAgent = {\n      ...agent,\n      id: stringToUuid(agent.name)\n    };\n    const created = await this.adapter.createAgent(newAgent);\n    if (!created) {\n      throw new Error(`Failed to create agent: ${agent.name}`);\n    }\n    this.logger.debug(`Created new agent ${agent.name}`);\n    return newAgent;\n  }\n  async getEntityById(entityId) {\n    const entities = await this.adapter.getEntitiesByIds([entityId]);\n    if (!entities?.length) return null;\n    return entities[0];\n  }\n  async getEntitiesByIds(entityIds) {\n    return await this.adapter.getEntitiesByIds(entityIds);\n  }\n  async getEntitiesForRoom(roomId, includeComponents) {\n    return await this.adapter.getEntitiesForRoom(roomId, includeComponents);\n  }\n  async createEntity(entity) {\n    if (!entity.agentId) {\n      entity.agentId = this.agentId;\n    }\n    return await this.createEntities([entity]);\n  }\n  async createEntities(entities) {\n    entities.forEach((e) => {\n      e.agentId = this.agentId;\n    });\n    return await this.adapter.createEntities(entities);\n  }\n  async updateEntity(entity) {\n    await this.adapter.updateEntity(entity);\n  }\n  async getComponent(entityId, type, worldId, sourceEntityId) {\n    return await this.adapter.getComponent(entityId, type, worldId, sourceEntityId);\n  }\n  async getComponents(entityId, worldId, sourceEntityId) {\n    return await this.adapter.getComponents(entityId, worldId, sourceEntityId);\n  }\n  async createComponent(component) {\n    return await this.adapter.createComponent(component);\n  }\n  async updateComponent(component) {\n    await this.adapter.updateComponent(component);\n  }\n  async deleteComponent(componentId) {\n    await this.adapter.deleteComponent(componentId);\n  }\n  async addEmbeddingToMemory(memory) {\n    if (memory.embedding) {\n      return memory;\n    }\n    const memoryText = memory.content.text;\n    if (!memoryText) {\n      throw new Error(\"Cannot generate embedding: Memory content is empty\");\n    }\n    try {\n      memory.embedding = await this.useModel(ModelType.TEXT_EMBEDDING, {\n        text: memoryText\n      });\n    } catch (error) {\n      this.logger.error(\"Failed to generate embedding:\", error);\n      memory.embedding = await this.useModel(ModelType.TEXT_EMBEDDING, null);\n    }\n    return memory;\n  }\n  async getMemories(params) {\n    return await this.adapter.getMemories(params);\n  }\n  async getAllMemories() {\n    const tables = [\"memories\", \"messages\", \"facts\", \"documents\"];\n    const allMemories = [];\n    for (const tableName of tables) {\n      try {\n        const memories = await this.adapter.getMemories({\n          agentId: this.agentId,\n          tableName,\n          count: 1e4\n          // Get a large number to fetch all\n        });\n        allMemories.push(...memories);\n      } catch (error) {\n        this.logger.debug(`Failed to get memories from table ${tableName}:`, error);\n      }\n    }\n    return allMemories;\n  }\n  async getMemoryById(id) {\n    return await this.adapter.getMemoryById(id);\n  }\n  async getMemoriesByIds(ids, tableName) {\n    return await this.adapter.getMemoriesByIds(ids, tableName);\n  }\n  async getMemoriesByRoomIds(params) {\n    return await this.adapter.getMemoriesByRoomIds(params);\n  }\n  async getCachedEmbeddings(params) {\n    return await this.adapter.getCachedEmbeddings(params);\n  }\n  async log(params) {\n    await this.adapter.log(params);\n  }\n  async searchMemories(params) {\n    const memories = await this.adapter.searchMemories(params);\n    if (params.query) {\n      const rerankedMemories = await this.rerankMemories(params.query, memories);\n      return rerankedMemories;\n    }\n    return memories;\n  }\n  async rerankMemories(query, memories) {\n    const docs = memories.map((memory) => ({\n      title: memory.id,\n      content: memory.content.text\n    }));\n    const bm25 = new BM25(docs);\n    const results = bm25.search(query, memories.length);\n    return results.map((result) => memories[result.index]);\n  }\n  async createMemory(memory, tableName, unique) {\n    return await this.adapter.createMemory(memory, tableName, unique);\n  }\n  async updateMemory(memory) {\n    return await this.adapter.updateMemory(memory);\n  }\n  async deleteMemory(memoryId) {\n    await this.adapter.deleteMemory(memoryId);\n  }\n  async deleteManyMemories(memoryIds) {\n    await this.adapter.deleteManyMemories(memoryIds);\n  }\n  async clearAllAgentMemories() {\n    this.logger.info(`Clearing all memories for agent ${this.character.name} (${this.agentId})`);\n    const allMemories = await this.getAllMemories();\n    const memoryIds = allMemories.map((memory) => memory.id);\n    if (memoryIds.length === 0) {\n      this.logger.info(\"No memories found to delete\");\n      return;\n    }\n    this.logger.info(`Found ${memoryIds.length} memories to delete`);\n    await this.adapter.deleteManyMemories(memoryIds);\n    this.logger.info(`Successfully cleared all ${memoryIds.length} memories for agent`);\n  }\n  async deleteAllMemories(roomId, tableName) {\n    await this.adapter.deleteAllMemories(roomId, tableName);\n  }\n  async countMemories(roomId, unique, tableName) {\n    return await this.adapter.countMemories(roomId, unique, tableName);\n  }\n  async getLogs(params) {\n    return await this.adapter.getLogs(params);\n  }\n  async deleteLog(logId) {\n    await this.adapter.deleteLog(logId);\n  }\n  async createWorld(world) {\n    return await this.adapter.createWorld(world);\n  }\n  async getWorld(id) {\n    return await this.adapter.getWorld(id);\n  }\n  async removeWorld(worldId) {\n    await this.adapter.removeWorld(worldId);\n  }\n  async getAllWorlds() {\n    return await this.adapter.getAllWorlds();\n  }\n  async updateWorld(world) {\n    await this.adapter.updateWorld(world);\n  }\n  async getRoom(roomId) {\n    const rooms = await this.adapter.getRoomsByIds([roomId]);\n    if (!rooms?.length) return null;\n    return rooms[0];\n  }\n  async getRoomsByIds(roomIds) {\n    return await this.adapter.getRoomsByIds(roomIds);\n  }\n  async createRoom({ id, name, source, type, channelId, serverId, worldId }) {\n    if (!worldId) throw new Error(\"worldId is required\");\n    const res = await this.adapter.createRooms([\n      {\n        id,\n        name,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId\n      }\n    ]);\n    if (!res.length) return null;\n    return res[0];\n  }\n  async createRooms(rooms) {\n    return await this.adapter.createRooms(rooms);\n  }\n  async deleteRoom(roomId) {\n    await this.adapter.deleteRoom(roomId);\n  }\n  async deleteRoomsByWorldId(worldId) {\n    await this.adapter.deleteRoomsByWorldId(worldId);\n  }\n  async updateRoom(room) {\n    await this.adapter.updateRoom(room);\n  }\n  async getRoomsForParticipant(entityId) {\n    return await this.adapter.getRoomsForParticipant(entityId);\n  }\n  async getRoomsForParticipants(userIds) {\n    return await this.adapter.getRoomsForParticipants(userIds);\n  }\n  // deprecate this one\n  async getRooms(worldId) {\n    return await this.adapter.getRoomsByWorld(worldId);\n  }\n  async getRoomsByWorld(worldId) {\n    return await this.adapter.getRoomsByWorld(worldId);\n  }\n  async getParticipantUserState(roomId, entityId) {\n    return await this.adapter.getParticipantUserState(roomId, entityId);\n  }\n  async setParticipantUserState(roomId, entityId, state) {\n    await this.adapter.setParticipantUserState(roomId, entityId, state);\n  }\n  async createRelationship(params) {\n    return await this.adapter.createRelationship(params);\n  }\n  async updateRelationship(relationship) {\n    await this.adapter.updateRelationship(relationship);\n  }\n  async getRelationship(params) {\n    return await this.adapter.getRelationship(params);\n  }\n  async getRelationships(params) {\n    return await this.adapter.getRelationships(params);\n  }\n  async getCache(key) {\n    return await this.adapter.getCache(key);\n  }\n  async setCache(key, value) {\n    return await this.adapter.setCache(key, value);\n  }\n  async deleteCache(key) {\n    return await this.adapter.deleteCache(key);\n  }\n  async createTask(task) {\n    return await this.adapter.createTask(task);\n  }\n  async getTasks(params) {\n    return await this.adapter.getTasks(params);\n  }\n  async getTask(id) {\n    return await this.adapter.getTask(id);\n  }\n  async getTasksByName(name) {\n    return await this.adapter.getTasksByName(name);\n  }\n  async updateTask(id, task) {\n    await this.adapter.updateTask(id, task);\n  }\n  async deleteTask(id) {\n    await this.adapter.deleteTask(id);\n  }\n  on(event, callback) {\n    if (!this.eventHandlers.has(event)) {\n      this.eventHandlers.set(event, []);\n    }\n    this.eventHandlers.get(event)?.push(callback);\n  }\n  off(event, callback) {\n    if (!this.eventHandlers.has(event)) {\n      return;\n    }\n    const handlers = this.eventHandlers.get(event);\n    const index = handlers.indexOf(callback);\n    if (index !== -1) {\n      handlers.splice(index, 1);\n    }\n  }\n  emit(event, data) {\n    if (!this.eventHandlers.has(event)) {\n      return;\n    }\n    for (const handler of this.eventHandlers.get(event)) {\n      handler(data);\n    }\n  }\n  async sendControlMessage(params) {\n    try {\n      const { roomId, action, target } = params;\n      const controlMessage = {\n        type: \"control\",\n        payload: {\n          action,\n          target\n        },\n        roomId\n      };\n      await this.emitEvent(\"CONTROL_MESSAGE\", {\n        runtime: this,\n        message: controlMessage,\n        source: \"agent\"\n      });\n      this.logger.debug(`Sent control message: ${action} to room ${roomId}`);\n    } catch (error) {\n      this.logger.error(`Error sending control message: ${error}`);\n    }\n  }\n  registerSendHandler(source, handler) {\n    if (this.sendHandlers.has(source)) {\n      this.logger.warn(`Send handler for source '${source}' already registered. Overwriting.`);\n    }\n    this.sendHandlers.set(source, handler);\n    this.logger.info(`Registered send handler for source: ${source}`);\n  }\n  async sendMessageToTarget(target, content) {\n    const handler = this.sendHandlers.get(target.source);\n    if (!handler) {\n      const errorMsg = `No send handler registered for source: ${target.source}`;\n      this.logger.error(errorMsg);\n      throw new Error(errorMsg);\n    }\n    try {\n      await handler(this, target, content);\n    } catch (error) {\n      this.logger.error(`Error executing send handler for source ${target.source}:`, error);\n      throw error;\n    }\n  }\n  async getMemoriesByWorldId(params) {\n    return await this.adapter.getMemoriesByWorldId(params);\n  }\n  async runMigrations(migrationsPaths) {\n    if (this.adapter && \"runMigrations\" in this.adapter) {\n      await this.adapter.runMigrations(migrationsPaths);\n    } else {\n      this.logger.warn(\"Database adapter does not support migrations.\");\n    }\n  }\n  async isReady() {\n    if (!this.adapter) {\n      throw new Error(\"Database adapter not registered\");\n    }\n    return await this.adapter.isReady();\n  }\n};\n\n// src/settings.ts\nimport crypto from \"crypto-browserify\";\nfunction createSettingFromConfig(configSetting) {\n  return {\n    name: configSetting.name,\n    description: configSetting.description,\n    usageDescription: configSetting.usageDescription || \"\",\n    value: null,\n    required: configSetting.required,\n    validation: configSetting.validation || null,\n    public: configSetting.public || false,\n    secret: configSetting.secret || false,\n    dependsOn: configSetting.dependsOn || [],\n    onSetAction: configSetting.onSetAction || null,\n    visibleIf: configSetting.visibleIf || null\n  };\n}\nfunction getSalt() {\n  const secretSalt = (typeof process !== \"undefined\" ? process.env.SECRET_SALT : import.meta.env.SECRET_SALT) || \"secretsalt\";\n  if (!secretSalt) {\n    logger.error(\"SECRET_SALT is not set\");\n  }\n  const salt = secretSalt;\n  logger.debug(`Generated salt with length: ${salt.length} (truncated for security)`);\n  return salt;\n}\nfunction encryptStringValue(value, salt) {\n  if (value === void 0 || value === null) {\n    logger.debug(\"Attempted to encrypt undefined or null value\");\n    return value;\n  }\n  if (typeof value === \"boolean\" || typeof value === \"number\") {\n    logger.debug(\"Value is a boolean or number, returning as is\");\n    return value;\n  }\n  if (typeof value !== \"string\") {\n    logger.debug(`Value is not a string (type: ${typeof value}), returning as is`);\n    return value;\n  }\n  const parts = value.split(\":\");\n  if (parts.length === 2) {\n    try {\n      const possibleIv = Buffer.from(parts[0], \"hex\");\n      if (possibleIv.length === 16) {\n        logger.debug(\"Value appears to be already encrypted, skipping re-encryption\");\n        return value;\n      }\n    } catch (e) {\n    }\n  }\n  const key = crypto.createHash(\"sha256\").update(salt).digest().slice(0, 32);\n  const iv = crypto.randomBytes(16);\n  const cipher = crypto.createCipheriv(\"aes-256-cbc\", key, iv);\n  let encrypted = cipher.update(value, \"utf8\", \"hex\");\n  encrypted += cipher.final(\"hex\");\n  return `${iv.toString(\"hex\")}:${encrypted}`;\n}\nfunction decryptStringValue(value, salt) {\n  try {\n    if (value === void 0 || value === null) {\n      return value;\n    }\n    if (typeof value === \"boolean\" || typeof value === \"number\") {\n      return value;\n    }\n    if (typeof value !== \"string\") {\n      logger.debug(`Value is not a string (type: ${typeof value}), returning as is`);\n      return value;\n    }\n    const parts = value.split(\":\");\n    if (parts.length !== 2) {\n      return value;\n    }\n    const iv = Buffer.from(parts[0], \"hex\");\n    const encrypted = parts[1];\n    if (iv.length !== 16) {\n      if (iv.length) {\n        logger.debug(`Invalid IV length (${iv.length}) - expected 16 bytes`);\n      }\n      return value;\n    }\n    const key = crypto.createHash(\"sha256\").update(salt).digest().slice(0, 32);\n    const decipher = crypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n    let decrypted = decipher.update(encrypted, \"hex\", \"utf8\");\n    decrypted += decipher.final(\"utf8\");\n    return decrypted;\n  } catch (error) {\n    logger.error(`Error decrypting value: ${error}`);\n    return value;\n  }\n}\nfunction saltSettingValue(setting, salt) {\n  const settingCopy = { ...setting };\n  if (setting.secret === true && typeof setting.value === \"string\" && setting.value) {\n    settingCopy.value = encryptStringValue(setting.value, salt);\n  }\n  return settingCopy;\n}\nfunction unsaltSettingValue(setting, salt) {\n  const settingCopy = { ...setting };\n  if (setting.secret === true && typeof setting.value === \"string\" && setting.value) {\n    settingCopy.value = decryptStringValue(setting.value, salt);\n  }\n  return settingCopy;\n}\nfunction saltWorldSettings(worldSettings, salt) {\n  const saltedSettings = {};\n  for (const [key, setting] of Object.entries(worldSettings)) {\n    saltedSettings[key] = saltSettingValue(setting, salt);\n  }\n  return saltedSettings;\n}\nfunction unsaltWorldSettings(worldSettings, salt) {\n  const unsaltedSettings = {};\n  for (const [key, setting] of Object.entries(worldSettings)) {\n    unsaltedSettings[key] = unsaltSettingValue(setting, salt);\n  }\n  return unsaltedSettings;\n}\nasync function updateWorldSettings(runtime, serverId, worldSettings) {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n  if (!world) {\n    logger.error(`No world found for server ${serverId}`);\n    return false;\n  }\n  if (!world.metadata) {\n    world.metadata = {};\n  }\n  const salt = getSalt();\n  const saltedSettings = saltWorldSettings(worldSettings, salt);\n  world.metadata.settings = saltedSettings;\n  await runtime.updateWorld(world);\n  return true;\n}\nasync function getWorldSettings(runtime, serverId) {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n  if (!world || !world.metadata?.settings) {\n    return null;\n  }\n  const saltedSettings = world.metadata.settings;\n  const salt = getSalt();\n  return unsaltWorldSettings(saltedSettings, salt);\n}\nasync function initializeOnboarding(runtime, world, config) {\n  if (world.metadata?.settings) {\n    logger.info(`Onboarding state already exists for server ${world.serverId}`);\n    const saltedSettings = world.metadata.settings;\n    const salt = getSalt();\n    return unsaltWorldSettings(saltedSettings, salt);\n  }\n  const worldSettings = {};\n  if (config.settings) {\n    for (const [key, configSetting] of Object.entries(config.settings)) {\n      worldSettings[key] = createSettingFromConfig(configSetting);\n    }\n  }\n  if (!world.metadata) {\n    world.metadata = {};\n  }\n  world.metadata.settings = worldSettings;\n  await runtime.updateWorld(world);\n  logger.info(`Initialized settings config for server ${world.serverId}`);\n  return worldSettings;\n}\nfunction encryptedCharacter(character) {\n  const encryptedChar = JSON.parse(JSON.stringify(character));\n  const salt = getSalt();\n  if (encryptedChar.settings?.secrets) {\n    encryptedChar.settings.secrets = encryptObjectValues(encryptedChar.settings.secrets, salt);\n  }\n  if (encryptedChar.secrets) {\n    encryptedChar.secrets = encryptObjectValues(encryptedChar.secrets, salt);\n  }\n  return encryptedChar;\n}\nfunction decryptedCharacter(character, _runtime) {\n  const decryptedChar = JSON.parse(JSON.stringify(character));\n  const salt = getSalt();\n  if (decryptedChar.settings?.secrets) {\n    decryptedChar.settings.secrets = decryptObjectValues(decryptedChar.settings.secrets, salt);\n  }\n  if (decryptedChar.secrets) {\n    decryptedChar.secrets = decryptObjectValues(decryptedChar.secrets, salt);\n  }\n  return decryptedChar;\n}\nfunction encryptObjectValues(obj, salt) {\n  const result = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"string\" && value) {\n      result[key] = encryptStringValue(value, salt);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\nfunction decryptObjectValues(obj, salt) {\n  const result = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"string\" && value) {\n      result[key] = decryptStringValue(value, salt);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n// src/services.ts\nvar ServiceBuilder = class {\n  constructor(serviceType) {\n    this.serviceType = serviceType;\n    this.description = \"\";\n  }\n  /**\n   * Set the service description\n   */\n  withDescription(description) {\n    this.description = description;\n    return this;\n  }\n  /**\n   * Set the start function for the service\n   */\n  withStart(startFn) {\n    this.startFn = startFn;\n    return this;\n  }\n  /**\n   * Set the stop function for the service\n   */\n  withStop(stopFn) {\n    this.stopFn = stopFn;\n    return this;\n  }\n  /**\n   * Build the service class with all configured properties\n   */\n  build() {\n    const serviceType = this.serviceType;\n    const description = this.description;\n    const startFn = this.startFn;\n    const stopFn = this.stopFn;\n    return class extends Service {\n      constructor() {\n        super(...arguments);\n        this.capabilityDescription = description;\n      }\n      static {\n        this.serviceType = serviceType;\n      }\n      static async start(runtime) {\n        if (!startFn) {\n          throw new Error(`Start function not defined for service ${serviceType}`);\n        }\n        return startFn(runtime);\n      }\n      async stop() {\n        if (stopFn) {\n          await stopFn();\n        }\n      }\n    };\n  }\n};\nfunction createService(serviceType) {\n  return new ServiceBuilder(serviceType);\n}\nfunction defineService(definition) {\n  return createService(definition.serviceType).withDescription(definition.description).withStart(definition.start).withStop(definition.stop || (() => Promise.resolve())).build();\n}\nexport {\n  AgentRuntime,\n  AgentStatus,\n  CacheKeyPrefix,\n  ChannelType,\n  ContentType,\n  DatabaseAdapter,\n  EventType,\n  IBrowserService,\n  IEmailService,\n  ILpService,\n  IMessageService,\n  IPdfService,\n  IPostService,\n  ITokenDataService,\n  ITranscriptionService,\n  IVideoService,\n  IWalletService,\n  IWebSearchService,\n  KnowledgeScope,\n  MODEL_SETTINGS,\n  MemoryType,\n  ModelType,\n  PlatformPrefix,\n  Role,\n  SOCKET_MESSAGE_TYPE,\n  Semaphore,\n  Sentry,\n  Service,\n  ServiceBuilder,\n  ServiceType,\n  TEEMode,\n  TeeType,\n  VECTOR_DIMS,\n  addHeader,\n  asUUID,\n  booleanFooter,\n  characterSchema,\n  composeActionExamples,\n  composePrompt,\n  composePromptFromState,\n  createActionResult,\n  createLogger,\n  createMessageMemory,\n  createService,\n  createServiceError,\n  createSettingFromConfig,\n  createUniqueUuid,\n  decryptObjectValues,\n  decryptStringValue as decryptSecret,\n  decryptStringValue,\n  decryptedCharacter,\n  defineService,\n  elizaLogger,\n  encryptObjectValues,\n  encryptStringValue,\n  encryptedCharacter,\n  findEntityByName,\n  findWorldsForOwner,\n  formatActionNames,\n  formatActions,\n  formatEntities,\n  formatMessages,\n  formatPosts,\n  formatTimestamp,\n  getContentTypeFromMimeType,\n  getEntityDetails,\n  getLocalServerUrl,\n  getMemoryText,\n  getModelSpecificSettingKey,\n  getSalt,\n  getTypedService,\n  getUserServerRole,\n  getWorldSettings,\n  imageDescriptionTemplate,\n  initializeOnboarding,\n  isCustomMetadata,\n  isDescriptionMetadata,\n  isDocumentMemory,\n  isDocumentMetadata,\n  isFragmentMemory,\n  isFragmentMetadata,\n  isMessageMetadata,\n  isValidCharacter,\n  logger,\n  messageHandlerTemplate,\n  normalizeJsonString,\n  parseAndValidateCharacter,\n  parseBooleanFromText2 as parseBooleanFromText,\n  parseJSONObjectFromText,\n  parseKeyValueXml,\n  postCreationTemplate,\n  safeReplacer,\n  saltSettingValue,\n  saltWorldSettings,\n  shouldRespondTemplate,\n  splitChunks,\n  stringToUuid,\n  trimTokens,\n  truncateToCompleteSentence,\n  unsaltSettingValue,\n  unsaltWorldSettings,\n  updateWorldSettings,\n  validateCharacter,\n  validateUuid\n};\n","import { Document, BaseDocumentTransformer } from \"@langchain/core/documents\";\nimport { getEncoding } from \"@langchain/core/utils/tiktoken\";\nexport class TextSplitter extends BaseDocumentTransformer {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"document_transformers\", \"text_splitters\"]\n        });\n        Object.defineProperty(this, \"chunkSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1000\n        });\n        Object.defineProperty(this, \"chunkOverlap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 200\n        });\n        Object.defineProperty(this, \"keepSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lengthFunction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chunkSize = fields?.chunkSize ?? this.chunkSize;\n        this.chunkOverlap = fields?.chunkOverlap ?? this.chunkOverlap;\n        this.keepSeparator = fields?.keepSeparator ?? this.keepSeparator;\n        this.lengthFunction =\n            fields?.lengthFunction ?? ((text) => text.length);\n        if (this.chunkOverlap >= this.chunkSize) {\n            throw new Error(\"Cannot have chunkOverlap >= chunkSize\");\n        }\n    }\n    async transformDocuments(documents, chunkHeaderOptions = {}) {\n        return this.splitDocuments(documents, chunkHeaderOptions);\n    }\n    splitOnSeparator(text, separator) {\n        let splits;\n        if (separator) {\n            if (this.keepSeparator) {\n                const regexEscapedSeparator = separator.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n                splits = text.split(new RegExp(`(?=${regexEscapedSeparator})`));\n            }\n            else {\n                splits = text.split(separator);\n            }\n        }\n        else {\n            splits = text.split(\"\");\n        }\n        return splits.filter((s) => s !== \"\");\n    }\n    async createDocuments(texts, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadatas = [], chunkHeaderOptions = {}) {\n        // if no metadata is provided, we create an empty one for each text\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const _metadatas = metadatas.length > 0\n            ? metadatas\n            : [...Array(texts.length)].map(() => ({}));\n        const { chunkHeader = \"\", chunkOverlapHeader = \"(cont'd) \", appendChunkOverlapHeader = false, } = chunkHeaderOptions;\n        const documents = new Array();\n        for (let i = 0; i < texts.length; i += 1) {\n            const text = texts[i];\n            let lineCounterIndex = 1;\n            let prevChunk = null;\n            let indexPrevChunk = -1;\n            for (const chunk of await this.splitText(text)) {\n                let pageContent = chunkHeader;\n                // we need to count the \\n that are in the text before getting removed by the splitting\n                const indexChunk = text.indexOf(chunk, indexPrevChunk + 1);\n                if (prevChunk === null) {\n                    const newLinesBeforeFirstChunk = this.numberOfNewLines(text, 0, indexChunk);\n                    lineCounterIndex += newLinesBeforeFirstChunk;\n                }\n                else {\n                    const indexEndPrevChunk = indexPrevChunk + (await this.lengthFunction(prevChunk));\n                    if (indexEndPrevChunk < indexChunk) {\n                        const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexEndPrevChunk, indexChunk);\n                        lineCounterIndex += numberOfIntermediateNewLines;\n                    }\n                    else if (indexEndPrevChunk > indexChunk) {\n                        const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexChunk, indexEndPrevChunk);\n                        lineCounterIndex -= numberOfIntermediateNewLines;\n                    }\n                    if (appendChunkOverlapHeader) {\n                        pageContent += chunkOverlapHeader;\n                    }\n                }\n                const newLinesCount = this.numberOfNewLines(chunk);\n                const loc = _metadatas[i].loc && typeof _metadatas[i].loc === \"object\"\n                    ? { ..._metadatas[i].loc }\n                    : {};\n                loc.lines = {\n                    from: lineCounterIndex,\n                    to: lineCounterIndex + newLinesCount,\n                };\n                const metadataWithLinesNumber = {\n                    ..._metadatas[i],\n                    loc,\n                };\n                pageContent += chunk;\n                documents.push(new Document({\n                    pageContent,\n                    metadata: metadataWithLinesNumber,\n                }));\n                lineCounterIndex += newLinesCount;\n                prevChunk = chunk;\n                indexPrevChunk = indexChunk;\n            }\n        }\n        return documents;\n    }\n    numberOfNewLines(text, start, end) {\n        const textSection = text.slice(start, end);\n        return (textSection.match(/\\n/g) || []).length;\n    }\n    async splitDocuments(documents, chunkHeaderOptions = {}) {\n        const selectedDocuments = documents.filter((doc) => doc.pageContent !== undefined);\n        const texts = selectedDocuments.map((doc) => doc.pageContent);\n        const metadatas = selectedDocuments.map((doc) => doc.metadata);\n        return this.createDocuments(texts, metadatas, chunkHeaderOptions);\n    }\n    joinDocs(docs, separator) {\n        const text = docs.join(separator).trim();\n        return text === \"\" ? null : text;\n    }\n    async mergeSplits(splits, separator) {\n        const docs = [];\n        const currentDoc = [];\n        let total = 0;\n        for (const d of splits) {\n            const _len = await this.lengthFunction(d);\n            if (total + _len + currentDoc.length * separator.length >\n                this.chunkSize) {\n                if (total > this.chunkSize) {\n                    console.warn(`Created a chunk of size ${total}, +\nwhich is longer than the specified ${this.chunkSize}`);\n                }\n                if (currentDoc.length > 0) {\n                    const doc = this.joinDocs(currentDoc, separator);\n                    if (doc !== null) {\n                        docs.push(doc);\n                    }\n                    // Keep on popping if:\n                    // - we have a larger chunk than in the chunk overlap\n                    // - or if we still have any chunks and the length is long\n                    while (total > this.chunkOverlap ||\n                        (total + _len + currentDoc.length * separator.length >\n                            this.chunkSize &&\n                            total > 0)) {\n                        total -= await this.lengthFunction(currentDoc[0]);\n                        currentDoc.shift();\n                    }\n                }\n            }\n            currentDoc.push(d);\n            total += _len;\n        }\n        const doc = this.joinDocs(currentDoc, separator);\n        if (doc !== null) {\n            docs.push(doc);\n        }\n        return docs;\n    }\n}\nexport class CharacterTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"CharacterTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\n\\n\"\n        });\n        this.separator = fields?.separator ?? this.separator;\n    }\n    async splitText(text) {\n        // First we naively split the large input into a bunch of smaller ones.\n        const splits = this.splitOnSeparator(text, this.separator);\n        return this.mergeSplits(splits, this.keepSeparator ? \"\" : this.separator);\n    }\n}\nexport const SupportedTextSplitterLanguages = [\n    \"cpp\",\n    \"go\",\n    \"java\",\n    \"js\",\n    \"php\",\n    \"proto\",\n    \"python\",\n    \"rst\",\n    \"ruby\",\n    \"rust\",\n    \"scala\",\n    \"swift\",\n    \"markdown\",\n    \"latex\",\n    \"html\",\n    \"sol\",\n];\nexport class RecursiveCharacterTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"RecursiveCharacterTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separators\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"\\n\\n\", \"\\n\", \" \", \"\"]\n        });\n        this.separators = fields?.separators ?? this.separators;\n        this.keepSeparator = fields?.keepSeparator ?? true;\n    }\n    async _splitText(text, separators) {\n        const finalChunks = [];\n        // Get appropriate separator to use\n        let separator = separators[separators.length - 1];\n        let newSeparators;\n        for (let i = 0; i < separators.length; i += 1) {\n            const s = separators[i];\n            if (s === \"\") {\n                separator = s;\n                break;\n            }\n            if (text.includes(s)) {\n                separator = s;\n                newSeparators = separators.slice(i + 1);\n                break;\n            }\n        }\n        // Now that we have the separator, split the text\n        const splits = this.splitOnSeparator(text, separator);\n        // Now go merging things, recursively splitting longer texts.\n        let goodSplits = [];\n        const _separator = this.keepSeparator ? \"\" : separator;\n        for (const s of splits) {\n            if ((await this.lengthFunction(s)) < this.chunkSize) {\n                goodSplits.push(s);\n            }\n            else {\n                if (goodSplits.length) {\n                    const mergedText = await this.mergeSplits(goodSplits, _separator);\n                    finalChunks.push(...mergedText);\n                    goodSplits = [];\n                }\n                if (!newSeparators) {\n                    finalChunks.push(s);\n                }\n                else {\n                    const otherInfo = await this._splitText(s, newSeparators);\n                    finalChunks.push(...otherInfo);\n                }\n            }\n        }\n        if (goodSplits.length) {\n            const mergedText = await this.mergeSplits(goodSplits, _separator);\n            finalChunks.push(...mergedText);\n        }\n        return finalChunks;\n    }\n    async splitText(text) {\n        return this._splitText(text, this.separators);\n    }\n    static fromLanguage(language, options) {\n        return new RecursiveCharacterTextSplitter({\n            ...options,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(language),\n        });\n    }\n    static getSeparatorsForLanguage(language) {\n        if (language === \"cpp\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along function definitions\n                \"\\nvoid \",\n                \"\\nint \",\n                \"\\nfloat \",\n                \"\\ndouble \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"go\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                \"\\nvar \",\n                \"\\nconst \",\n                \"\\ntype \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"java\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along method definitions\n                \"\\npublic \",\n                \"\\nprotected \",\n                \"\\nprivate \",\n                \"\\nstatic \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"js\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                \"\\nconst \",\n                \"\\nlet \",\n                \"\\nvar \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                \"\\ndefault \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"php\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nforeach \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"proto\") {\n            return [\n                // Split along message definitions\n                \"\\nmessage \",\n                // Split along service definitions\n                \"\\nservice \",\n                // Split along enum definitions\n                \"\\nenum \",\n                // Split along option definitions\n                \"\\noption \",\n                // Split along import statements\n                \"\\nimport \",\n                // Split along syntax declarations\n                \"\\nsyntax \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"python\") {\n            return [\n                // First, try to split along class definitions\n                \"\\nclass \",\n                \"\\ndef \",\n                \"\\n\\tdef \",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rst\") {\n            return [\n                // Split along section titles\n                \"\\n===\\n\",\n                \"\\n---\\n\",\n                \"\\n***\\n\",\n                // Split along directive markers\n                \"\\n.. \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"ruby\") {\n            return [\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nunless \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\ndo \",\n                \"\\nbegin \",\n                \"\\nrescue \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rust\") {\n            return [\n                // Split along function definitions\n                \"\\nfn \",\n                \"\\nconst \",\n                \"\\nlet \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\nloop \",\n                \"\\nmatch \",\n                \"\\nconst \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"scala\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nobject \",\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nval \",\n                \"\\nvar \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nmatch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"swift\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"markdown\") {\n            return [\n                // First, try to split along Markdown headings (starting with level 2)\n                \"\\n## \",\n                \"\\n### \",\n                \"\\n#### \",\n                \"\\n##### \",\n                \"\\n###### \",\n                // Note the alternative syntax for headings (below) is not handled here\n                // Heading level 2\n                // ---------------\n                // End of code block\n                \"```\\n\\n\",\n                // Horizontal lines\n                \"\\n\\n***\\n\\n\",\n                \"\\n\\n---\\n\\n\",\n                \"\\n\\n___\\n\\n\",\n                // Note that this splitter doesn't handle horizontal lines defined\n                // by *three or more* of ***, ---, or ___, but this is not handled\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"latex\") {\n            return [\n                // First, try to split along Latex sections\n                \"\\n\\\\chapter{\",\n                \"\\n\\\\section{\",\n                \"\\n\\\\subsection{\",\n                \"\\n\\\\subsubsection{\",\n                // Now split by environments\n                \"\\n\\\\begin{enumerate}\",\n                \"\\n\\\\begin{itemize}\",\n                \"\\n\\\\begin{description}\",\n                \"\\n\\\\begin{list}\",\n                \"\\n\\\\begin{quote}\",\n                \"\\n\\\\begin{quotation}\",\n                \"\\n\\\\begin{verse}\",\n                \"\\n\\\\begin{verbatim}\",\n                // Now split by math environments\n                \"\\n\\\\begin{align}\",\n                \"$$\",\n                \"$\",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"html\") {\n            return [\n                // First, try to split along HTML tags\n                \"<body>\",\n                \"<div>\",\n                \"<p>\",\n                \"<br>\",\n                \"<li>\",\n                \"<h1>\",\n                \"<h2>\",\n                \"<h3>\",\n                \"<h4>\",\n                \"<h5>\",\n                \"<h6>\",\n                \"<span>\",\n                \"<table>\",\n                \"<tr>\",\n                \"<td>\",\n                \"<th>\",\n                \"<ul>\",\n                \"<ol>\",\n                \"<header>\",\n                \"<footer>\",\n                \"<nav>\",\n                // Head\n                \"<head>\",\n                \"<style>\",\n                \"<script>\",\n                \"<meta>\",\n                \"<title>\",\n                // Normal type of lines\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"sol\") {\n            return [\n                // Split along compiler informations definitions\n                \"\\npragma \",\n                \"\\nusing \",\n                // Split along contract definitions\n                \"\\ncontract \",\n                \"\\ninterface \",\n                \"\\nlibrary \",\n                // Split along method definitions\n                \"\\nconstructor \",\n                \"\\ntype \",\n                \"\\nfunction \",\n                \"\\nevent \",\n                \"\\nmodifier \",\n                \"\\nerror \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo while \",\n                \"\\nassembly \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else {\n            throw new Error(`Language ${language} is not supported.`);\n        }\n    }\n}\n/**\n * Implementation of splitter which looks at tokens.\n */\nexport class TokenTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"TokenTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"encodingName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"allowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"disallowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tokenizer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.encodingName = fields?.encodingName ?? \"gpt2\";\n        this.allowedSpecial = fields?.allowedSpecial ?? [];\n        this.disallowedSpecial = fields?.disallowedSpecial ?? \"all\";\n    }\n    async splitText(text) {\n        if (!this.tokenizer) {\n            this.tokenizer = await getEncoding(this.encodingName);\n        }\n        const splits = [];\n        const input_ids = this.tokenizer.encode(text, this.allowedSpecial, this.disallowedSpecial);\n        let start_idx = 0;\n        while (start_idx < input_ids.length) {\n            if (start_idx > 0) {\n                start_idx -= this.chunkOverlap;\n            }\n            const end_idx = Math.min(start_idx + this.chunkSize, input_ids.length);\n            const chunk_ids = input_ids.slice(start_idx, end_idx);\n            splits.push(this.tokenizer.decode(chunk_ids));\n            start_idx = end_idx;\n        }\n        return splits;\n    }\n}\nexport class MarkdownTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"markdown\"),\n        });\n    }\n}\nexport class LatexTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"latex\"),\n        });\n    }\n}\n","// Copyright (c) 2018-2022 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\nconst mulberry32 = (seed: number): number => {\n  seed |= 0;\n  seed = (seed + 0x6d2b79f5) | 0;\n  let t = Math.imul(seed ^ (seed >>> 15), 1 | seed);\n  t = (t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ t;\n  return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n};\n\nexport const getFromSeed = (seed: number | string): number => {\n  if (typeof seed === 'string') {\n    const numberFromString = seed\n      .split('')\n      .map((char: string) => char.charCodeAt(0))\n      .reduce((acc, curr) => acc + curr, 1);\n\n    const numericSeed = Math.floor(Number(numberFromString));\n    return mulberry32(numericSeed);\n  }\n  return mulberry32(seed);\n};\n","// Copyright (c) 2018-2022 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\nimport { getFromSeed } from './seed';\n\ntype Style = 'lowerCase' | 'upperCase' | 'capital';\n\nexport interface Config {\n  dictionaries: string[][];\n  separator?: string;\n  length?: number;\n  style?: Style;\n  seed?: number | string;\n}\n\nexport class UniqueNamesGenerator {\n  private dictionaries: string[][];\n  private length: number;\n  private separator: string;\n  private style: Style;\n  private seed: number | string;\n\n  constructor(config: Config) {\n    const { length, separator, dictionaries, style, seed } = config;\n\n    this.dictionaries = dictionaries;\n    this.separator = separator;\n    this.length = length;\n    this.style = style;\n    this.seed = seed;\n  }\n\n  public generate(): string {\n    if (!this.dictionaries) {\n      throw new Error(\n        'Cannot find any dictionary. Please provide at least one, or leave ' +\n          'the \"dictionary\" field empty in the config object',\n      );\n    }\n\n    if (this.length <= 0) {\n      throw new Error('Invalid length provided');\n    }\n\n    if (this.length > this.dictionaries.length) {\n      throw new Error(\n        'The length cannot be bigger than the number of dictionaries.\\n' +\n          `Length provided: ${this.length}. Number of dictionaries provided: ${this.dictionaries.length}`,\n      );\n    }\n\n    let seed = this.seed;\n\n    return this.dictionaries.slice(0, this.length).reduce((acc: string, curr: string[]) => {\n      let randomFloat;\n      if (seed) {\n        randomFloat = getFromSeed(seed);\n        seed = randomFloat * 4294967296;\n      } else {\n        randomFloat = Math.random();\n      }\n      const rnd = Math.floor(randomFloat * curr.length);\n      let word = curr[rnd] || '';\n\n      if (this.style === 'lowerCase') {\n        word = word.toLowerCase();\n      } else if (this.style === 'capital') {\n        const [firstLetter, ...rest] = word.split('');\n        word = firstLetter.toUpperCase() + rest.join('');\n      } else if (this.style === 'upperCase') {\n        word = word.toUpperCase();\n      }\n\n      return acc ? `${acc}${this.separator}${word}` : `${word}`;\n    }, '');\n  }\n}\n","// Copyright (c) 2018-2022 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\nimport { UniqueNamesGenerator, Config } from './unique-names-generator.constructor';\n\nconst defaultConfig: Config = {\n  separator: '_',\n  dictionaries: [],\n};\n\nexport const uniqueNamesGenerator = (customConfig: Config): string => {\n  const dictionaries = [\n    ...((customConfig && customConfig.dictionaries) || defaultConfig.dictionaries),\n  ];\n\n  const config: Config = {\n    ...defaultConfig,\n    ...customConfig,\n    length: (customConfig && customConfig.length) || dictionaries.length,\n    dictionaries,\n  };\n\n  if (!customConfig || !customConfig.dictionaries || !customConfig.dictionaries.length) {\n    throw new Error(\n      'A \"dictionaries\" array must be provided. This is a breaking change introduced starting from Unique Name Generator v4. Read more about the breaking change here: https://github.com/andreasonny83/unique-names-generator#migration-guide',\n    );\n  }\n\n  const ung: UniqueNamesGenerator = new UniqueNamesGenerator(config);\n\n  return ung.generate();\n};\n","export default [\n  'able',\n  'above',\n  'absent',\n  'absolute',\n  'abstract',\n  'abundant',\n  'academic',\n  'acceptable',\n  'accepted',\n  'accessible',\n  'accurate',\n  'accused',\n  'active',\n  'actual',\n  'acute',\n  'added',\n  'additional',\n  'adequate',\n  'adjacent',\n  'administrative',\n  'adorable',\n  'advanced',\n  'adverse',\n  'advisory',\n  'aesthetic',\n  'afraid',\n  'aggregate',\n  'aggressive',\n  'agreeable',\n  'agreed',\n  'agricultural',\n  'alert',\n  'alive',\n  'alleged',\n  'allied',\n  'alone',\n  'alright',\n  'alternative',\n  'amateur',\n  'amazing',\n  'ambitious',\n  'amused',\n  'ancient',\n  'angry',\n  'annoyed',\n  'annual',\n  'anonymous',\n  'anxious',\n  'appalling',\n  'apparent',\n  'applicable',\n  'appropriate',\n  'arbitrary',\n  'architectural',\n  'armed',\n  'arrogant',\n  'artificial',\n  'artistic',\n  'ashamed',\n  'asleep',\n  'assistant',\n  'associated',\n  'atomic',\n  'attractive',\n  'automatic',\n  'autonomous',\n  'available',\n  'average',\n  'awake',\n  'aware',\n  'awful',\n  'awkward',\n  'back',\n  'bad',\n  'balanced',\n  'bare',\n  'basic',\n  'beautiful',\n  'beneficial',\n  'better',\n  'bewildered',\n  'big',\n  'binding',\n  'biological',\n  'bitter',\n  'bizarre',\n  'blank',\n  'blind',\n  'blonde',\n  'bloody',\n  'blushing',\n  'boiling',\n  'bold',\n  'bored',\n  'boring',\n  'bottom',\n  'brainy',\n  'brave',\n  'breakable',\n  'breezy',\n  'brief',\n  'bright',\n  'brilliant',\n  'broad',\n  'broken',\n  'bumpy',\n  'burning',\n  'busy',\n  'calm',\n  'capable',\n  'capitalist',\n  'careful',\n  'casual',\n  'causal',\n  'cautious',\n  'central',\n  'certain',\n  'changing',\n  'characteristic',\n  'charming',\n  'cheap',\n  'cheerful',\n  'chemical',\n  'chief',\n  'chilly',\n  'chosen',\n  'christian',\n  'chronic',\n  'chubby',\n  'circular',\n  'civic',\n  'civil',\n  'civilian',\n  'classic',\n  'classical',\n  'clean',\n  'clear',\n  'clever',\n  'clinical',\n  'close',\n  'closed',\n  'cloudy',\n  'clumsy',\n  'coastal',\n  'cognitive',\n  'coherent',\n  'cold',\n  'collective',\n  'colonial',\n  'colorful',\n  'colossal',\n  'coloured',\n  'colourful',\n  'combative',\n  'combined',\n  'comfortable',\n  'coming',\n  'commercial',\n  'common',\n  'communist',\n  'compact',\n  'comparable',\n  'comparative',\n  'compatible',\n  'competent',\n  'competitive',\n  'complete',\n  'complex',\n  'complicated',\n  'comprehensive',\n  'compulsory',\n  'conceptual',\n  'concerned',\n  'concrete',\n  'condemned',\n  'confident',\n  'confidential',\n  'confused',\n  'conscious',\n  'conservation',\n  'conservative',\n  'considerable',\n  'consistent',\n  'constant',\n  'constitutional',\n  'contemporary',\n  'content',\n  'continental',\n  'continued',\n  'continuing',\n  'continuous',\n  'controlled',\n  'controversial',\n  'convenient',\n  'conventional',\n  'convinced',\n  'convincing',\n  'cooing',\n  'cool',\n  'cooperative',\n  'corporate',\n  'correct',\n  'corresponding',\n  'costly',\n  'courageous',\n  'crazy',\n  'creative',\n  'creepy',\n  'criminal',\n  'critical',\n  'crooked',\n  'crowded',\n  'crucial',\n  'crude',\n  'cruel',\n  'cuddly',\n  'cultural',\n  'curious',\n  'curly',\n  'current',\n  'curved',\n  'cute',\n  'daily',\n  'damaged',\n  'damp',\n  'dangerous',\n  'dark',\n  'dead',\n  'deaf',\n  'deafening',\n  'dear',\n  'decent',\n  'decisive',\n  'deep',\n  'defeated',\n  'defensive',\n  'defiant',\n  'definite',\n  'deliberate',\n  'delicate',\n  'delicious',\n  'delighted',\n  'delightful',\n  'democratic',\n  'dependent',\n  'depressed',\n  'desirable',\n  'desperate',\n  'detailed',\n  'determined',\n  'developed',\n  'developing',\n  'devoted',\n  'different',\n  'difficult',\n  'digital',\n  'diplomatic',\n  'direct',\n  'dirty',\n  'disabled',\n  'disappointed',\n  'disastrous',\n  'disciplinary',\n  'disgusted',\n  'distant',\n  'distinct',\n  'distinctive',\n  'distinguished',\n  'disturbed',\n  'disturbing',\n  'diverse',\n  'divine',\n  'dizzy',\n  'domestic',\n  'dominant',\n  'double',\n  'doubtful',\n  'drab',\n  'dramatic',\n  'dreadful',\n  'driving',\n  'drunk',\n  'dry',\n  'dual',\n  'due',\n  'dull',\n  'dusty',\n  'dutch',\n  'dying',\n  'dynamic',\n  'eager',\n  'early',\n  'eastern',\n  'easy',\n  'economic',\n  'educational',\n  'eerie',\n  'effective',\n  'efficient',\n  'elaborate',\n  'elated',\n  'elderly',\n  'eldest',\n  'electoral',\n  'electric',\n  'electrical',\n  'electronic',\n  'elegant',\n  'eligible',\n  'embarrassed',\n  'embarrassing',\n  'emotional',\n  'empirical',\n  'empty',\n  'enchanting',\n  'encouraging',\n  'endless',\n  'energetic',\n  'enormous',\n  'enthusiastic',\n  'entire',\n  'entitled',\n  'envious',\n  'environmental',\n  'equal',\n  'equivalent',\n  'essential',\n  'established',\n  'estimated',\n  'ethical',\n  'ethnic',\n  'eventual',\n  'everyday',\n  'evident',\n  'evil',\n  'evolutionary',\n  'exact',\n  'excellent',\n  'exceptional',\n  'excess',\n  'excessive',\n  'excited',\n  'exciting',\n  'exclusive',\n  'existing',\n  'exotic',\n  'expected',\n  'expensive',\n  'experienced',\n  'experimental',\n  'explicit',\n  'extended',\n  'extensive',\n  'external',\n  'extra',\n  'extraordinary',\n  'extreme',\n  'exuberant',\n  'faint',\n  'fair',\n  'faithful',\n  'familiar',\n  'famous',\n  'fancy',\n  'fantastic',\n  'far',\n  'fascinating',\n  'fashionable',\n  'fast',\n  'fat',\n  'fatal',\n  'favourable',\n  'favourite',\n  'federal',\n  'fellow',\n  'female',\n  'feminist',\n  'few',\n  'fierce',\n  'filthy',\n  'final',\n  'financial',\n  'fine',\n  'firm',\n  'fiscal',\n  'fit',\n  'fixed',\n  'flaky',\n  'flat',\n  'flexible',\n  'fluffy',\n  'fluttering',\n  'flying',\n  'following',\n  'fond',\n  'foolish',\n  'foreign',\n  'formal',\n  'formidable',\n  'forthcoming',\n  'fortunate',\n  'forward',\n  'fragile',\n  'frail',\n  'frantic',\n  'free',\n  'frequent',\n  'fresh',\n  'friendly',\n  'frightened',\n  'front',\n  'frozen',\n  'full',\n  'fun',\n  'functional',\n  'fundamental',\n  'funny',\n  'furious',\n  'future',\n  'fuzzy',\n  'gastric',\n  'gay',\n  'general',\n  'generous',\n  'genetic',\n  'gentle',\n  'genuine',\n  'geographical',\n  'giant',\n  'gigantic',\n  'given',\n  'glad',\n  'glamorous',\n  'gleaming',\n  'global',\n  'glorious',\n  'golden',\n  'good',\n  'gorgeous',\n  'gothic',\n  'governing',\n  'graceful',\n  'gradual',\n  'grand',\n  'grateful',\n  'greasy',\n  'great',\n  'grieving',\n  'grim',\n  'gross',\n  'grotesque',\n  'growing',\n  'grubby',\n  'grumpy',\n  'guilty',\n  'handicapped',\n  'handsome',\n  'happy',\n  'hard',\n  'harsh',\n  'head',\n  'healthy',\n  'heavy',\n  'helpful',\n  'helpless',\n  'hidden',\n  'high',\n  'hilarious',\n  'hissing',\n  'historic',\n  'historical',\n  'hollow',\n  'holy',\n  'homeless',\n  'homely',\n  'hon',\n  'honest',\n  'horizontal',\n  'horrible',\n  'hostile',\n  'hot',\n  'huge',\n  'human',\n  'hungry',\n  'hurt',\n  'hushed',\n  'husky',\n  'icy',\n  'ideal',\n  'identical',\n  'ideological',\n  'ill',\n  'illegal',\n  'imaginative',\n  'immediate',\n  'immense',\n  'imperial',\n  'implicit',\n  'important',\n  'impossible',\n  'impressed',\n  'impressive',\n  'improved',\n  'inadequate',\n  'inappropriate',\n  'inc',\n  'inclined',\n  'increased',\n  'increasing',\n  'incredible',\n  'independent',\n  'indirect',\n  'individual',\n  'industrial',\n  'inevitable',\n  'influential',\n  'informal',\n  'inherent',\n  'initial',\n  'injured',\n  'inland',\n  'inner',\n  'innocent',\n  'innovative',\n  'inquisitive',\n  'instant',\n  'institutional',\n  'insufficient',\n  'intact',\n  'integral',\n  'integrated',\n  'intellectual',\n  'intelligent',\n  'intense',\n  'intensive',\n  'interested',\n  'interesting',\n  'interim',\n  'interior',\n  'intermediate',\n  'internal',\n  'international',\n  'intimate',\n  'invisible',\n  'involved',\n  'irrelevant',\n  'isolated',\n  'itchy',\n  'jealous',\n  'jittery',\n  'joint',\n  'jolly',\n  'joyous',\n  'judicial',\n  'juicy',\n  'junior',\n  'just',\n  'keen',\n  'key',\n  'kind',\n  'known',\n  'labour',\n  'large',\n  'late',\n  'latin',\n  'lazy',\n  'leading',\n  'left',\n  'legal',\n  'legislative',\n  'legitimate',\n  'lengthy',\n  'lesser',\n  'level',\n  'lexical',\n  'liable',\n  'liberal',\n  'light',\n  'like',\n  'likely',\n  'limited',\n  'linear',\n  'linguistic',\n  'liquid',\n  'literary',\n  'little',\n  'live',\n  'lively',\n  'living',\n  'local',\n  'logical',\n  'lonely',\n  'long',\n  'loose',\n  'lost',\n  'loud',\n  'lovely',\n  'low',\n  'loyal',\n  'ltd',\n  'lucky',\n  'mad',\n  'magic',\n  'magnetic',\n  'magnificent',\n  'main',\n  'major',\n  'male',\n  'mammoth',\n  'managerial',\n  'managing',\n  'manual',\n  'many',\n  'marginal',\n  'marine',\n  'marked',\n  'married',\n  'marvellous',\n  'marxist',\n  'mass',\n  'massive',\n  'mathematical',\n  'mature',\n  'maximum',\n  'mean',\n  'meaningful',\n  'mechanical',\n  'medical',\n  'medieval',\n  'melodic',\n  'melted',\n  'mental',\n  'mere',\n  'metropolitan',\n  'mid',\n  'middle',\n  'mighty',\n  'mild',\n  'military',\n  'miniature',\n  'minimal',\n  'minimum',\n  'ministerial',\n  'minor',\n  'miserable',\n  'misleading',\n  'missing',\n  'misty',\n  'mixed',\n  'moaning',\n  'mobile',\n  'moderate',\n  'modern',\n  'modest',\n  'molecular',\n  'monetary',\n  'monthly',\n  'moral',\n  'motionless',\n  'muddy',\n  'multiple',\n  'mushy',\n  'musical',\n  'mute',\n  'mutual',\n  'mysterious',\n  'naked',\n  'narrow',\n  'nasty',\n  'national',\n  'native',\n  'natural',\n  'naughty',\n  'naval',\n  'near',\n  'nearby',\n  'neat',\n  'necessary',\n  'negative',\n  'neighbouring',\n  'nervous',\n  'net',\n  'neutral',\n  'new',\n  'nice',\n  'noble',\n  'noisy',\n  'normal',\n  'northern',\n  'nosy',\n  'notable',\n  'novel',\n  'nuclear',\n  'numerous',\n  'nursing',\n  'nutritious',\n  'nutty',\n  'obedient',\n  'objective',\n  'obliged',\n  'obnoxious',\n  'obvious',\n  'occasional',\n  'occupational',\n  'odd',\n  'official',\n  'ok',\n  'okay',\n  'old',\n  'olympic',\n  'only',\n  'open',\n  'operational',\n  'opposite',\n  'optimistic',\n  'oral',\n  'ordinary',\n  'organic',\n  'organisational',\n  'original',\n  'orthodox',\n  'other',\n  'outdoor',\n  'outer',\n  'outrageous',\n  'outside',\n  'outstanding',\n  'overall',\n  'overseas',\n  'overwhelming',\n  'painful',\n  'pale',\n  'panicky',\n  'parallel',\n  'parental',\n  'parliamentary',\n  'partial',\n  'particular',\n  'passing',\n  'passive',\n  'past',\n  'patient',\n  'payable',\n  'peaceful',\n  'peculiar',\n  'perfect',\n  'permanent',\n  'persistent',\n  'personal',\n  'petite',\n  'philosophical',\n  'physical',\n  'plain',\n  'planned',\n  'plastic',\n  'pleasant',\n  'pleased',\n  'poised',\n  'polite',\n  'political',\n  'poor',\n  'popular',\n  'positive',\n  'possible',\n  'potential',\n  'powerful',\n  'practical',\n  'precious',\n  'precise',\n  'preferred',\n  'pregnant',\n  'preliminary',\n  'premier',\n  'prepared',\n  'present',\n  'presidential',\n  'pretty',\n  'previous',\n  'prickly',\n  'primary',\n  'prime',\n  'primitive',\n  'principal',\n  'printed',\n  'prior',\n  'private',\n  'probable',\n  'productive',\n  'professional',\n  'profitable',\n  'profound',\n  'progressive',\n  'prominent',\n  'promising',\n  'proper',\n  'proposed',\n  'prospective',\n  'protective',\n  'protestant',\n  'proud',\n  'provincial',\n  'psychiatric',\n  'psychological',\n  'public',\n  'puny',\n  'pure',\n  'purring',\n  'puzzled',\n  'quaint',\n  'qualified',\n  'quarrelsome',\n  'querulous',\n  'quick',\n  'quickest',\n  'quiet',\n  'quintessential',\n  'quixotic',\n  'racial',\n  'radical',\n  'rainy',\n  'random',\n  'rapid',\n  'rare',\n  'raspy',\n  'rational',\n  'ratty',\n  'raw',\n  'ready',\n  'real',\n  'realistic',\n  'rear',\n  'reasonable',\n  'recent',\n  'reduced',\n  'redundant',\n  'regional',\n  'registered',\n  'regular',\n  'regulatory',\n  'related',\n  'relative',\n  'relaxed',\n  'relevant',\n  'reliable',\n  'relieved',\n  'religious',\n  'reluctant',\n  'remaining',\n  'remarkable',\n  'remote',\n  'renewed',\n  'representative',\n  'repulsive',\n  'required',\n  'resident',\n  'residential',\n  'resonant',\n  'respectable',\n  'respective',\n  'responsible',\n  'resulting',\n  'retail',\n  'retired',\n  'revolutionary',\n  'rich',\n  'ridiculous',\n  'right',\n  'rigid',\n  'ripe',\n  'rising',\n  'rival',\n  'roasted',\n  'robust',\n  'rolling',\n  'romantic',\n  'rotten',\n  'rough',\n  'round',\n  'royal',\n  'rubber',\n  'rude',\n  'ruling',\n  'running',\n  'rural',\n  'sacred',\n  'sad',\n  'safe',\n  'salty',\n  'satisfactory',\n  'satisfied',\n  'scared',\n  'scary',\n  'scattered',\n  'scientific',\n  'scornful',\n  'scrawny',\n  'screeching',\n  'secondary',\n  'secret',\n  'secure',\n  'select',\n  'selected',\n  'selective',\n  'selfish',\n  'semantic',\n  'senior',\n  'sensible',\n  'sensitive',\n  'separate',\n  'serious',\n  'severe',\n  'sexual',\n  'shaggy',\n  'shaky',\n  'shallow',\n  'shared',\n  'sharp',\n  'sheer',\n  'shiny',\n  'shivering',\n  'shocked',\n  'short',\n  'shrill',\n  'shy',\n  'sick',\n  'significant',\n  'silent',\n  'silky',\n  'silly',\n  'similar',\n  'simple',\n  'single',\n  'skilled',\n  'skinny',\n  'sleepy',\n  'slight',\n  'slim',\n  'slimy',\n  'slippery',\n  'slow',\n  'small',\n  'smart',\n  'smiling',\n  'smoggy',\n  'smooth',\n  'social',\n  'socialist',\n  'soft',\n  'solar',\n  'sole',\n  'solid',\n  'sophisticated',\n  'sore',\n  'sorry',\n  'sound',\n  'sour',\n  'southern',\n  'soviet',\n  'spare',\n  'sparkling',\n  'spatial',\n  'special',\n  'specific',\n  'specified',\n  'spectacular',\n  'spicy',\n  'spiritual',\n  'splendid',\n  'spontaneous',\n  'sporting',\n  'spotless',\n  'spotty',\n  'square',\n  'squealing',\n  'stable',\n  'stale',\n  'standard',\n  'static',\n  'statistical',\n  'statutory',\n  'steady',\n  'steep',\n  'sticky',\n  'stiff',\n  'still',\n  'stingy',\n  'stormy',\n  'straight',\n  'straightforward',\n  'strange',\n  'strategic',\n  'strict',\n  'striking',\n  'striped',\n  'strong',\n  'structural',\n  'stuck',\n  'stupid',\n  'subjective',\n  'subsequent',\n  'substantial',\n  'subtle',\n  'successful',\n  'successive',\n  'sudden',\n  'sufficient',\n  'suitable',\n  'sunny',\n  'super',\n  'superb',\n  'superior',\n  'supporting',\n  'supposed',\n  'supreme',\n  'sure',\n  'surprised',\n  'surprising',\n  'surrounding',\n  'surviving',\n  'suspicious',\n  'sweet',\n  'swift',\n  'symbolic',\n  'sympathetic',\n  'systematic',\n  'tall',\n  'tame',\n  'tart',\n  'tasteless',\n  'tasty',\n  'technical',\n  'technological',\n  'teenage',\n  'temporary',\n  'tender',\n  'tense',\n  'terrible',\n  'territorial',\n  'testy',\n  'then',\n  'theoretical',\n  'thick',\n  'thin',\n  'thirsty',\n  'thorough',\n  'thoughtful',\n  'thoughtless',\n  'thundering',\n  'tight',\n  'tiny',\n  'tired',\n  'top',\n  'tory',\n  'total',\n  'tough',\n  'toxic',\n  'traditional',\n  'tragic',\n  'tremendous',\n  'tricky',\n  'tropical',\n  'troubled',\n  'typical',\n  'ugliest',\n  'ugly',\n  'ultimate',\n  'unable',\n  'unacceptable',\n  'unaware',\n  'uncertain',\n  'unchanged',\n  'uncomfortable',\n  'unconscious',\n  'underground',\n  'underlying',\n  'unemployed',\n  'uneven',\n  'unexpected',\n  'unfair',\n  'unfortunate',\n  'unhappy',\n  'uniform',\n  'uninterested',\n  'unique',\n  'united',\n  'universal',\n  'unknown',\n  'unlikely',\n  'unnecessary',\n  'unpleasant',\n  'unsightly',\n  'unusual',\n  'unwilling',\n  'upper',\n  'upset',\n  'uptight',\n  'urban',\n  'urgent',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'vague',\n  'valid',\n  'valuable',\n  'variable',\n  'varied',\n  'various',\n  'varying',\n  'vast',\n  'verbal',\n  'vertical',\n  'very',\n  'vicarious',\n  'vicious',\n  'victorious',\n  'violent',\n  'visible',\n  'visiting',\n  'visual',\n  'vital',\n  'vitreous',\n  'vivacious',\n  'vivid',\n  'vocal',\n  'vocational',\n  'voiceless',\n  'voluminous',\n  'voluntary',\n  'vulnerable',\n  'wandering',\n  'warm',\n  'wasteful',\n  'watery',\n  'weak',\n  'wealthy',\n  'weary',\n  'wee',\n  'weekly',\n  'weird',\n  'welcome',\n  'well',\n  'western',\n  'wet',\n  'whispering',\n  'whole',\n  'wicked',\n  'wide',\n  'widespread',\n  'wild',\n  'wilful',\n  'willing',\n  'willowy',\n  'wily',\n  'wise',\n  'wispy',\n  'wittering',\n  'witty',\n  'wonderful',\n  'wooden',\n  'working',\n  'worldwide',\n  'worried',\n  'worrying',\n  'worthwhile',\n  'worthy',\n  'written',\n  'wrong',\n  'xenacious',\n  'xenial',\n  'xenogeneic',\n  'xenophobic',\n  'xeric',\n  'xerothermic',\n  'yabbering',\n  'yammering',\n  'yappiest',\n  'yappy',\n  'yawning',\n  'yearling',\n  'yearning',\n  'yeasty',\n  'yelling',\n  'yelping',\n  'yielding',\n  'yodelling',\n  'young',\n  'youngest',\n  'youthful',\n  'ytterbic',\n  'yucky',\n  'yummy',\n  'zany',\n  'zealous',\n  'zeroth',\n  'zestful',\n  'zesty',\n  'zippy',\n  'zonal',\n  'zoophagous',\n  'zygomorphic',\n  'zygotic',\n];\n","export default [\n  'aardvark',\n  'aardwolf',\n  'albatross',\n  'alligator',\n  'alpaca',\n  'amphibian',\n  'anaconda',\n  'angelfish',\n  'anglerfish',\n  'ant',\n  'anteater',\n  'antelope',\n  'antlion',\n  'ape',\n  'aphid',\n  'armadillo',\n  'asp',\n  'baboon',\n  'badger',\n  'bandicoot',\n  'barnacle',\n  'barracuda',\n  'basilisk',\n  'bass',\n  'bat',\n  'bear',\n  'beaver',\n  'bedbug',\n  'bee',\n  'beetle',\n  'bird',\n  'bison',\n  'blackbird',\n  'boa',\n  'boar',\n  'bobcat',\n  'bobolink',\n  'bonobo',\n  'booby',\n  'bovid',\n  'bug',\n  'butterfly',\n  'buzzard',\n  'camel',\n  'canid',\n  'canidae',\n  'capybara',\n  'cardinal',\n  'caribou',\n  'carp',\n  'cat',\n  'caterpillar',\n  'catfish',\n  'catshark',\n  'cattle',\n  'centipede',\n  'cephalopod',\n  'chameleon',\n  'cheetah',\n  'chickadee',\n  'chicken',\n  'chimpanzee',\n  'chinchilla',\n  'chipmunk',\n  'cicada',\n  'clam',\n  'clownfish',\n  'cobra',\n  'cockroach',\n  'cod',\n  'condor',\n  'constrictor',\n  'coral',\n  'cougar',\n  'cow',\n  'coyote',\n  'crab',\n  'crane',\n  'crawdad',\n  'crayfish',\n  'cricket',\n  'crocodile',\n  'crow',\n  'cuckoo',\n  'damselfly',\n  'deer',\n  'dingo',\n  'dinosaur',\n  'dog',\n  'dolphin',\n  'donkey',\n  'dormouse',\n  'dove',\n  'dragon',\n  'dragonfly',\n  'duck',\n  'eagle',\n  'earthworm',\n  'earwig',\n  'echidna',\n  'eel',\n  'egret',\n  'elephant',\n  'elk',\n  'emu',\n  'ermine',\n  'falcon',\n  'felidae',\n  'ferret',\n  'finch',\n  'firefly',\n  'fish',\n  'flamingo',\n  'flea',\n  'fly',\n  'flyingfish',\n  'fowl',\n  'fox',\n  'frog',\n  'galliform',\n  'gamefowl',\n  'gayal',\n  'gazelle',\n  'gecko',\n  'gerbil',\n  'gibbon',\n  'giraffe',\n  'goat',\n  'goldfish',\n  'goose',\n  'gopher',\n  'gorilla',\n  'grasshopper',\n  'grouse',\n  'guan',\n  'guanaco',\n  'guineafowl',\n  'gull',\n  'guppy',\n  'haddock',\n  'halibut',\n  'hamster',\n  'hare',\n  'harrier',\n  'hawk',\n  'hedgehog',\n  'heron',\n  'herring',\n  'hippopotamus',\n  'hookworm',\n  'hornet',\n  'horse',\n  'hoverfly',\n  'hummingbird',\n  'hyena',\n  'iguana',\n  'impala',\n  'jackal',\n  'jaguar',\n  'jay',\n  'jellyfish',\n  'junglefowl',\n  'kangaroo',\n  'kingfisher',\n  'kite',\n  'kiwi',\n  'koala',\n  'koi',\n  'krill',\n  'ladybug',\n  'lamprey',\n  'landfowl',\n  'lark',\n  'leech',\n  'lemming',\n  'lemur',\n  'leopard',\n  'leopon',\n  'limpet',\n  'lion',\n  'lizard',\n  'llama',\n  'lobster',\n  'locust',\n  'loon',\n  'louse',\n  'lungfish',\n  'lynx',\n  'macaw',\n  'mackerel',\n  'magpie',\n  'mammal',\n  'manatee',\n  'mandrill',\n  'marlin',\n  'marmoset',\n  'marmot',\n  'marsupial',\n  'marten',\n  'mastodon',\n  'meadowlark',\n  'meerkat',\n  'mink',\n  'minnow',\n  'mite',\n  'mockingbird',\n  'mole',\n  'mollusk',\n  'mongoose',\n  'monkey',\n  'moose',\n  'mosquito',\n  'moth',\n  'mouse',\n  'mule',\n  'muskox',\n  'narwhal',\n  'newt',\n  'nightingale',\n  'ocelot',\n  'octopus',\n  'opossum',\n  'orangutan',\n  'orca',\n  'ostrich',\n  'otter',\n  'owl',\n  'ox',\n  'panda',\n  'panther',\n  'parakeet',\n  'parrot',\n  'parrotfish',\n  'partridge',\n  'peacock',\n  'peafowl',\n  'pelican',\n  'penguin',\n  'perch',\n  'pheasant',\n  'pig',\n  'pigeon',\n  'pike',\n  'pinniped',\n  'piranha',\n  'planarian',\n  'platypus',\n  'pony',\n  'porcupine',\n  'porpoise',\n  'possum',\n  'prawn',\n  'primate',\n  'ptarmigan',\n  'puffin',\n  'puma',\n  'python',\n  'quail',\n  'quelea',\n  'quokka',\n  'rabbit',\n  'raccoon',\n  'rat',\n  'rattlesnake',\n  'raven',\n  'reindeer',\n  'reptile',\n  'rhinoceros',\n  'roadrunner',\n  'rodent',\n  'rook',\n  'rooster',\n  'roundworm',\n  'sailfish',\n  'salamander',\n  'salmon',\n  'sawfish',\n  'scallop',\n  'scorpion',\n  'seahorse',\n  'shark',\n  'sheep',\n  'shrew',\n  'shrimp',\n  'silkworm',\n  'silverfish',\n  'skink',\n  'skunk',\n  'sloth',\n  'slug',\n  'smelt',\n  'snail',\n  'snake',\n  'snipe',\n  'sole',\n  'sparrow',\n  'spider',\n  'spoonbill',\n  'squid',\n  'squirrel',\n  'starfish',\n  'stingray',\n  'stoat',\n  'stork',\n  'sturgeon',\n  'swallow',\n  'swan',\n  'swift',\n  'swordfish',\n  'swordtail',\n  'tahr',\n  'takin',\n  'tapir',\n  'tarantula',\n  'tarsier',\n  'termite',\n  'tern',\n  'thrush',\n  'tick',\n  'tiger',\n  'tiglon',\n  'toad',\n  'tortoise',\n  'toucan',\n  'trout',\n  'tuna',\n  'turkey',\n  'turtle',\n  'tyrannosaurus',\n  'unicorn',\n  'urial',\n  'vicuna',\n  'viper',\n  'vole',\n  'vulture',\n  'wallaby',\n  'walrus',\n  'warbler',\n  'wasp',\n  'weasel',\n  'whale',\n  'whippet',\n  'whitefish',\n  'wildcat',\n  'wildebeest',\n  'wildfowl',\n  'wolf',\n  'wolverine',\n  'wombat',\n  'woodpecker',\n  'worm',\n  'wren',\n  'xerinae',\n  'yak',\n  'zebra',\n];\n","export default [\n  'amaranth',\n  'amber',\n  'amethyst',\n  'apricot',\n  'aqua',\n  'aquamarine',\n  'azure',\n  'beige',\n  'black',\n  'blue',\n  'blush',\n  'bronze',\n  'brown',\n  'chocolate',\n  'coffee',\n  'copper',\n  'coral',\n  'crimson',\n  'cyan',\n  'emerald',\n  'fuchsia',\n  'gold',\n  'gray',\n  'green',\n  'harlequin',\n  'indigo',\n  'ivory',\n  'jade',\n  'lavender',\n  'lime',\n  'magenta',\n  'maroon',\n  'moccasin',\n  'olive',\n  'orange',\n  'peach',\n  'pink',\n  'plum',\n  'purple',\n  'red',\n  'rose',\n  'salmon',\n  'sapphire',\n  'scarlet',\n  'silver',\n  'tan',\n  'teal',\n  'tomato',\n  'turquoise',\n  'violet',\n  'white',\n  'yellow',\n];\n","export default [\n  'Afghanistan',\n  'Åland Islands',\n  'Albania',\n  'Algeria',\n  'American Samoa',\n  'Andorra',\n  'Angola',\n  'Anguilla',\n  'Antarctica',\n  'Antigua & Barbuda',\n  'Argentina',\n  'Armenia',\n  'Aruba',\n  'Ascension Island',\n  'Australia',\n  'Austria',\n  'Azerbaijan',\n  'Bahamas',\n  'Bahrain',\n  'Bangladesh',\n  'Barbados',\n  'Belarus',\n  'Belgium',\n  'Belize',\n  'Benin',\n  'Bermuda',\n  'Bhutan',\n  'Bolivia',\n  'Bosnia & Herzegovina',\n  'Botswana',\n  'Brazil',\n  'British Indian Ocean Territory',\n  'British Virgin Islands',\n  'Brunei',\n  'Bulgaria',\n  'Burkina Faso',\n  'Burundi',\n  'Cambodia',\n  'Cameroon',\n  'Canada',\n  'Canary Islands',\n  'Cape Verde',\n  'Caribbean Netherlands',\n  'Cayman Islands',\n  'Central African Republic',\n  'Ceuta & Melilla',\n  'Chad',\n  'Chile',\n  'China',\n  'Christmas Island',\n  'Cocos Islands',\n  'Colombia',\n  'Comoros',\n  'Congo',\n  'Cook Islands',\n  'Costa Rica',\n  \"Côte d'Ivoire\",\n  'Croatia',\n  'Cuba',\n  'Curaçao',\n  'Cyprus',\n  'Czechia',\n  'Denmark',\n  'Diego Garcia',\n  'Djibouti',\n  'Dominica',\n  'Dominican Republic',\n  'Ecuador',\n  'Egypt',\n  'El Salvador',\n  'Equatorial Guinea',\n  'Eritrea',\n  'Estonia',\n  'Ethiopia',\n  'Eurozone',\n  'Falkland Islands',\n  'Faroe Islands',\n  'Fiji',\n  'Finland',\n  'France',\n  'French Guiana',\n  'French Polynesia',\n  'French Southern Territories',\n  'Gabon',\n  'Gambia',\n  'Georgia',\n  'Germany',\n  'Ghana',\n  'Gibraltar',\n  'Greece',\n  'Greenland',\n  'Grenada',\n  'Guadeloupe',\n  'Guam',\n  'Guatemala',\n  'Guernsey',\n  'Guinea',\n  'Guinea-Bissau',\n  'Guyana',\n  'Haiti',\n  'Honduras',\n  'Hong Kong SAR China',\n  'Hungary',\n  'Iceland',\n  'India',\n  'Indonesia',\n  'Iran',\n  'Iraq',\n  'Ireland',\n  'Isle of Man',\n  'Israel',\n  'Italy',\n  'Jamaica',\n  'Japan',\n  'Jersey',\n  'Jordan',\n  'Kazakhstan',\n  'Kenya',\n  'Kiribati',\n  'Kosovo',\n  'Kuwait',\n  'Kyrgyzstan',\n  'Laos',\n  'Latvia',\n  'Lebanon',\n  'Lesotho',\n  'Liberia',\n  'Libya',\n  'Liechtenstein',\n  'Lithuania',\n  'Luxembourg',\n  'Macau SAR China',\n  'Macedonia',\n  'Madagascar',\n  'Malawi',\n  'Malaysia',\n  'Maldives',\n  'Mali',\n  'Malta',\n  'Marshall Islands',\n  'Martinique',\n  'Mauritania',\n  'Mauritius',\n  'Mayotte',\n  'Mexico',\n  'Micronesia',\n  'Moldova',\n  'Monaco',\n  'Mongolia',\n  'Montenegro',\n  'Montserrat',\n  'Morocco',\n  'Mozambique',\n  'Myanmar',\n  'Namibia',\n  'Nauru',\n  'Nepal',\n  'Netherlands',\n  'New Caledonia',\n  'New Zealand',\n  'Nicaragua',\n  'Niger',\n  'Nigeria',\n  'Niue',\n  'Norfolk Island',\n  'North Korea',\n  'Northern Mariana Islands',\n  'Norway',\n  'Oman',\n  'Pakistan',\n  'Palau',\n  'Palestinian Territories',\n  'Panama',\n  'Papua New Guinea',\n  'Paraguay',\n  'Peru',\n  'Philippines',\n  'Pitcairn Islands',\n  'Poland',\n  'Portugal',\n  'Puerto Rico',\n  'Qatar',\n  'Réunion',\n  'Romania',\n  'Russia',\n  'Rwanda',\n  'Samoa',\n  'San Marino',\n  'São Tomé & Príncipe',\n  'Saudi Arabia',\n  'Senegal',\n  'Serbia',\n  'Seychelles',\n  'Sierra Leone',\n  'Singapore',\n  'Sint Maarten',\n  'Slovakia',\n  'Slovenia',\n  'Solomon Islands',\n  'Somalia',\n  'South Africa',\n  'South Georgia & South Sandwich Islands',\n  'South Korea',\n  'South Sudan',\n  'Spain',\n  'Sri Lanka',\n  'St. Barthélemy',\n  'St. Helena',\n  'St. Kitts & Nevis',\n  'St. Lucia',\n  'St. Martin',\n  'St. Pierre & Miquelon',\n  'St. Vincent & Grenadines',\n  'Sudan',\n  'Suriname',\n  'Svalbard & Jan Mayen',\n  'Swaziland',\n  'Sweden',\n  'Switzerland',\n  'Syria',\n  'Taiwan',\n  'Tajikistan',\n  'Tanzania',\n  'Thailand',\n  'Timor-Leste',\n  'Togo',\n  'Tokelau',\n  'Tonga',\n  'Trinidad & Tobago',\n  'Tristan da Cunha',\n  'Tunisia',\n  'Turkey',\n  'Turkmenistan',\n  'Turks & Caicos Islands',\n  'Tuvalu',\n  'U.S. Outlying Islands',\n  'U.S. Virgin Islands',\n  'Uganda',\n  'Ukraine',\n  'United Arab Emirates',\n  'United Kingdom',\n  'United Nations',\n  'United States',\n  'Uruguay',\n  'Uzbekistan',\n  'Vanuatu',\n  'Vatican City',\n  'Venezuela',\n  'Vietnam',\n  'Wallis & Futuna',\n  'Western Sahara',\n  'Yemen',\n  'Zambia',\n  'Zimbabwe',\n];\n","export default [\n  'Akan',\n  'Amharic',\n  'Arabic',\n  'Assamese',\n  'Awadhi',\n  'Azerbaijani',\n  'Balochi',\n  'Belarusian',\n  'Bengali',\n  'Bhojpuri',\n  'Burmese',\n  'Cebuano',\n  'Chewa',\n  'Chhattisgarhi',\n  'Chittagonian',\n  'Czech',\n  'Deccan',\n  'Dhundhari',\n  'Dutch',\n  'English',\n  'French',\n  'Fula',\n  'Gan',\n  'German',\n  'Greek',\n  'Gujarati',\n  'Hakka',\n  'Haryanvi',\n  'Hausa',\n  'Hiligaynon',\n  'Hindi',\n  'Hmong',\n  'Hungarian',\n  'Igbo',\n  'Ilocano',\n  'Italian',\n  'Japanese',\n  'Javanese',\n  'Jin',\n  'Kannada',\n  'Kazakh',\n  'Khmer',\n  'Kinyarwanda',\n  'Kirundi',\n  'Konkani',\n  'Korean',\n  'Kurdish',\n  'Madurese',\n  'Magahi',\n  'Maithili',\n  'Malagasy',\n  'Malay',\n  'Malayalam',\n  'Mandarin',\n  'Marathi',\n  'Marwari',\n  'Min',\n  'Mossi',\n  'Nepali',\n  'Odia',\n  'Oromo',\n  'Pashto',\n  'Persian',\n  'Polish',\n  'Portuguese',\n  'Punjabi',\n  'Quechua',\n  'Romanian',\n  'Russian',\n  'Saraiki',\n  'Shona',\n  'Sindhi',\n  'Sinhala',\n  'Somali',\n  'Spanish',\n  'Sundanese',\n  'Swedish',\n  'Sylheti',\n  'Tagalog',\n  'Tamil',\n  'Telugu',\n  'Thai',\n  'Turkish',\n  'Turkmen',\n  'Ukrainian',\n  'Urdu',\n  'Uyghur',\n  'Uzbek',\n  'Vietnamese',\n  'Wu',\n  'Xhosa',\n  'Xiang',\n  'Yoruba',\n  'Yue',\n  'Zhuang',\n  'Zulu',\n];\n","export default [\n  'Aaren',\n  'Aarika',\n  'Abagael',\n  'Abagail',\n  'Abbe',\n  'Abbey',\n  'Abbi',\n  'Abbie',\n  'Abby',\n  'Abbye',\n  'Abigael',\n  'Abigail',\n  'Abigale',\n  'Abra',\n  'Ada',\n  'Adah',\n  'Adaline',\n  'Adan',\n  'Adara',\n  'Adda',\n  'Addi',\n  'Addia',\n  'Addie',\n  'Addy',\n  'Adel',\n  'Adela',\n  'Adelaida',\n  'Adelaide',\n  'Adele',\n  'Adelheid',\n  'Adelice',\n  'Adelina',\n  'Adelind',\n  'Adeline',\n  'Adella',\n  'Adelle',\n  'Adena',\n  'Adey',\n  'Adi',\n  'Adiana',\n  'Adina',\n  'Adora',\n  'Adore',\n  'Adoree',\n  'Adorne',\n  'Adrea',\n  'Adria',\n  'Adriaens',\n  'Adrian',\n  'Adriana',\n  'Adriane',\n  'Adrianna',\n  'Adrianne',\n  'Adriena',\n  'Adrienne',\n  'Aeriel',\n  'Aeriela',\n  'Aeriell',\n  'Afton',\n  'Ag',\n  'Agace',\n  'Agata',\n  'Agatha',\n  'Agathe',\n  'Aggi',\n  'Aggie',\n  'Aggy',\n  'Agna',\n  'Agnella',\n  'Agnes',\n  'Agnese',\n  'Agnesse',\n  'Agneta',\n  'Agnola',\n  'Agretha',\n  'Aida',\n  'Aidan',\n  'Aigneis',\n  'Aila',\n  'Aile',\n  'Ailee',\n  'Aileen',\n  'Ailene',\n  'Ailey',\n  'Aili',\n  'Ailina',\n  'Ailis',\n  'Ailsun',\n  'Ailyn',\n  'Aime',\n  'Aimee',\n  'Aimil',\n  'Aindrea',\n  'Ainslee',\n  'Ainsley',\n  'Ainslie',\n  'Ajay',\n  'Alaine',\n  'Alameda',\n  'Alana',\n  'Alanah',\n  'Alane',\n  'Alanna',\n  'Alayne',\n  'Alberta',\n  'Albertina',\n  'Albertine',\n  'Albina',\n  'Alecia',\n  'Aleda',\n  'Aleece',\n  'Aleen',\n  'Alejandra',\n  'Alejandrina',\n  'Alena',\n  'Alene',\n  'Alessandra',\n  'Aleta',\n  'Alethea',\n  'Alex',\n  'Alexa',\n  'Alexandra',\n  'Alexandrina',\n  'Alexi',\n  'Alexia',\n  'Alexina',\n  'Alexine',\n  'Alexis',\n  'Alfi',\n  'Alfie',\n  'Alfreda',\n  'Alfy',\n  'Ali',\n  'Alia',\n  'Alica',\n  'Alice',\n  'Alicea',\n  'Alicia',\n  'Alida',\n  'Alidia',\n  'Alie',\n  'Alika',\n  'Alikee',\n  'Alina',\n  'Aline',\n  'Alis',\n  'Alisa',\n  'Alisha',\n  'Alison',\n  'Alissa',\n  'Alisun',\n  'Alix',\n  'Aliza',\n  'Alla',\n  'Alleen',\n  'Allegra',\n  'Allene',\n  'Alli',\n  'Allianora',\n  'Allie',\n  'Allina',\n  'Allis',\n  'Allison',\n  'Allissa',\n  'Allix',\n  'Allsun',\n  'Allx',\n  'Ally',\n  'Allyce',\n  'Allyn',\n  'Allys',\n  'Allyson',\n  'Alma',\n  'Almeda',\n  'Almeria',\n  'Almeta',\n  'Almira',\n  'Almire',\n  'Aloise',\n  'Aloisia',\n  'Aloysia',\n  'Alta',\n  'Althea',\n  'Alvera',\n  'Alverta',\n  'Alvina',\n  'Alvinia',\n  'Alvira',\n  'Alyce',\n  'Alyda',\n  'Alys',\n  'Alysa',\n  'Alyse',\n  'Alysia',\n  'Alyson',\n  'Alyss',\n  'Alyssa',\n  'Amabel',\n  'Amabelle',\n  'Amalea',\n  'Amalee',\n  'Amaleta',\n  'Amalia',\n  'Amalie',\n  'Amalita',\n  'Amalle',\n  'Amanda',\n  'Amandi',\n  'Amandie',\n  'Amandy',\n  'Amara',\n  'Amargo',\n  'Amata',\n  'Amber',\n  'Amberly',\n  'Ambur',\n  'Ame',\n  'Amelia',\n  'Amelie',\n  'Amelina',\n  'Ameline',\n  'Amelita',\n  'Ami',\n  'Amie',\n  'Amii',\n  'Amil',\n  'Amitie',\n  'Amity',\n  'Ammamaria',\n  'Amy',\n  'Amye',\n  'Ana',\n  'Anabal',\n  'Anabel',\n  'Anabella',\n  'Anabelle',\n  'Analiese',\n  'Analise',\n  'Anallese',\n  'Anallise',\n  'Anastasia',\n  'Anastasie',\n  'Anastassia',\n  'Anatola',\n  'Andee',\n  'Andeee',\n  'Anderea',\n  'Andi',\n  'Andie',\n  'Andra',\n  'Andrea',\n  'Andreana',\n  'Andree',\n  'Andrei',\n  'Andria',\n  'Andriana',\n  'Andriette',\n  'Andromache',\n  'Andy',\n  'Anestassia',\n  'Anet',\n  'Anett',\n  'Anetta',\n  'Anette',\n  'Ange',\n  'Angel',\n  'Angela',\n  'Angele',\n  'Angelia',\n  'Angelica',\n  'Angelika',\n  'Angelina',\n  'Angeline',\n  'Angelique',\n  'Angelita',\n  'Angelle',\n  'Angie',\n  'Angil',\n  'Angy',\n  'Ania',\n  'Anica',\n  'Anissa',\n  'Anita',\n  'Anitra',\n  'Anjanette',\n  'Anjela',\n  'Ann',\n  'Ann-marie',\n  'Anna',\n  'Anna-diana',\n  'Anna-diane',\n  'Anna-maria',\n  'Annabal',\n  'Annabel',\n  'Annabela',\n  'Annabell',\n  'Annabella',\n  'Annabelle',\n  'Annadiana',\n  'Annadiane',\n  'Annalee',\n  'Annaliese',\n  'Annalise',\n  'Annamaria',\n  'Annamarie',\n  'Anne',\n  'Anne-corinne',\n  'Anne-marie',\n  'Annecorinne',\n  'Anneliese',\n  'Annelise',\n  'Annemarie',\n  'Annetta',\n  'Annette',\n  'Anni',\n  'Annice',\n  'Annie',\n  'Annis',\n  'Annissa',\n  'Annmaria',\n  'Annmarie',\n  'Annnora',\n  'Annora',\n  'Anny',\n  'Anselma',\n  'Ansley',\n  'Anstice',\n  'Anthe',\n  'Anthea',\n  'Anthia',\n  'Anthiathia',\n  'Antoinette',\n  'Antonella',\n  'Antonetta',\n  'Antonia',\n  'Antonie',\n  'Antonietta',\n  'Antonina',\n  'Anya',\n  'Appolonia',\n  'April',\n  'Aprilette',\n  'Ara',\n  'Arabel',\n  'Arabela',\n  'Arabele',\n  'Arabella',\n  'Arabelle',\n  'Arda',\n  'Ardath',\n  'Ardeen',\n  'Ardelia',\n  'Ardelis',\n  'Ardella',\n  'Ardelle',\n  'Arden',\n  'Ardene',\n  'Ardenia',\n  'Ardine',\n  'Ardis',\n  'Ardisj',\n  'Ardith',\n  'Ardra',\n  'Ardyce',\n  'Ardys',\n  'Ardyth',\n  'Aretha',\n  'Ariadne',\n  'Ariana',\n  'Aridatha',\n  'Ariel',\n  'Ariela',\n  'Ariella',\n  'Arielle',\n  'Arlana',\n  'Arlee',\n  'Arleen',\n  'Arlen',\n  'Arlena',\n  'Arlene',\n  'Arleta',\n  'Arlette',\n  'Arleyne',\n  'Arlie',\n  'Arliene',\n  'Arlina',\n  'Arlinda',\n  'Arline',\n  'Arluene',\n  'Arly',\n  'Arlyn',\n  'Arlyne',\n  'Aryn',\n  'Ashely',\n  'Ashia',\n  'Ashien',\n  'Ashil',\n  'Ashla',\n  'Ashlan',\n  'Ashlee',\n  'Ashleigh',\n  'Ashlen',\n  'Ashley',\n  'Ashli',\n  'Ashlie',\n  'Ashly',\n  'Asia',\n  'Astra',\n  'Astrid',\n  'Astrix',\n  'Atalanta',\n  'Athena',\n  'Athene',\n  'Atlanta',\n  'Atlante',\n  'Auberta',\n  'Aubine',\n  'Aubree',\n  'Aubrette',\n  'Aubrey',\n  'Aubrie',\n  'Aubry',\n  'Audi',\n  'Audie',\n  'Audra',\n  'Audre',\n  'Audrey',\n  'Audrie',\n  'Audry',\n  'Audrye',\n  'Audy',\n  'Augusta',\n  'Auguste',\n  'Augustina',\n  'Augustine',\n  'Aundrea',\n  'Aura',\n  'Aurea',\n  'Aurel',\n  'Aurelea',\n  'Aurelia',\n  'Aurelie',\n  'Auria',\n  'Aurie',\n  'Aurilia',\n  'Aurlie',\n  'Auroora',\n  'Aurora',\n  'Aurore',\n  'Austin',\n  'Austina',\n  'Austine',\n  'Ava',\n  'Aveline',\n  'Averil',\n  'Averyl',\n  'Avie',\n  'Avis',\n  'Aviva',\n  'Avivah',\n  'Avril',\n  'Avrit',\n  'Ayn',\n  'Bab',\n  'Babara',\n  'Babb',\n  'Babbette',\n  'Babbie',\n  'Babette',\n  'Babita',\n  'Babs',\n  'Bambi',\n  'Bambie',\n  'Bamby',\n  'Barb',\n  'Barbabra',\n  'Barbara',\n  'Barbara-anne',\n  'Barbaraanne',\n  'Barbe',\n  'Barbee',\n  'Barbette',\n  'Barbey',\n  'Barbi',\n  'Barbie',\n  'Barbra',\n  'Barby',\n  'Bari',\n  'Barrie',\n  'Barry',\n  'Basia',\n  'Bathsheba',\n  'Batsheva',\n  'Bea',\n  'Beatrice',\n  'Beatrisa',\n  'Beatrix',\n  'Beatriz',\n  'Bebe',\n  'Becca',\n  'Becka',\n  'Becki',\n  'Beckie',\n  'Becky',\n  'Bee',\n  'Beilul',\n  'Beitris',\n  'Bekki',\n  'Bel',\n  'Belia',\n  'Belicia',\n  'Belinda',\n  'Belita',\n  'Bell',\n  'Bella',\n  'Bellanca',\n  'Belle',\n  'Bellina',\n  'Belva',\n  'Belvia',\n  'Bendite',\n  'Benedetta',\n  'Benedicta',\n  'Benedikta',\n  'Benetta',\n  'Benita',\n  'Benni',\n  'Bennie',\n  'Benny',\n  'Benoite',\n  'Berenice',\n  'Beret',\n  'Berget',\n  'Berna',\n  'Bernadene',\n  'Bernadette',\n  'Bernadina',\n  'Bernadine',\n  'Bernardina',\n  'Bernardine',\n  'Bernelle',\n  'Bernete',\n  'Bernetta',\n  'Bernette',\n  'Berni',\n  'Bernice',\n  'Bernie',\n  'Bernita',\n  'Berny',\n  'Berri',\n  'Berrie',\n  'Berry',\n  'Bert',\n  'Berta',\n  'Berte',\n  'Bertha',\n  'Berthe',\n  'Berti',\n  'Bertie',\n  'Bertina',\n  'Bertine',\n  'Berty',\n  'Beryl',\n  'Beryle',\n  'Bess',\n  'Bessie',\n  'Bessy',\n  'Beth',\n  'Bethanne',\n  'Bethany',\n  'Bethena',\n  'Bethina',\n  'Betsey',\n  'Betsy',\n  'Betta',\n  'Bette',\n  'Bette-ann',\n  'Betteann',\n  'Betteanne',\n  'Betti',\n  'Bettina',\n  'Bettine',\n  'Betty',\n  'Bettye',\n  'Beulah',\n  'Bev',\n  'Beverie',\n  'Beverlee',\n  'Beverley',\n  'Beverlie',\n  'Beverly',\n  'Bevvy',\n  'Bianca',\n  'Bianka',\n  'Bibbie',\n  'Bibby',\n  'Bibbye',\n  'Bibi',\n  'Biddie',\n  'Biddy',\n  'Bidget',\n  'Bili',\n  'Bill',\n  'Billi',\n  'Billie',\n  'Billy',\n  'Billye',\n  'Binni',\n  'Binnie',\n  'Binny',\n  'Bird',\n  'Birdie',\n  'Birgit',\n  'Birgitta',\n  'Blair',\n  'Blaire',\n  'Blake',\n  'Blakelee',\n  'Blakeley',\n  'Blanca',\n  'Blanch',\n  'Blancha',\n  'Blanche',\n  'Blinni',\n  'Blinnie',\n  'Blinny',\n  'Bliss',\n  'Blisse',\n  'Blithe',\n  'Blondell',\n  'Blondelle',\n  'Blondie',\n  'Blondy',\n  'Blythe',\n  'Bobbe',\n  'Bobbee',\n  'Bobbette',\n  'Bobbi',\n  'Bobbie',\n  'Bobby',\n  'Bobbye',\n  'Bobette',\n  'Bobina',\n  'Bobine',\n  'Bobinette',\n  'Bonita',\n  'Bonnee',\n  'Bonni',\n  'Bonnibelle',\n  'Bonnie',\n  'Bonny',\n  'Brana',\n  'Brandais',\n  'Brande',\n  'Brandea',\n  'Brandi',\n  'Brandice',\n  'Brandie',\n  'Brandise',\n  'Brandy',\n  'Breanne',\n  'Brear',\n  'Bree',\n  'Breena',\n  'Bren',\n  'Brena',\n  'Brenda',\n  'Brenn',\n  'Brenna',\n  'Brett',\n  'Bria',\n  'Briana',\n  'Brianna',\n  'Brianne',\n  'Bride',\n  'Bridget',\n  'Bridgette',\n  'Bridie',\n  'Brier',\n  'Brietta',\n  'Brigid',\n  'Brigida',\n  'Brigit',\n  'Brigitta',\n  'Brigitte',\n  'Brina',\n  'Briney',\n  'Brinn',\n  'Brinna',\n  'Briny',\n  'Brit',\n  'Brita',\n  'Britney',\n  'Britni',\n  'Britt',\n  'Britta',\n  'Brittan',\n  'Brittaney',\n  'Brittani',\n  'Brittany',\n  'Britte',\n  'Britteny',\n  'Brittne',\n  'Brittney',\n  'Brittni',\n  'Brook',\n  'Brooke',\n  'Brooks',\n  'Brunhilda',\n  'Brunhilde',\n  'Bryana',\n  'Bryn',\n  'Bryna',\n  'Brynn',\n  'Brynna',\n  'Brynne',\n  'Buffy',\n  'Bunni',\n  'Bunnie',\n  'Bunny',\n  'Cacilia',\n  'Cacilie',\n  'Cahra',\n  'Cairistiona',\n  'Caitlin',\n  'Caitrin',\n  'Cal',\n  'Calida',\n  'Calla',\n  'Calley',\n  'Calli',\n  'Callida',\n  'Callie',\n  'Cally',\n  'Calypso',\n  'Cam',\n  'Camala',\n  'Camel',\n  'Camella',\n  'Camellia',\n  'Cami',\n  'Camila',\n  'Camile',\n  'Camilla',\n  'Camille',\n  'Cammi',\n  'Cammie',\n  'Cammy',\n  'Candace',\n  'Candi',\n  'Candice',\n  'Candida',\n  'Candide',\n  'Candie',\n  'Candis',\n  'Candra',\n  'Candy',\n  'Caprice',\n  'Cara',\n  'Caralie',\n  'Caren',\n  'Carena',\n  'Caresa',\n  'Caressa',\n  'Caresse',\n  'Carey',\n  'Cari',\n  'Caria',\n  'Carie',\n  'Caril',\n  'Carilyn',\n  'Carin',\n  'Carina',\n  'Carine',\n  'Cariotta',\n  'Carissa',\n  'Carita',\n  'Caritta',\n  'Carla',\n  'Carlee',\n  'Carleen',\n  'Carlen',\n  'Carlene',\n  'Carley',\n  'Carlie',\n  'Carlin',\n  'Carlina',\n  'Carline',\n  'Carlita',\n  'Carlota',\n  'Carlotta',\n  'Carly',\n  'Carlye',\n  'Carlyn',\n  'Carlynn',\n  'Carlynne',\n  'Carma',\n  'Carmel',\n  'Carmela',\n  'Carmelia',\n  'Carmelina',\n  'Carmelita',\n  'Carmella',\n  'Carmelle',\n  'Carmen',\n  'Carmencita',\n  'Carmina',\n  'Carmine',\n  'Carmita',\n  'Carmon',\n  'Caro',\n  'Carol',\n  'Carol-jean',\n  'Carola',\n  'Carolan',\n  'Carolann',\n  'Carole',\n  'Carolee',\n  'Carolin',\n  'Carolina',\n  'Caroline',\n  'Caroljean',\n  'Carolyn',\n  'Carolyne',\n  'Carolynn',\n  'Caron',\n  'Carree',\n  'Carri',\n  'Carrie',\n  'Carrissa',\n  'Carroll',\n  'Carry',\n  'Cary',\n  'Caryl',\n  'Caryn',\n  'Casandra',\n  'Casey',\n  'Casi',\n  'Casie',\n  'Cass',\n  'Cassandra',\n  'Cassandre',\n  'Cassandry',\n  'Cassaundra',\n  'Cassey',\n  'Cassi',\n  'Cassie',\n  'Cassondra',\n  'Cassy',\n  'Catarina',\n  'Cate',\n  'Caterina',\n  'Catha',\n  'Catharina',\n  'Catharine',\n  'Cathe',\n  'Cathee',\n  'Catherin',\n  'Catherina',\n  'Catherine',\n  'Cathi',\n  'Cathie',\n  'Cathleen',\n  'Cathlene',\n  'Cathrin',\n  'Cathrine',\n  'Cathryn',\n  'Cathy',\n  'Cathyleen',\n  'Cati',\n  'Catie',\n  'Catina',\n  'Catlaina',\n  'Catlee',\n  'Catlin',\n  'Catrina',\n  'Catriona',\n  'Caty',\n  'Caye',\n  'Cayla',\n  'Cecelia',\n  'Cecil',\n  'Cecile',\n  'Ceciley',\n  'Cecilia',\n  'Cecilla',\n  'Cecily',\n  'Ceil',\n  'Cele',\n  'Celene',\n  'Celesta',\n  'Celeste',\n  'Celestia',\n  'Celestina',\n  'Celestine',\n  'Celestyn',\n  'Celestyna',\n  'Celia',\n  'Celie',\n  'Celina',\n  'Celinda',\n  'Celine',\n  'Celinka',\n  'Celisse',\n  'Celka',\n  'Celle',\n  'Cesya',\n  'Chad',\n  'Chanda',\n  'Chandal',\n  'Chandra',\n  'Channa',\n  'Chantal',\n  'Chantalle',\n  'Charil',\n  'Charin',\n  'Charis',\n  'Charissa',\n  'Charisse',\n  'Charita',\n  'Charity',\n  'Charla',\n  'Charlean',\n  'Charleen',\n  'Charlena',\n  'Charlene',\n  'Charline',\n  'Charlot',\n  'Charlotta',\n  'Charlotte',\n  'Charmain',\n  'Charmaine',\n  'Charmane',\n  'Charmian',\n  'Charmine',\n  'Charmion',\n  'Charo',\n  'Charyl',\n  'Chastity',\n  'Chelsae',\n  'Chelsea',\n  'Chelsey',\n  'Chelsie',\n  'Chelsy',\n  'Cher',\n  'Chere',\n  'Cherey',\n  'Cheri',\n  'Cherianne',\n  'Cherice',\n  'Cherida',\n  'Cherie',\n  'Cherilyn',\n  'Cherilynn',\n  'Cherin',\n  'Cherise',\n  'Cherish',\n  'Cherlyn',\n  'Cherri',\n  'Cherrita',\n  'Cherry',\n  'Chery',\n  'Cherye',\n  'Cheryl',\n  'Cheslie',\n  'Chiarra',\n  'Chickie',\n  'Chicky',\n  'Chiquia',\n  'Chiquita',\n  'Chlo',\n  'Chloe',\n  'Chloette',\n  'Chloris',\n  'Chris',\n  'Chrissie',\n  'Chrissy',\n  'Christa',\n  'Christabel',\n  'Christabella',\n  'Christal',\n  'Christalle',\n  'Christan',\n  'Christean',\n  'Christel',\n  'Christen',\n  'Christi',\n  'Christian',\n  'Christiana',\n  'Christiane',\n  'Christie',\n  'Christin',\n  'Christina',\n  'Christine',\n  'Christy',\n  'Christye',\n  'Christyna',\n  'Chrysa',\n  'Chrysler',\n  'Chrystal',\n  'Chryste',\n  'Chrystel',\n  'Cicely',\n  'Cicily',\n  'Ciel',\n  'Cilka',\n  'Cinda',\n  'Cindee',\n  'Cindelyn',\n  'Cinderella',\n  'Cindi',\n  'Cindie',\n  'Cindra',\n  'Cindy',\n  'Cinnamon',\n  'Cissiee',\n  'Cissy',\n  'Clair',\n  'Claire',\n  'Clara',\n  'Clarabelle',\n  'Clare',\n  'Claresta',\n  'Clareta',\n  'Claretta',\n  'Clarette',\n  'Clarey',\n  'Clari',\n  'Claribel',\n  'Clarice',\n  'Clarie',\n  'Clarinda',\n  'Clarine',\n  'Clarissa',\n  'Clarisse',\n  'Clarita',\n  'Clary',\n  'Claude',\n  'Claudelle',\n  'Claudetta',\n  'Claudette',\n  'Claudia',\n  'Claudie',\n  'Claudina',\n  'Claudine',\n  'Clea',\n  'Clem',\n  'Clemence',\n  'Clementia',\n  'Clementina',\n  'Clementine',\n  'Clemmie',\n  'Clemmy',\n  'Cleo',\n  'Cleopatra',\n  'Clerissa',\n  'Clio',\n  'Clo',\n  'Cloe',\n  'Cloris',\n  'Clotilda',\n  'Clovis',\n  'Codee',\n  'Codi',\n  'Codie',\n  'Cody',\n  'Coleen',\n  'Colene',\n  'Coletta',\n  'Colette',\n  'Colleen',\n  'Collen',\n  'Collete',\n  'Collette',\n  'Collie',\n  'Colline',\n  'Colly',\n  'Con',\n  'Concettina',\n  'Conchita',\n  'Concordia',\n  'Conni',\n  'Connie',\n  'Conny',\n  'Consolata',\n  'Constance',\n  'Constancia',\n  'Constancy',\n  'Constanta',\n  'Constantia',\n  'Constantina',\n  'Constantine',\n  'Consuela',\n  'Consuelo',\n  'Cookie',\n  'Cora',\n  'Corabel',\n  'Corabella',\n  'Corabelle',\n  'Coral',\n  'Coralie',\n  'Coraline',\n  'Coralyn',\n  'Cordelia',\n  'Cordelie',\n  'Cordey',\n  'Cordi',\n  'Cordie',\n  'Cordula',\n  'Cordy',\n  'Coreen',\n  'Corella',\n  'Corenda',\n  'Corene',\n  'Coretta',\n  'Corette',\n  'Corey',\n  'Cori',\n  'Corie',\n  'Corilla',\n  'Corina',\n  'Corine',\n  'Corinna',\n  'Corinne',\n  'Coriss',\n  'Corissa',\n  'Corliss',\n  'Corly',\n  'Cornela',\n  'Cornelia',\n  'Cornelle',\n  'Cornie',\n  'Corny',\n  'Correna',\n  'Correy',\n  'Corri',\n  'Corrianne',\n  'Corrie',\n  'Corrina',\n  'Corrine',\n  'Corrinne',\n  'Corry',\n  'Cortney',\n  'Cory',\n  'Cosetta',\n  'Cosette',\n  'Costanza',\n  'Courtenay',\n  'Courtnay',\n  'Courtney',\n  'Crin',\n  'Cris',\n  'Crissie',\n  'Crissy',\n  'Crista',\n  'Cristabel',\n  'Cristal',\n  'Cristen',\n  'Cristi',\n  'Cristie',\n  'Cristin',\n  'Cristina',\n  'Cristine',\n  'Cristionna',\n  'Cristy',\n  'Crysta',\n  'Crystal',\n  'Crystie',\n  'Cthrine',\n  'Cyb',\n  'Cybil',\n  'Cybill',\n  'Cymbre',\n  'Cynde',\n  'Cyndi',\n  'Cyndia',\n  'Cyndie',\n  'Cyndy',\n  'Cynthea',\n  'Cynthia',\n  'Cynthie',\n  'Cynthy',\n  'Dacey',\n  'Dacia',\n  'Dacie',\n  'Dacy',\n  'Dael',\n  'Daffi',\n  'Daffie',\n  'Daffy',\n  'Dagmar',\n  'Dahlia',\n  'Daile',\n  'Daisey',\n  'Daisi',\n  'Daisie',\n  'Daisy',\n  'Dale',\n  'Dalenna',\n  'Dalia',\n  'Dalila',\n  'Dallas',\n  'Daloris',\n  'Damara',\n  'Damaris',\n  'Damita',\n  'Dana',\n  'Danell',\n  'Danella',\n  'Danette',\n  'Dani',\n  'Dania',\n  'Danica',\n  'Danice',\n  'Daniela',\n  'Daniele',\n  'Daniella',\n  'Danielle',\n  'Danika',\n  'Danila',\n  'Danit',\n  'Danita',\n  'Danna',\n  'Danni',\n  'Dannie',\n  'Danny',\n  'Dannye',\n  'Danya',\n  'Danyelle',\n  'Danyette',\n  'Daphene',\n  'Daphna',\n  'Daphne',\n  'Dara',\n  'Darb',\n  'Darbie',\n  'Darby',\n  'Darcee',\n  'Darcey',\n  'Darci',\n  'Darcie',\n  'Darcy',\n  'Darda',\n  'Dareen',\n  'Darell',\n  'Darelle',\n  'Dari',\n  'Daria',\n  'Darice',\n  'Darla',\n  'Darleen',\n  'Darlene',\n  'Darline',\n  'Darlleen',\n  'Daron',\n  'Darrelle',\n  'Darryl',\n  'Darsey',\n  'Darsie',\n  'Darya',\n  'Daryl',\n  'Daryn',\n  'Dasha',\n  'Dasi',\n  'Dasie',\n  'Dasya',\n  'Datha',\n  'Daune',\n  'Daveen',\n  'Daveta',\n  'Davida',\n  'Davina',\n  'Davine',\n  'Davita',\n  'Dawn',\n  'Dawna',\n  'Dayle',\n  'Dayna',\n  'Ddene',\n  'De',\n  'Deana',\n  'Deane',\n  'Deanna',\n  'Deanne',\n  'Deb',\n  'Debbi',\n  'Debbie',\n  'Debby',\n  'Debee',\n  'Debera',\n  'Debi',\n  'Debor',\n  'Debora',\n  'Deborah',\n  'Debra',\n  'Dede',\n  'Dedie',\n  'Dedra',\n  'Dee',\n  'Deeann',\n  'Deeanne',\n  'Deedee',\n  'Deena',\n  'Deerdre',\n  'Deeyn',\n  'Dehlia',\n  'Deidre',\n  'Deina',\n  'Deirdre',\n  'Del',\n  'Dela',\n  'Delcina',\n  'Delcine',\n  'Delia',\n  'Delila',\n  'Delilah',\n  'Delinda',\n  'Dell',\n  'Della',\n  'Delly',\n  'Delora',\n  'Delores',\n  'Deloria',\n  'Deloris',\n  'Delphine',\n  'Delphinia',\n  'Demeter',\n  'Demetra',\n  'Demetria',\n  'Demetris',\n  'Dena',\n  'Deni',\n  'Denice',\n  'Denise',\n  'Denna',\n  'Denni',\n  'Dennie',\n  'Denny',\n  'Deny',\n  'Denys',\n  'Denyse',\n  'Deonne',\n  'Desdemona',\n  'Desirae',\n  'Desiree',\n  'Desiri',\n  'Deva',\n  'Devan',\n  'Devi',\n  'Devin',\n  'Devina',\n  'Devinne',\n  'Devon',\n  'Devondra',\n  'Devonna',\n  'Devonne',\n  'Devora',\n  'Di',\n  'Diahann',\n  'Dian',\n  'Diana',\n  'Diandra',\n  'Diane',\n  'Diane-marie',\n  'Dianemarie',\n  'Diann',\n  'Dianna',\n  'Dianne',\n  'Diannne',\n  'Didi',\n  'Dido',\n  'Diena',\n  'Dierdre',\n  'Dina',\n  'Dinah',\n  'Dinnie',\n  'Dinny',\n  'Dion',\n  'Dione',\n  'Dionis',\n  'Dionne',\n  'Dita',\n  'Dix',\n  'Dixie',\n  'Dniren',\n  'Dode',\n  'Dodi',\n  'Dodie',\n  'Dody',\n  'Doe',\n  'Doll',\n  'Dolley',\n  'Dolli',\n  'Dollie',\n  'Dolly',\n  'Dolores',\n  'Dolorita',\n  'Doloritas',\n  'Domeniga',\n  'Dominga',\n  'Domini',\n  'Dominica',\n  'Dominique',\n  'Dona',\n  'Donella',\n  'Donelle',\n  'Donetta',\n  'Donia',\n  'Donica',\n  'Donielle',\n  'Donna',\n  'Donnamarie',\n  'Donni',\n  'Donnie',\n  'Donny',\n  'Dora',\n  'Doralia',\n  'Doralin',\n  'Doralyn',\n  'Doralynn',\n  'Doralynne',\n  'Dore',\n  'Doreen',\n  'Dorelia',\n  'Dorella',\n  'Dorelle',\n  'Dorena',\n  'Dorene',\n  'Doretta',\n  'Dorette',\n  'Dorey',\n  'Dori',\n  'Doria',\n  'Dorian',\n  'Dorice',\n  'Dorie',\n  'Dorine',\n  'Doris',\n  'Dorisa',\n  'Dorise',\n  'Dorita',\n  'Doro',\n  'Dorolice',\n  'Dorolisa',\n  'Dorotea',\n  'Doroteya',\n  'Dorothea',\n  'Dorothee',\n  'Dorothy',\n  'Dorree',\n  'Dorri',\n  'Dorrie',\n  'Dorris',\n  'Dorry',\n  'Dorthea',\n  'Dorthy',\n  'Dory',\n  'Dosi',\n  'Dot',\n  'Doti',\n  'Dotti',\n  'Dottie',\n  'Dotty',\n  'Dre',\n  'Dreddy',\n  'Dredi',\n  'Drona',\n  'Dru',\n  'Druci',\n  'Drucie',\n  'Drucill',\n  'Drucy',\n  'Drusi',\n  'Drusie',\n  'Drusilla',\n  'Drusy',\n  'Dulce',\n  'Dulcea',\n  'Dulci',\n  'Dulcia',\n  'Dulciana',\n  'Dulcie',\n  'Dulcine',\n  'Dulcinea',\n  'Dulcy',\n  'Dulsea',\n  'Dusty',\n  'Dyan',\n  'Dyana',\n  'Dyane',\n  'Dyann',\n  'Dyanna',\n  'Dyanne',\n  'Dyna',\n  'Dynah',\n  'Eachelle',\n  'Eada',\n  'Eadie',\n  'Eadith',\n  'Ealasaid',\n  'Eartha',\n  'Easter',\n  'Eba',\n  'Ebba',\n  'Ebonee',\n  'Ebony',\n  'Eda',\n  'Eddi',\n  'Eddie',\n  'Eddy',\n  'Ede',\n  'Edee',\n  'Edeline',\n  'Eden',\n  'Edi',\n  'Edie',\n  'Edin',\n  'Edita',\n  'Edith',\n  'Editha',\n  'Edithe',\n  'Ediva',\n  'Edna',\n  'Edwina',\n  'Edy',\n  'Edyth',\n  'Edythe',\n  'Effie',\n  'Eileen',\n  'Eilis',\n  'Eimile',\n  'Eirena',\n  'Ekaterina',\n  'Elaina',\n  'Elaine',\n  'Elana',\n  'Elane',\n  'Elayne',\n  'Elberta',\n  'Elbertina',\n  'Elbertine',\n  'Eleanor',\n  'Eleanora',\n  'Eleanore',\n  'Electra',\n  'Eleen',\n  'Elena',\n  'Elene',\n  'Eleni',\n  'Elenore',\n  'Eleonora',\n  'Eleonore',\n  'Elfie',\n  'Elfreda',\n  'Elfrida',\n  'Elfrieda',\n  'Elga',\n  'Elianora',\n  'Elianore',\n  'Elicia',\n  'Elie',\n  'Elinor',\n  'Elinore',\n  'Elisa',\n  'Elisabet',\n  'Elisabeth',\n  'Elisabetta',\n  'Elise',\n  'Elisha',\n  'Elissa',\n  'Elita',\n  'Eliza',\n  'Elizabet',\n  'Elizabeth',\n  'Elka',\n  'Elke',\n  'Ella',\n  'Elladine',\n  'Elle',\n  'Ellen',\n  'Ellene',\n  'Ellette',\n  'Elli',\n  'Ellie',\n  'Ellissa',\n  'Elly',\n  'Ellyn',\n  'Ellynn',\n  'Elmira',\n  'Elna',\n  'Elnora',\n  'Elnore',\n  'Eloisa',\n  'Eloise',\n  'Elonore',\n  'Elora',\n  'Elsa',\n  'Elsbeth',\n  'Else',\n  'Elset',\n  'Elsey',\n  'Elsi',\n  'Elsie',\n  'Elsinore',\n  'Elspeth',\n  'Elsy',\n  'Elva',\n  'Elvera',\n  'Elvina',\n  'Elvira',\n  'Elwira',\n  'Elyn',\n  'Elyse',\n  'Elysee',\n  'Elysha',\n  'Elysia',\n  'Elyssa',\n  'Em',\n  'Ema',\n  'Emalee',\n  'Emalia',\n  'Emelda',\n  'Emelia',\n  'Emelina',\n  'Emeline',\n  'Emelita',\n  'Emelyne',\n  'Emera',\n  'Emilee',\n  'Emili',\n  'Emilia',\n  'Emilie',\n  'Emiline',\n  'Emily',\n  'Emlyn',\n  'Emlynn',\n  'Emlynne',\n  'Emma',\n  'Emmalee',\n  'Emmaline',\n  'Emmalyn',\n  'Emmalynn',\n  'Emmalynne',\n  'Emmeline',\n  'Emmey',\n  'Emmi',\n  'Emmie',\n  'Emmy',\n  'Emmye',\n  'Emogene',\n  'Emyle',\n  'Emylee',\n  'Engracia',\n  'Enid',\n  'Enrica',\n  'Enrichetta',\n  'Enrika',\n  'Enriqueta',\n  'Eolanda',\n  'Eolande',\n  'Eran',\n  'Erda',\n  'Erena',\n  'Erica',\n  'Ericha',\n  'Ericka',\n  'Erika',\n  'Erin',\n  'Erina',\n  'Erinn',\n  'Erinna',\n  'Erma',\n  'Ermengarde',\n  'Ermentrude',\n  'Ermina',\n  'Erminia',\n  'Erminie',\n  'Erna',\n  'Ernaline',\n  'Ernesta',\n  'Ernestine',\n  'Ertha',\n  'Eryn',\n  'Esma',\n  'Esmaria',\n  'Esme',\n  'Esmeralda',\n  'Essa',\n  'Essie',\n  'Essy',\n  'Esta',\n  'Estel',\n  'Estele',\n  'Estell',\n  'Estella',\n  'Estelle',\n  'Ester',\n  'Esther',\n  'Estrella',\n  'Estrellita',\n  'Ethel',\n  'Ethelda',\n  'Ethelin',\n  'Ethelind',\n  'Etheline',\n  'Ethelyn',\n  'Ethyl',\n  'Etta',\n  'Etti',\n  'Ettie',\n  'Etty',\n  'Eudora',\n  'Eugenia',\n  'Eugenie',\n  'Eugine',\n  'Eula',\n  'Eulalie',\n  'Eunice',\n  'Euphemia',\n  'Eustacia',\n  'Eva',\n  'Evaleen',\n  'Evangelia',\n  'Evangelin',\n  'Evangelina',\n  'Evangeline',\n  'Evania',\n  'Evanne',\n  'Eve',\n  'Eveleen',\n  'Evelina',\n  'Eveline',\n  'Evelyn',\n  'Evey',\n  'Evie',\n  'Evita',\n  'Evonne',\n  'Evvie',\n  'Evvy',\n  'Evy',\n  'Eyde',\n  'Eydie',\n  'Ezmeralda',\n  'Fae',\n  'Faina',\n  'Faith',\n  'Fallon',\n  'Fan',\n  'Fanchette',\n  'Fanchon',\n  'Fancie',\n  'Fancy',\n  'Fanechka',\n  'Fania',\n  'Fanni',\n  'Fannie',\n  'Fanny',\n  'Fanya',\n  'Fara',\n  'Farah',\n  'Farand',\n  'Farica',\n  'Farra',\n  'Farrah',\n  'Farrand',\n  'Faun',\n  'Faunie',\n  'Faustina',\n  'Faustine',\n  'Fawn',\n  'Fawne',\n  'Fawnia',\n  'Fay',\n  'Faydra',\n  'Faye',\n  'Fayette',\n  'Fayina',\n  'Fayre',\n  'Fayth',\n  'Faythe',\n  'Federica',\n  'Fedora',\n  'Felecia',\n  'Felicdad',\n  'Felice',\n  'Felicia',\n  'Felicity',\n  'Felicle',\n  'Felipa',\n  'Felisha',\n  'Felita',\n  'Feliza',\n  'Fenelia',\n  'Feodora',\n  'Ferdinanda',\n  'Ferdinande',\n  'Fern',\n  'Fernanda',\n  'Fernande',\n  'Fernandina',\n  'Ferne',\n  'Fey',\n  'Fiann',\n  'Fianna',\n  'Fidela',\n  'Fidelia',\n  'Fidelity',\n  'Fifi',\n  'Fifine',\n  'Filia',\n  'Filide',\n  'Filippa',\n  'Fina',\n  'Fiona',\n  'Fionna',\n  'Fionnula',\n  'Fiorenze',\n  'Fleur',\n  'Fleurette',\n  'Flo',\n  'Flor',\n  'Flora',\n  'Florance',\n  'Flore',\n  'Florella',\n  'Florence',\n  'Florencia',\n  'Florentia',\n  'Florenza',\n  'Florette',\n  'Flori',\n  'Floria',\n  'Florida',\n  'Florie',\n  'Florina',\n  'Florinda',\n  'Floris',\n  'Florri',\n  'Florrie',\n  'Florry',\n  'Flory',\n  'Flossi',\n  'Flossie',\n  'Flossy',\n  'Flss',\n  'Fran',\n  'Francene',\n  'Frances',\n  'Francesca',\n  'Francine',\n  'Francisca',\n  'Franciska',\n  'Francoise',\n  'Francyne',\n  'Frank',\n  'Frankie',\n  'Franky',\n  'Franni',\n  'Frannie',\n  'Franny',\n  'Frayda',\n  'Fred',\n  'Freda',\n  'Freddi',\n  'Freddie',\n  'Freddy',\n  'Fredelia',\n  'Frederica',\n  'Fredericka',\n  'Frederique',\n  'Fredi',\n  'Fredia',\n  'Fredra',\n  'Fredrika',\n  'Freida',\n  'Frieda',\n  'Friederike',\n  'Fulvia',\n  'Gabbey',\n  'Gabbi',\n  'Gabbie',\n  'Gabey',\n  'Gabi',\n  'Gabie',\n  'Gabriel',\n  'Gabriela',\n  'Gabriell',\n  'Gabriella',\n  'Gabrielle',\n  'Gabriellia',\n  'Gabrila',\n  'Gaby',\n  'Gae',\n  'Gael',\n  'Gail',\n  'Gale',\n  'Galina',\n  'Garland',\n  'Garnet',\n  'Garnette',\n  'Gates',\n  'Gavra',\n  'Gavrielle',\n  'Gay',\n  'Gaye',\n  'Gayel',\n  'Gayla',\n  'Gayle',\n  'Gayleen',\n  'Gaylene',\n  'Gaynor',\n  'Gelya',\n  'Gena',\n  'Gene',\n  'Geneva',\n  'Genevieve',\n  'Genevra',\n  'Genia',\n  'Genna',\n  'Genni',\n  'Gennie',\n  'Gennifer',\n  'Genny',\n  'Genovera',\n  'Genvieve',\n  'George',\n  'Georgeanna',\n  'Georgeanne',\n  'Georgena',\n  'Georgeta',\n  'Georgetta',\n  'Georgette',\n  'Georgia',\n  'Georgiana',\n  'Georgianna',\n  'Georgianne',\n  'Georgie',\n  'Georgina',\n  'Georgine',\n  'Geralda',\n  'Geraldine',\n  'Gerda',\n  'Gerhardine',\n  'Geri',\n  'Gerianna',\n  'Gerianne',\n  'Gerladina',\n  'Germain',\n  'Germaine',\n  'Germana',\n  'Gerri',\n  'Gerrie',\n  'Gerrilee',\n  'Gerry',\n  'Gert',\n  'Gerta',\n  'Gerti',\n  'Gertie',\n  'Gertrud',\n  'Gertruda',\n  'Gertrude',\n  'Gertrudis',\n  'Gerty',\n  'Giacinta',\n  'Giana',\n  'Gianina',\n  'Gianna',\n  'Gigi',\n  'Gilberta',\n  'Gilberte',\n  'Gilbertina',\n  'Gilbertine',\n  'Gilda',\n  'Gilemette',\n  'Gill',\n  'Gillan',\n  'Gilli',\n  'Gillian',\n  'Gillie',\n  'Gilligan',\n  'Gilly',\n  'Gina',\n  'Ginelle',\n  'Ginevra',\n  'Ginger',\n  'Ginni',\n  'Ginnie',\n  'Ginnifer',\n  'Ginny',\n  'Giorgia',\n  'Giovanna',\n  'Gipsy',\n  'Giralda',\n  'Gisela',\n  'Gisele',\n  'Gisella',\n  'Giselle',\n  'Giuditta',\n  'Giulia',\n  'Giulietta',\n  'Giustina',\n  'Gizela',\n  'Glad',\n  'Gladi',\n  'Gladys',\n  'Gleda',\n  'Glen',\n  'Glenda',\n  'Glenine',\n  'Glenn',\n  'Glenna',\n  'Glennie',\n  'Glennis',\n  'Glori',\n  'Gloria',\n  'Gloriana',\n  'Gloriane',\n  'Glory',\n  'Glyn',\n  'Glynda',\n  'Glynis',\n  'Glynnis',\n  'Gnni',\n  'Godiva',\n  'Golda',\n  'Goldarina',\n  'Goldi',\n  'Goldia',\n  'Goldie',\n  'Goldina',\n  'Goldy',\n  'Grace',\n  'Gracia',\n  'Gracie',\n  'Grata',\n  'Gratia',\n  'Gratiana',\n  'Gray',\n  'Grayce',\n  'Grazia',\n  'Greer',\n  'Greta',\n  'Gretal',\n  'Gretchen',\n  'Grete',\n  'Gretel',\n  'Grethel',\n  'Gretna',\n  'Gretta',\n  'Grier',\n  'Griselda',\n  'Grissel',\n  'Guendolen',\n  'Guenevere',\n  'Guenna',\n  'Guglielma',\n  'Gui',\n  'Guillema',\n  'Guillemette',\n  'Guinevere',\n  'Guinna',\n  'Gunilla',\n  'Gus',\n  'Gusella',\n  'Gussi',\n  'Gussie',\n  'Gussy',\n  'Gusta',\n  'Gusti',\n  'Gustie',\n  'Gusty',\n  'Gwen',\n  'Gwendolen',\n  'Gwendolin',\n  'Gwendolyn',\n  'Gweneth',\n  'Gwenette',\n  'Gwenneth',\n  'Gwenni',\n  'Gwennie',\n  'Gwenny',\n  'Gwenora',\n  'Gwenore',\n  'Gwyn',\n  'Gwyneth',\n  'Gwynne',\n  'Gypsy',\n  'Hadria',\n  'Hailee',\n  'Haily',\n  'Haleigh',\n  'Halette',\n  'Haley',\n  'Hali',\n  'Halie',\n  'Halimeda',\n  'Halley',\n  'Halli',\n  'Hallie',\n  'Hally',\n  'Hana',\n  'Hanna',\n  'Hannah',\n  'Hanni',\n  'Hannie',\n  'Hannis',\n  'Hanny',\n  'Happy',\n  'Harlene',\n  'Harley',\n  'Harli',\n  'Harlie',\n  'Harmonia',\n  'Harmonie',\n  'Harmony',\n  'Harri',\n  'Harrie',\n  'Harriet',\n  'Harriett',\n  'Harrietta',\n  'Harriette',\n  'Harriot',\n  'Harriott',\n  'Hatti',\n  'Hattie',\n  'Hatty',\n  'Hayley',\n  'Hazel',\n  'Heath',\n  'Heather',\n  'Heda',\n  'Hedda',\n  'Heddi',\n  'Heddie',\n  'Hedi',\n  'Hedvig',\n  'Hedvige',\n  'Hedwig',\n  'Hedwiga',\n  'Hedy',\n  'Heida',\n  'Heidi',\n  'Heidie',\n  'Helaina',\n  'Helaine',\n  'Helen',\n  'Helen-elizabeth',\n  'Helena',\n  'Helene',\n  'Helenka',\n  'Helga',\n  'Helge',\n  'Helli',\n  'Heloise',\n  'Helsa',\n  'Helyn',\n  'Hendrika',\n  'Henka',\n  'Henrie',\n  'Henrieta',\n  'Henrietta',\n  'Henriette',\n  'Henryetta',\n  'Hephzibah',\n  'Hermia',\n  'Hermina',\n  'Hermine',\n  'Herminia',\n  'Hermione',\n  'Herta',\n  'Hertha',\n  'Hester',\n  'Hesther',\n  'Hestia',\n  'Hetti',\n  'Hettie',\n  'Hetty',\n  'Hilary',\n  'Hilda',\n  'Hildagard',\n  'Hildagarde',\n  'Hilde',\n  'Hildegaard',\n  'Hildegarde',\n  'Hildy',\n  'Hillary',\n  'Hilliary',\n  'Hinda',\n  'Holli',\n  'Hollie',\n  'Holly',\n  'Holly-anne',\n  'Hollyanne',\n  'Honey',\n  'Honor',\n  'Honoria',\n  'Hope',\n  'Horatia',\n  'Hortense',\n  'Hortensia',\n  'Hulda',\n  'Hyacinth',\n  'Hyacintha',\n  'Hyacinthe',\n  'Hyacinthia',\n  'Hyacinthie',\n  'Hynda',\n  'Ianthe',\n  'Ibbie',\n  'Ibby',\n  'Ida',\n  'Idalia',\n  'Idalina',\n  'Idaline',\n  'Idell',\n  'Idelle',\n  'Idette',\n  'Ileana',\n  'Ileane',\n  'Ilene',\n  'Ilise',\n  'Ilka',\n  'Illa',\n  'Ilsa',\n  'Ilse',\n  'Ilysa',\n  'Ilyse',\n  'Ilyssa',\n  'Imelda',\n  'Imogen',\n  'Imogene',\n  'Imojean',\n  'Ina',\n  'Indira',\n  'Ines',\n  'Inesita',\n  'Inessa',\n  'Inez',\n  'Inga',\n  'Ingaberg',\n  'Ingaborg',\n  'Inge',\n  'Ingeberg',\n  'Ingeborg',\n  'Inger',\n  'Ingrid',\n  'Ingunna',\n  'Inna',\n  'Iolande',\n  'Iolanthe',\n  'Iona',\n  'Iormina',\n  'Ira',\n  'Irena',\n  'Irene',\n  'Irina',\n  'Iris',\n  'Irita',\n  'Irma',\n  'Isa',\n  'Isabel',\n  'Isabelita',\n  'Isabella',\n  'Isabelle',\n  'Isadora',\n  'Isahella',\n  'Iseabal',\n  'Isidora',\n  'Isis',\n  'Isobel',\n  'Issi',\n  'Issie',\n  'Issy',\n  'Ivett',\n  'Ivette',\n  'Ivie',\n  'Ivonne',\n  'Ivory',\n  'Ivy',\n  'Izabel',\n  'Jacenta',\n  'Jacinda',\n  'Jacinta',\n  'Jacintha',\n  'Jacinthe',\n  'Jackelyn',\n  'Jacki',\n  'Jackie',\n  'Jacklin',\n  'Jacklyn',\n  'Jackquelin',\n  'Jackqueline',\n  'Jacky',\n  'Jaclin',\n  'Jaclyn',\n  'Jacquelin',\n  'Jacqueline',\n  'Jacquelyn',\n  'Jacquelynn',\n  'Jacquenetta',\n  'Jacquenette',\n  'Jacquetta',\n  'Jacquette',\n  'Jacqui',\n  'Jacquie',\n  'Jacynth',\n  'Jada',\n  'Jade',\n  'Jaime',\n  'Jaimie',\n  'Jaine',\n  'Jami',\n  'Jamie',\n  'Jamima',\n  'Jammie',\n  'Jan',\n  'Jana',\n  'Janaya',\n  'Janaye',\n  'Jandy',\n  'Jane',\n  'Janean',\n  'Janeczka',\n  'Janeen',\n  'Janel',\n  'Janela',\n  'Janella',\n  'Janelle',\n  'Janene',\n  'Janenna',\n  'Janessa',\n  'Janet',\n  'Janeta',\n  'Janetta',\n  'Janette',\n  'Janeva',\n  'Janey',\n  'Jania',\n  'Janice',\n  'Janie',\n  'Janifer',\n  'Janina',\n  'Janine',\n  'Janis',\n  'Janith',\n  'Janka',\n  'Janna',\n  'Jannel',\n  'Jannelle',\n  'Janot',\n  'Jany',\n  'Jaquelin',\n  'Jaquelyn',\n  'Jaquenetta',\n  'Jaquenette',\n  'Jaquith',\n  'Jasmin',\n  'Jasmina',\n  'Jasmine',\n  'Jayme',\n  'Jaymee',\n  'Jayne',\n  'Jaynell',\n  'Jazmin',\n  'Jean',\n  'Jeana',\n  'Jeane',\n  'Jeanelle',\n  'Jeanette',\n  'Jeanie',\n  'Jeanine',\n  'Jeanna',\n  'Jeanne',\n  'Jeannette',\n  'Jeannie',\n  'Jeannine',\n  'Jehanna',\n  'Jelene',\n  'Jemie',\n  'Jemima',\n  'Jemimah',\n  'Jemmie',\n  'Jemmy',\n  'Jen',\n  'Jena',\n  'Jenda',\n  'Jenelle',\n  'Jeni',\n  'Jenica',\n  'Jeniece',\n  'Jenifer',\n  'Jeniffer',\n  'Jenilee',\n  'Jenine',\n  'Jenn',\n  'Jenna',\n  'Jennee',\n  'Jennette',\n  'Jenni',\n  'Jennica',\n  'Jennie',\n  'Jennifer',\n  'Jennilee',\n  'Jennine',\n  'Jenny',\n  'Jeralee',\n  'Jere',\n  'Jeri',\n  'Jermaine',\n  'Jerrie',\n  'Jerrilee',\n  'Jerrilyn',\n  'Jerrine',\n  'Jerry',\n  'Jerrylee',\n  'Jess',\n  'Jessa',\n  'Jessalin',\n  'Jessalyn',\n  'Jessamine',\n  'Jessamyn',\n  'Jesse',\n  'Jesselyn',\n  'Jessi',\n  'Jessica',\n  'Jessie',\n  'Jessika',\n  'Jessy',\n  'Jewel',\n  'Jewell',\n  'Jewelle',\n  'Jill',\n  'Jillana',\n  'Jillane',\n  'Jillayne',\n  'Jilleen',\n  'Jillene',\n  'Jilli',\n  'Jillian',\n  'Jillie',\n  'Jilly',\n  'Jinny',\n  'Jo',\n  'Jo-ann',\n  'Jo-anne',\n  'Joan',\n  'Joana',\n  'Joane',\n  'Joanie',\n  'Joann',\n  'Joanna',\n  'Joanne',\n  'Joannes',\n  'Jobey',\n  'Jobi',\n  'Jobie',\n  'Jobina',\n  'Joby',\n  'Jobye',\n  'Jobyna',\n  'Jocelin',\n  'Joceline',\n  'Jocelyn',\n  'Jocelyne',\n  'Jodee',\n  'Jodi',\n  'Jodie',\n  'Jody',\n  'Joeann',\n  'Joela',\n  'Joelie',\n  'Joell',\n  'Joella',\n  'Joelle',\n  'Joellen',\n  'Joelly',\n  'Joellyn',\n  'Joelynn',\n  'Joete',\n  'Joey',\n  'Johanna',\n  'Johannah',\n  'Johna',\n  'Johnath',\n  'Johnette',\n  'Johnna',\n  'Joice',\n  'Jojo',\n  'Jolee',\n  'Joleen',\n  'Jolene',\n  'Joletta',\n  'Joli',\n  'Jolie',\n  'Joline',\n  'Joly',\n  'Jolyn',\n  'Jolynn',\n  'Jonell',\n  'Joni',\n  'Jonie',\n  'Jonis',\n  'Jordain',\n  'Jordan',\n  'Jordana',\n  'Jordanna',\n  'Jorey',\n  'Jori',\n  'Jorie',\n  'Jorrie',\n  'Jorry',\n  'Joscelin',\n  'Josee',\n  'Josefa',\n  'Josefina',\n  'Josepha',\n  'Josephina',\n  'Josephine',\n  'Josey',\n  'Josi',\n  'Josie',\n  'Josselyn',\n  'Josy',\n  'Jourdan',\n  'Joy',\n  'Joya',\n  'Joyan',\n  'Joyann',\n  'Joyce',\n  'Joycelin',\n  'Joye',\n  'Jsandye',\n  'Juana',\n  'Juanita',\n  'Judi',\n  'Judie',\n  'Judith',\n  'Juditha',\n  'Judy',\n  'Judye',\n  'Juieta',\n  'Julee',\n  'Juli',\n  'Julia',\n  'Juliana',\n  'Juliane',\n  'Juliann',\n  'Julianna',\n  'Julianne',\n  'Julie',\n  'Julienne',\n  'Juliet',\n  'Julieta',\n  'Julietta',\n  'Juliette',\n  'Julina',\n  'Juline',\n  'Julissa',\n  'Julita',\n  'June',\n  'Junette',\n  'Junia',\n  'Junie',\n  'Junina',\n  'Justina',\n  'Justine',\n  'Justinn',\n  'Jyoti',\n  'Kacey',\n  'Kacie',\n  'Kacy',\n  'Kaela',\n  'Kai',\n  'Kaia',\n  'Kaila',\n  'Kaile',\n  'Kailey',\n  'Kaitlin',\n  'Kaitlyn',\n  'Kaitlynn',\n  'Kaja',\n  'Kakalina',\n  'Kala',\n  'Kaleena',\n  'Kali',\n  'Kalie',\n  'Kalila',\n  'Kalina',\n  'Kalinda',\n  'Kalindi',\n  'Kalli',\n  'Kally',\n  'Kameko',\n  'Kamila',\n  'Kamilah',\n  'Kamillah',\n  'Kandace',\n  'Kandy',\n  'Kania',\n  'Kanya',\n  'Kara',\n  'Kara-lynn',\n  'Karalee',\n  'Karalynn',\n  'Kare',\n  'Karee',\n  'Karel',\n  'Karen',\n  'Karena',\n  'Kari',\n  'Karia',\n  'Karie',\n  'Karil',\n  'Karilynn',\n  'Karin',\n  'Karina',\n  'Karine',\n  'Kariotta',\n  'Karisa',\n  'Karissa',\n  'Karita',\n  'Karla',\n  'Karlee',\n  'Karleen',\n  'Karlen',\n  'Karlene',\n  'Karlie',\n  'Karlotta',\n  'Karlotte',\n  'Karly',\n  'Karlyn',\n  'Karmen',\n  'Karna',\n  'Karol',\n  'Karola',\n  'Karole',\n  'Karolina',\n  'Karoline',\n  'Karoly',\n  'Karon',\n  'Karrah',\n  'Karrie',\n  'Karry',\n  'Kary',\n  'Karyl',\n  'Karylin',\n  'Karyn',\n  'Kasey',\n  'Kass',\n  'Kassandra',\n  'Kassey',\n  'Kassi',\n  'Kassia',\n  'Kassie',\n  'Kat',\n  'Kata',\n  'Katalin',\n  'Kate',\n  'Katee',\n  'Katerina',\n  'Katerine',\n  'Katey',\n  'Kath',\n  'Katha',\n  'Katharina',\n  'Katharine',\n  'Katharyn',\n  'Kathe',\n  'Katherina',\n  'Katherine',\n  'Katheryn',\n  'Kathi',\n  'Kathie',\n  'Kathleen',\n  'Kathlin',\n  'Kathrine',\n  'Kathryn',\n  'Kathryne',\n  'Kathy',\n  'Kathye',\n  'Kati',\n  'Katie',\n  'Katina',\n  'Katine',\n  'Katinka',\n  'Katleen',\n  'Katlin',\n  'Katrina',\n  'Katrine',\n  'Katrinka',\n  'Katti',\n  'Kattie',\n  'Katuscha',\n  'Katusha',\n  'Katy',\n  'Katya',\n  'Kay',\n  'Kaycee',\n  'Kaye',\n  'Kayla',\n  'Kayle',\n  'Kaylee',\n  'Kayley',\n  'Kaylil',\n  'Kaylyn',\n  'Keeley',\n  'Keelia',\n  'Keely',\n  'Kelcey',\n  'Kelci',\n  'Kelcie',\n  'Kelcy',\n  'Kelila',\n  'Kellen',\n  'Kelley',\n  'Kelli',\n  'Kellia',\n  'Kellie',\n  'Kellina',\n  'Kellsie',\n  'Kelly',\n  'Kellyann',\n  'Kelsey',\n  'Kelsi',\n  'Kelsy',\n  'Kendra',\n  'Kendre',\n  'Kenna',\n  'Keri',\n  'Keriann',\n  'Kerianne',\n  'Kerri',\n  'Kerrie',\n  'Kerrill',\n  'Kerrin',\n  'Kerry',\n  'Kerstin',\n  'Kesley',\n  'Keslie',\n  'Kessia',\n  'Kessiah',\n  'Ketti',\n  'Kettie',\n  'Ketty',\n  'Kevina',\n  'Kevyn',\n  'Ki',\n  'Kiah',\n  'Kial',\n  'Kiele',\n  'Kiersten',\n  'Kikelia',\n  'Kiley',\n  'Kim',\n  'Kimberlee',\n  'Kimberley',\n  'Kimberli',\n  'Kimberly',\n  'Kimberlyn',\n  'Kimbra',\n  'Kimmi',\n  'Kimmie',\n  'Kimmy',\n  'Kinna',\n  'Kip',\n  'Kipp',\n  'Kippie',\n  'Kippy',\n  'Kira',\n  'Kirbee',\n  'Kirbie',\n  'Kirby',\n  'Kiri',\n  'Kirsten',\n  'Kirsteni',\n  'Kirsti',\n  'Kirstin',\n  'Kirstyn',\n  'Kissee',\n  'Kissiah',\n  'Kissie',\n  'Kit',\n  'Kitti',\n  'Kittie',\n  'Kitty',\n  'Kizzee',\n  'Kizzie',\n  'Klara',\n  'Klarika',\n  'Klarrisa',\n  'Konstance',\n  'Konstanze',\n  'Koo',\n  'Kora',\n  'Koral',\n  'Koralle',\n  'Kordula',\n  'Kore',\n  'Korella',\n  'Koren',\n  'Koressa',\n  'Kori',\n  'Korie',\n  'Korney',\n  'Korrie',\n  'Korry',\n  'Kris',\n  'Krissie',\n  'Krissy',\n  'Krista',\n  'Kristal',\n  'Kristan',\n  'Kriste',\n  'Kristel',\n  'Kristen',\n  'Kristi',\n  'Kristien',\n  'Kristin',\n  'Kristina',\n  'Kristine',\n  'Kristy',\n  'Kristyn',\n  'Krysta',\n  'Krystal',\n  'Krystalle',\n  'Krystle',\n  'Krystyna',\n  'Kyla',\n  'Kyle',\n  'Kylen',\n  'Kylie',\n  'Kylila',\n  'Kylynn',\n  'Kym',\n  'Kynthia',\n  'Kyrstin',\n  'Lacee',\n  'Lacey',\n  'Lacie',\n  'Lacy',\n  'Ladonna',\n  'Laetitia',\n  'Laina',\n  'Lainey',\n  'Lana',\n  'Lanae',\n  'Lane',\n  'Lanette',\n  'Laney',\n  'Lani',\n  'Lanie',\n  'Lanita',\n  'Lanna',\n  'Lanni',\n  'Lanny',\n  'Lara',\n  'Laraine',\n  'Lari',\n  'Larina',\n  'Larine',\n  'Larisa',\n  'Larissa',\n  'Lark',\n  'Laryssa',\n  'Latashia',\n  'Latia',\n  'Latisha',\n  'Latrena',\n  'Latrina',\n  'Laura',\n  'Lauraine',\n  'Laural',\n  'Lauralee',\n  'Laure',\n  'Lauree',\n  'Laureen',\n  'Laurel',\n  'Laurella',\n  'Lauren',\n  'Laurena',\n  'Laurene',\n  'Lauretta',\n  'Laurette',\n  'Lauri',\n  'Laurianne',\n  'Laurice',\n  'Laurie',\n  'Lauryn',\n  'Lavena',\n  'Laverna',\n  'Laverne',\n  'Lavina',\n  'Lavinia',\n  'Lavinie',\n  'Layla',\n  'Layne',\n  'Layney',\n  'Lea',\n  'Leah',\n  'Leandra',\n  'Leann',\n  'Leanna',\n  'Leanor',\n  'Leanora',\n  'Lebbie',\n  'Leda',\n  'Lee',\n  'Leeann',\n  'Leeanne',\n  'Leela',\n  'Leelah',\n  'Leena',\n  'Leesa',\n  'Leese',\n  'Legra',\n  'Leia',\n  'Leigh',\n  'Leigha',\n  'Leila',\n  'Leilah',\n  'Leisha',\n  'Lela',\n  'Lelah',\n  'Leland',\n  'Lelia',\n  'Lena',\n  'Lenee',\n  'Lenette',\n  'Lenka',\n  'Lenna',\n  'Lenora',\n  'Lenore',\n  'Leodora',\n  'Leoine',\n  'Leola',\n  'Leoline',\n  'Leona',\n  'Leonanie',\n  'Leone',\n  'Leonelle',\n  'Leonie',\n  'Leonora',\n  'Leonore',\n  'Leontine',\n  'Leontyne',\n  'Leora',\n  'Leshia',\n  'Lesley',\n  'Lesli',\n  'Leslie',\n  'Lesly',\n  'Lesya',\n  'Leta',\n  'Lethia',\n  'Leticia',\n  'Letisha',\n  'Letitia',\n  'Letizia',\n  'Letta',\n  'Letti',\n  'Lettie',\n  'Letty',\n  'Lexi',\n  'Lexie',\n  'Lexine',\n  'Lexis',\n  'Lexy',\n  'Leyla',\n  'Lezlie',\n  'Lia',\n  'Lian',\n  'Liana',\n  'Liane',\n  'Lianna',\n  'Lianne',\n  'Lib',\n  'Libbey',\n  'Libbi',\n  'Libbie',\n  'Libby',\n  'Licha',\n  'Lida',\n  'Lidia',\n  'Liesa',\n  'Lil',\n  'Lila',\n  'Lilah',\n  'Lilas',\n  'Lilia',\n  'Lilian',\n  'Liliane',\n  'Lilias',\n  'Lilith',\n  'Lilla',\n  'Lilli',\n  'Lillian',\n  'Lillis',\n  'Lilllie',\n  'Lilly',\n  'Lily',\n  'Lilyan',\n  'Lin',\n  'Lina',\n  'Lind',\n  'Linda',\n  'Lindi',\n  'Lindie',\n  'Lindsay',\n  'Lindsey',\n  'Lindsy',\n  'Lindy',\n  'Linea',\n  'Linell',\n  'Linet',\n  'Linette',\n  'Linn',\n  'Linnea',\n  'Linnell',\n  'Linnet',\n  'Linnie',\n  'Linzy',\n  'Lira',\n  'Lisa',\n  'Lisabeth',\n  'Lisbeth',\n  'Lise',\n  'Lisetta',\n  'Lisette',\n  'Lisha',\n  'Lishe',\n  'Lissa',\n  'Lissi',\n  'Lissie',\n  'Lissy',\n  'Lita',\n  'Liuka',\n  'Liv',\n  'Liva',\n  'Livia',\n  'Livvie',\n  'Livvy',\n  'Livvyy',\n  'Livy',\n  'Liz',\n  'Liza',\n  'Lizabeth',\n  'Lizbeth',\n  'Lizette',\n  'Lizzie',\n  'Lizzy',\n  'Loella',\n  'Lois',\n  'Loise',\n  'Lola',\n  'Loleta',\n  'Lolita',\n  'Lolly',\n  'Lona',\n  'Lonee',\n  'Loni',\n  'Lonna',\n  'Lonni',\n  'Lonnie',\n  'Lora',\n  'Lorain',\n  'Loraine',\n  'Loralee',\n  'Loralie',\n  'Loralyn',\n  'Loree',\n  'Loreen',\n  'Lorelei',\n  'Lorelle',\n  'Loren',\n  'Lorena',\n  'Lorene',\n  'Lorenza',\n  'Loretta',\n  'Lorette',\n  'Lori',\n  'Loria',\n  'Lorianna',\n  'Lorianne',\n  'Lorie',\n  'Lorilee',\n  'Lorilyn',\n  'Lorinda',\n  'Lorine',\n  'Lorita',\n  'Lorna',\n  'Lorne',\n  'Lorraine',\n  'Lorrayne',\n  'Lorri',\n  'Lorrie',\n  'Lorrin',\n  'Lorry',\n  'Lory',\n  'Lotta',\n  'Lotte',\n  'Lotti',\n  'Lottie',\n  'Lotty',\n  'Lou',\n  'Louella',\n  'Louisa',\n  'Louise',\n  'Louisette',\n  'Loutitia',\n  'Lu',\n  'Luce',\n  'Luci',\n  'Lucia',\n  'Luciana',\n  'Lucie',\n  'Lucienne',\n  'Lucila',\n  'Lucilia',\n  'Lucille',\n  'Lucina',\n  'Lucinda',\n  'Lucine',\n  'Lucita',\n  'Lucky',\n  'Lucretia',\n  'Lucy',\n  'Ludovika',\n  'Luella',\n  'Luelle',\n  'Luisa',\n  'Luise',\n  'Lula',\n  'Lulita',\n  'Lulu',\n  'Lura',\n  'Lurette',\n  'Lurleen',\n  'Lurlene',\n  'Lurline',\n  'Lusa',\n  'Luz',\n  'Lyda',\n  'Lydia',\n  'Lydie',\n  'Lyn',\n  'Lynda',\n  'Lynde',\n  'Lyndel',\n  'Lyndell',\n  'Lyndsay',\n  'Lyndsey',\n  'Lyndsie',\n  'Lyndy',\n  'Lynea',\n  'Lynelle',\n  'Lynett',\n  'Lynette',\n  'Lynn',\n  'Lynna',\n  'Lynne',\n  'Lynnea',\n  'Lynnell',\n  'Lynnelle',\n  'Lynnet',\n  'Lynnett',\n  'Lynnette',\n  'Lynsey',\n  'Lyssa',\n  'Mab',\n  'Mabel',\n  'Mabelle',\n  'Mable',\n  'Mada',\n  'Madalena',\n  'Madalyn',\n  'Maddalena',\n  'Maddi',\n  'Maddie',\n  'Maddy',\n  'Madel',\n  'Madelaine',\n  'Madeleine',\n  'Madelena',\n  'Madelene',\n  'Madelin',\n  'Madelina',\n  'Madeline',\n  'Madella',\n  'Madelle',\n  'Madelon',\n  'Madelyn',\n  'Madge',\n  'Madlen',\n  'Madlin',\n  'Madonna',\n  'Mady',\n  'Mae',\n  'Maegan',\n  'Mag',\n  'Magda',\n  'Magdaia',\n  'Magdalen',\n  'Magdalena',\n  'Magdalene',\n  'Maggee',\n  'Maggi',\n  'Maggie',\n  'Maggy',\n  'Mahala',\n  'Mahalia',\n  'Maia',\n  'Maible',\n  'Maiga',\n  'Maighdiln',\n  'Mair',\n  'Maire',\n  'Maisey',\n  'Maisie',\n  'Maitilde',\n  'Mala',\n  'Malanie',\n  'Malena',\n  'Malia',\n  'Malina',\n  'Malinda',\n  'Malinde',\n  'Malissa',\n  'Malissia',\n  'Mallissa',\n  'Mallorie',\n  'Mallory',\n  'Malorie',\n  'Malory',\n  'Malva',\n  'Malvina',\n  'Malynda',\n  'Mame',\n  'Mamie',\n  'Manda',\n  'Mandi',\n  'Mandie',\n  'Mandy',\n  'Manon',\n  'Manya',\n  'Mara',\n  'Marabel',\n  'Marcela',\n  'Marcelia',\n  'Marcella',\n  'Marcelle',\n  'Marcellina',\n  'Marcelline',\n  'Marchelle',\n  'Marci',\n  'Marcia',\n  'Marcie',\n  'Marcile',\n  'Marcille',\n  'Marcy',\n  'Mareah',\n  'Maren',\n  'Marena',\n  'Maressa',\n  'Marga',\n  'Margalit',\n  'Margalo',\n  'Margaret',\n  'Margareta',\n  'Margarete',\n  'Margaretha',\n  'Margarethe',\n  'Margaretta',\n  'Margarette',\n  'Margarita',\n  'Margaux',\n  'Marge',\n  'Margeaux',\n  'Margery',\n  'Marget',\n  'Margette',\n  'Margi',\n  'Margie',\n  'Margit',\n  'Margo',\n  'Margot',\n  'Margret',\n  'Marguerite',\n  'Margy',\n  'Mari',\n  'Maria',\n  'Mariam',\n  'Marian',\n  'Mariana',\n  'Mariann',\n  'Marianna',\n  'Marianne',\n  'Maribel',\n  'Maribelle',\n  'Maribeth',\n  'Marice',\n  'Maridel',\n  'Marie',\n  'Marie-ann',\n  'Marie-jeanne',\n  'Marieann',\n  'Mariejeanne',\n  'Mariel',\n  'Mariele',\n  'Marielle',\n  'Mariellen',\n  'Marietta',\n  'Mariette',\n  'Marigold',\n  'Marijo',\n  'Marika',\n  'Marilee',\n  'Marilin',\n  'Marillin',\n  'Marilyn',\n  'Marin',\n  'Marina',\n  'Marinna',\n  'Marion',\n  'Mariquilla',\n  'Maris',\n  'Marisa',\n  'Mariska',\n  'Marissa',\n  'Marita',\n  'Maritsa',\n  'Mariya',\n  'Marj',\n  'Marja',\n  'Marje',\n  'Marji',\n  'Marjie',\n  'Marjorie',\n  'Marjory',\n  'Marjy',\n  'Marketa',\n  'Marla',\n  'Marlane',\n  'Marleah',\n  'Marlee',\n  'Marleen',\n  'Marlena',\n  'Marlene',\n  'Marley',\n  'Marlie',\n  'Marline',\n  'Marlo',\n  'Marlyn',\n  'Marna',\n  'Marne',\n  'Marney',\n  'Marni',\n  'Marnia',\n  'Marnie',\n  'Marquita',\n  'Marrilee',\n  'Marris',\n  'Marrissa',\n  'Marsha',\n  'Marsiella',\n  'Marta',\n  'Martelle',\n  'Martguerita',\n  'Martha',\n  'Marthe',\n  'Marthena',\n  'Marti',\n  'Martica',\n  'Martie',\n  'Martina',\n  'Martita',\n  'Marty',\n  'Martynne',\n  'Mary',\n  'Marya',\n  'Maryann',\n  'Maryanna',\n  'Maryanne',\n  'Marybelle',\n  'Marybeth',\n  'Maryellen',\n  'Maryjane',\n  'Maryjo',\n  'Maryl',\n  'Marylee',\n  'Marylin',\n  'Marylinda',\n  'Marylou',\n  'Marylynne',\n  'Maryrose',\n  'Marys',\n  'Marysa',\n  'Masha',\n  'Matelda',\n  'Mathilda',\n  'Mathilde',\n  'Matilda',\n  'Matilde',\n  'Matti',\n  'Mattie',\n  'Matty',\n  'Maud',\n  'Maude',\n  'Maudie',\n  'Maura',\n  'Maure',\n  'Maureen',\n  'Maureene',\n  'Maurene',\n  'Maurine',\n  'Maurise',\n  'Maurita',\n  'Maurizia',\n  'Mavis',\n  'Mavra',\n  'Max',\n  'Maxi',\n  'Maxie',\n  'Maxine',\n  'Maxy',\n  'May',\n  'Maybelle',\n  'Maye',\n  'Mead',\n  'Meade',\n  'Meagan',\n  'Meaghan',\n  'Meara',\n  'Mechelle',\n  'Meg',\n  'Megan',\n  'Megen',\n  'Meggi',\n  'Meggie',\n  'Meggy',\n  'Meghan',\n  'Meghann',\n  'Mehetabel',\n  'Mei',\n  'Mel',\n  'Mela',\n  'Melamie',\n  'Melania',\n  'Melanie',\n  'Melantha',\n  'Melany',\n  'Melba',\n  'Melesa',\n  'Melessa',\n  'Melicent',\n  'Melina',\n  'Melinda',\n  'Melinde',\n  'Melisa',\n  'Melisande',\n  'Melisandra',\n  'Melisenda',\n  'Melisent',\n  'Melissa',\n  'Melisse',\n  'Melita',\n  'Melitta',\n  'Mella',\n  'Melli',\n  'Mellicent',\n  'Mellie',\n  'Mellisa',\n  'Mellisent',\n  'Melloney',\n  'Melly',\n  'Melodee',\n  'Melodie',\n  'Melody',\n  'Melonie',\n  'Melony',\n  'Melosa',\n  'Melva',\n  'Mercedes',\n  'Merci',\n  'Mercie',\n  'Mercy',\n  'Meredith',\n  'Meredithe',\n  'Meridel',\n  'Meridith',\n  'Meriel',\n  'Merilee',\n  'Merilyn',\n  'Meris',\n  'Merissa',\n  'Merl',\n  'Merla',\n  'Merle',\n  'Merlina',\n  'Merline',\n  'Merna',\n  'Merola',\n  'Merralee',\n  'Merridie',\n  'Merrie',\n  'Merrielle',\n  'Merrile',\n  'Merrilee',\n  'Merrili',\n  'Merrill',\n  'Merrily',\n  'Merry',\n  'Mersey',\n  'Meryl',\n  'Meta',\n  'Mia',\n  'Micaela',\n  'Michaela',\n  'Michaelina',\n  'Michaeline',\n  'Michaella',\n  'Michal',\n  'Michel',\n  'Michele',\n  'Michelina',\n  'Micheline',\n  'Michell',\n  'Michelle',\n  'Micki',\n  'Mickie',\n  'Micky',\n  'Midge',\n  'Mignon',\n  'Mignonne',\n  'Miguela',\n  'Miguelita',\n  'Mikaela',\n  'Mil',\n  'Mildred',\n  'Mildrid',\n  'Milena',\n  'Milicent',\n  'Milissent',\n  'Milka',\n  'Milli',\n  'Millicent',\n  'Millie',\n  'Millisent',\n  'Milly',\n  'Milzie',\n  'Mimi',\n  'Min',\n  'Mina',\n  'Minda',\n  'Mindy',\n  'Minerva',\n  'Minetta',\n  'Minette',\n  'Minna',\n  'Minnaminnie',\n  'Minne',\n  'Minni',\n  'Minnie',\n  'Minnnie',\n  'Minny',\n  'Minta',\n  'Miquela',\n  'Mira',\n  'Mirabel',\n  'Mirabella',\n  'Mirabelle',\n  'Miran',\n  'Miranda',\n  'Mireielle',\n  'Mireille',\n  'Mirella',\n  'Mirelle',\n  'Miriam',\n  'Mirilla',\n  'Mirna',\n  'Misha',\n  'Missie',\n  'Missy',\n  'Misti',\n  'Misty',\n  'Mitzi',\n  'Modesta',\n  'Modestia',\n  'Modestine',\n  'Modesty',\n  'Moina',\n  'Moira',\n  'Moll',\n  'Mollee',\n  'Molli',\n  'Mollie',\n  'Molly',\n  'Mommy',\n  'Mona',\n  'Monah',\n  'Monica',\n  'Monika',\n  'Monique',\n  'Mora',\n  'Moreen',\n  'Morena',\n  'Morgan',\n  'Morgana',\n  'Morganica',\n  'Morganne',\n  'Morgen',\n  'Moria',\n  'Morissa',\n  'Morna',\n  'Moselle',\n  'Moyna',\n  'Moyra',\n  'Mozelle',\n  'Muffin',\n  'Mufi',\n  'Mufinella',\n  'Muire',\n  'Mureil',\n  'Murial',\n  'Muriel',\n  'Murielle',\n  'Myra',\n  'Myrah',\n  'Myranda',\n  'Myriam',\n  'Myrilla',\n  'Myrle',\n  'Myrlene',\n  'Myrna',\n  'Myrta',\n  'Myrtia',\n  'Myrtice',\n  'Myrtie',\n  'Myrtle',\n  'Nada',\n  'Nadean',\n  'Nadeen',\n  'Nadia',\n  'Nadine',\n  'Nadiya',\n  'Nady',\n  'Nadya',\n  'Nalani',\n  'Nan',\n  'Nana',\n  'Nananne',\n  'Nance',\n  'Nancee',\n  'Nancey',\n  'Nanci',\n  'Nancie',\n  'Nancy',\n  'Nanete',\n  'Nanette',\n  'Nani',\n  'Nanice',\n  'Nanine',\n  'Nannette',\n  'Nanni',\n  'Nannie',\n  'Nanny',\n  'Nanon',\n  'Naoma',\n  'Naomi',\n  'Nara',\n  'Nari',\n  'Nariko',\n  'Nat',\n  'Nata',\n  'Natala',\n  'Natalee',\n  'Natalie',\n  'Natalina',\n  'Nataline',\n  'Natalya',\n  'Natasha',\n  'Natassia',\n  'Nathalia',\n  'Nathalie',\n  'Natividad',\n  'Natka',\n  'Natty',\n  'Neala',\n  'Neda',\n  'Nedda',\n  'Nedi',\n  'Neely',\n  'Neila',\n  'Neile',\n  'Neilla',\n  'Neille',\n  'Nelia',\n  'Nelie',\n  'Nell',\n  'Nelle',\n  'Nelli',\n  'Nellie',\n  'Nelly',\n  'Nerissa',\n  'Nerita',\n  'Nert',\n  'Nerta',\n  'Nerte',\n  'Nerti',\n  'Nertie',\n  'Nerty',\n  'Nessa',\n  'Nessi',\n  'Nessie',\n  'Nessy',\n  'Nesta',\n  'Netta',\n  'Netti',\n  'Nettie',\n  'Nettle',\n  'Netty',\n  'Nevsa',\n  'Neysa',\n  'Nichol',\n  'Nichole',\n  'Nicholle',\n  'Nicki',\n  'Nickie',\n  'Nicky',\n  'Nicol',\n  'Nicola',\n  'Nicole',\n  'Nicolea',\n  'Nicolette',\n  'Nicoli',\n  'Nicolina',\n  'Nicoline',\n  'Nicolle',\n  'Nikaniki',\n  'Nike',\n  'Niki',\n  'Nikki',\n  'Nikkie',\n  'Nikoletta',\n  'Nikolia',\n  'Nina',\n  'Ninetta',\n  'Ninette',\n  'Ninnetta',\n  'Ninnette',\n  'Ninon',\n  'Nissa',\n  'Nisse',\n  'Nissie',\n  'Nissy',\n  'Nita',\n  'Nixie',\n  'Noami',\n  'Noel',\n  'Noelani',\n  'Noell',\n  'Noella',\n  'Noelle',\n  'Noellyn',\n  'Noelyn',\n  'Noemi',\n  'Nola',\n  'Nolana',\n  'Nolie',\n  'Nollie',\n  'Nomi',\n  'Nona',\n  'Nonah',\n  'Noni',\n  'Nonie',\n  'Nonna',\n  'Nonnah',\n  'Nora',\n  'Norah',\n  'Norean',\n  'Noreen',\n  'Norene',\n  'Norina',\n  'Norine',\n  'Norma',\n  'Norri',\n  'Norrie',\n  'Norry',\n  'Novelia',\n  'Nydia',\n  'Nyssa',\n  'Octavia',\n  'Odele',\n  'Odelia',\n  'Odelinda',\n  'Odella',\n  'Odelle',\n  'Odessa',\n  'Odetta',\n  'Odette',\n  'Odilia',\n  'Odille',\n  'Ofelia',\n  'Ofella',\n  'Ofilia',\n  'Ola',\n  'Olenka',\n  'Olga',\n  'Olia',\n  'Olimpia',\n  'Olive',\n  'Olivette',\n  'Olivia',\n  'Olivie',\n  'Oliy',\n  'Ollie',\n  'Olly',\n  'Olva',\n  'Olwen',\n  'Olympe',\n  'Olympia',\n  'Olympie',\n  'Ondrea',\n  'Oneida',\n  'Onida',\n  'Oona',\n  'Opal',\n  'Opalina',\n  'Opaline',\n  'Ophelia',\n  'Ophelie',\n  'Ora',\n  'Oralee',\n  'Oralia',\n  'Oralie',\n  'Oralla',\n  'Oralle',\n  'Orel',\n  'Orelee',\n  'Orelia',\n  'Orelie',\n  'Orella',\n  'Orelle',\n  'Oriana',\n  'Orly',\n  'Orsa',\n  'Orsola',\n  'Ortensia',\n  'Otha',\n  'Othelia',\n  'Othella',\n  'Othilia',\n  'Othilie',\n  'Ottilie',\n  'Page',\n  'Paige',\n  'Paloma',\n  'Pam',\n  'Pamela',\n  'Pamelina',\n  'Pamella',\n  'Pammi',\n  'Pammie',\n  'Pammy',\n  'Pandora',\n  'Pansie',\n  'Pansy',\n  'Paola',\n  'Paolina',\n  'Papagena',\n  'Pat',\n  'Patience',\n  'Patrica',\n  'Patrice',\n  'Patricia',\n  'Patrizia',\n  'Patsy',\n  'Patti',\n  'Pattie',\n  'Patty',\n  'Paula',\n  'Paule',\n  'Pauletta',\n  'Paulette',\n  'Pauli',\n  'Paulie',\n  'Paulina',\n  'Pauline',\n  'Paulita',\n  'Pauly',\n  'Pavia',\n  'Pavla',\n  'Pearl',\n  'Pearla',\n  'Pearle',\n  'Pearline',\n  'Peg',\n  'Pegeen',\n  'Peggi',\n  'Peggie',\n  'Peggy',\n  'Pen',\n  'Penelopa',\n  'Penelope',\n  'Penni',\n  'Pennie',\n  'Penny',\n  'Pepi',\n  'Pepita',\n  'Peri',\n  'Peria',\n  'Perl',\n  'Perla',\n  'Perle',\n  'Perri',\n  'Perrine',\n  'Perry',\n  'Persis',\n  'Pet',\n  'Peta',\n  'Petra',\n  'Petrina',\n  'Petronella',\n  'Petronia',\n  'Petronilla',\n  'Petronille',\n  'Petunia',\n  'Phaedra',\n  'Phaidra',\n  'Phebe',\n  'Phedra',\n  'Phelia',\n  'Phil',\n  'Philipa',\n  'Philippa',\n  'Philippe',\n  'Philippine',\n  'Philis',\n  'Phillida',\n  'Phillie',\n  'Phillis',\n  'Philly',\n  'Philomena',\n  'Phoebe',\n  'Phylis',\n  'Phyllida',\n  'Phyllis',\n  'Phyllys',\n  'Phylys',\n  'Pia',\n  'Pier',\n  'Pierette',\n  'Pierrette',\n  'Pietra',\n  'Piper',\n  'Pippa',\n  'Pippy',\n  'Polly',\n  'Pollyanna',\n  'Pooh',\n  'Poppy',\n  'Portia',\n  'Pris',\n  'Prisca',\n  'Priscella',\n  'Priscilla',\n  'Prissie',\n  'Pru',\n  'Prudence',\n  'Prudi',\n  'Prudy',\n  'Prue',\n  'Queenie',\n  'Quentin',\n  'Querida',\n  'Quinn',\n  'Quinta',\n  'Quintana',\n  'Quintilla',\n  'Quintina',\n  'Rachael',\n  'Rachel',\n  'Rachele',\n  'Rachelle',\n  'Rae',\n  'Raeann',\n  'Raf',\n  'Rafa',\n  'Rafaela',\n  'Rafaelia',\n  'Rafaelita',\n  'Rahal',\n  'Rahel',\n  'Raina',\n  'Raine',\n  'Rakel',\n  'Ralina',\n  'Ramona',\n  'Ramonda',\n  'Rana',\n  'Randa',\n  'Randee',\n  'Randene',\n  'Randi',\n  'Randie',\n  'Randy',\n  'Ranee',\n  'Rani',\n  'Rania',\n  'Ranice',\n  'Ranique',\n  'Ranna',\n  'Raphaela',\n  'Raquel',\n  'Raquela',\n  'Rasia',\n  'Rasla',\n  'Raven',\n  'Ray',\n  'Raychel',\n  'Raye',\n  'Rayna',\n  'Raynell',\n  'Rayshell',\n  'Rea',\n  'Reba',\n  'Rebbecca',\n  'Rebe',\n  'Rebeca',\n  'Rebecca',\n  'Rebecka',\n  'Rebeka',\n  'Rebekah',\n  'Rebekkah',\n  'Ree',\n  'Reeba',\n  'Reena',\n  'Reeta',\n  'Reeva',\n  'Regan',\n  'Reggi',\n  'Reggie',\n  'Regina',\n  'Regine',\n  'Reiko',\n  'Reina',\n  'Reine',\n  'Remy',\n  'Rena',\n  'Renae',\n  'Renata',\n  'Renate',\n  'Rene',\n  'Renee',\n  'Renell',\n  'Renelle',\n  'Renie',\n  'Rennie',\n  'Reta',\n  'Retha',\n  'Revkah',\n  'Rey',\n  'Reyna',\n  'Rhea',\n  'Rheba',\n  'Rheta',\n  'Rhetta',\n  'Rhiamon',\n  'Rhianna',\n  'Rhianon',\n  'Rhoda',\n  'Rhodia',\n  'Rhodie',\n  'Rhody',\n  'Rhona',\n  'Rhonda',\n  'Riane',\n  'Riannon',\n  'Rianon',\n  'Rica',\n  'Ricca',\n  'Rici',\n  'Ricki',\n  'Rickie',\n  'Ricky',\n  'Riki',\n  'Rikki',\n  'Rina',\n  'Risa',\n  'Rita',\n  'Riva',\n  'Rivalee',\n  'Rivi',\n  'Rivkah',\n  'Rivy',\n  'Roana',\n  'Roanna',\n  'Roanne',\n  'Robbi',\n  'Robbie',\n  'Robbin',\n  'Robby',\n  'Robbyn',\n  'Robena',\n  'Robenia',\n  'Roberta',\n  'Robin',\n  'Robina',\n  'Robinet',\n  'Robinett',\n  'Robinetta',\n  'Robinette',\n  'Robinia',\n  'Roby',\n  'Robyn',\n  'Roch',\n  'Rochell',\n  'Rochella',\n  'Rochelle',\n  'Rochette',\n  'Roda',\n  'Rodi',\n  'Rodie',\n  'Rodina',\n  'Rois',\n  'Romola',\n  'Romona',\n  'Romonda',\n  'Romy',\n  'Rona',\n  'Ronalda',\n  'Ronda',\n  'Ronica',\n  'Ronna',\n  'Ronni',\n  'Ronnica',\n  'Ronnie',\n  'Ronny',\n  'Roobbie',\n  'Rora',\n  'Rori',\n  'Rorie',\n  'Rory',\n  'Ros',\n  'Rosa',\n  'Rosabel',\n  'Rosabella',\n  'Rosabelle',\n  'Rosaleen',\n  'Rosalia',\n  'Rosalie',\n  'Rosalind',\n  'Rosalinda',\n  'Rosalinde',\n  'Rosaline',\n  'Rosalyn',\n  'Rosalynd',\n  'Rosamond',\n  'Rosamund',\n  'Rosana',\n  'Rosanna',\n  'Rosanne',\n  'Rose',\n  'Roseann',\n  'Roseanna',\n  'Roseanne',\n  'Roselia',\n  'Roselin',\n  'Roseline',\n  'Rosella',\n  'Roselle',\n  'Rosemaria',\n  'Rosemarie',\n  'Rosemary',\n  'Rosemonde',\n  'Rosene',\n  'Rosetta',\n  'Rosette',\n  'Roshelle',\n  'Rosie',\n  'Rosina',\n  'Rosita',\n  'Roslyn',\n  'Rosmunda',\n  'Rosy',\n  'Row',\n  'Rowe',\n  'Rowena',\n  'Roxana',\n  'Roxane',\n  'Roxanna',\n  'Roxanne',\n  'Roxi',\n  'Roxie',\n  'Roxine',\n  'Roxy',\n  'Roz',\n  'Rozalie',\n  'Rozalin',\n  'Rozamond',\n  'Rozanna',\n  'Rozanne',\n  'Roze',\n  'Rozele',\n  'Rozella',\n  'Rozelle',\n  'Rozina',\n  'Rubetta',\n  'Rubi',\n  'Rubia',\n  'Rubie',\n  'Rubina',\n  'Ruby',\n  'Ruperta',\n  'Ruth',\n  'Ruthann',\n  'Ruthanne',\n  'Ruthe',\n  'Ruthi',\n  'Ruthie',\n  'Ruthy',\n  'Ryann',\n  'Rycca',\n  'Saba',\n  'Sabina',\n  'Sabine',\n  'Sabra',\n  'Sabrina',\n  'Sacha',\n  'Sada',\n  'Sadella',\n  'Sadie',\n  'Sadye',\n  'Saidee',\n  'Sal',\n  'Salaidh',\n  'Sallee',\n  'Salli',\n  'Sallie',\n  'Sally',\n  'Sallyann',\n  'Sallyanne',\n  'Saloma',\n  'Salome',\n  'Salomi',\n  'Sam',\n  'Samantha',\n  'Samara',\n  'Samaria',\n  'Sammy',\n  'Sande',\n  'Sandi',\n  'Sandie',\n  'Sandra',\n  'Sandy',\n  'Sandye',\n  'Sapphira',\n  'Sapphire',\n  'Sara',\n  'Sara-ann',\n  'Saraann',\n  'Sarah',\n  'Sarajane',\n  'Saree',\n  'Sarena',\n  'Sarene',\n  'Sarette',\n  'Sari',\n  'Sarina',\n  'Sarine',\n  'Sarita',\n  'Sascha',\n  'Sasha',\n  'Sashenka',\n  'Saudra',\n  'Saundra',\n  'Savina',\n  'Sayre',\n  'Scarlet',\n  'Scarlett',\n  'Sean',\n  'Seana',\n  'Seka',\n  'Sela',\n  'Selena',\n  'Selene',\n  'Selestina',\n  'Selia',\n  'Selie',\n  'Selina',\n  'Selinda',\n  'Seline',\n  'Sella',\n  'Selle',\n  'Selma',\n  'Sena',\n  'Sephira',\n  'Serena',\n  'Serene',\n  'Shae',\n  'Shaina',\n  'Shaine',\n  'Shalna',\n  'Shalne',\n  'Shana',\n  'Shanda',\n  'Shandee',\n  'Shandeigh',\n  'Shandie',\n  'Shandra',\n  'Shandy',\n  'Shane',\n  'Shani',\n  'Shanie',\n  'Shanna',\n  'Shannah',\n  'Shannen',\n  'Shannon',\n  'Shanon',\n  'Shanta',\n  'Shantee',\n  'Shara',\n  'Sharai',\n  'Shari',\n  'Sharia',\n  'Sharity',\n  'Sharl',\n  'Sharla',\n  'Sharleen',\n  'Sharlene',\n  'Sharline',\n  'Sharon',\n  'Sharona',\n  'Sharron',\n  'Sharyl',\n  'Shaun',\n  'Shauna',\n  'Shawn',\n  'Shawna',\n  'Shawnee',\n  'Shay',\n  'Shayla',\n  'Shaylah',\n  'Shaylyn',\n  'Shaylynn',\n  'Shayna',\n  'Shayne',\n  'Shea',\n  'Sheba',\n  'Sheela',\n  'Sheelagh',\n  'Sheelah',\n  'Sheena',\n  'Sheeree',\n  'Sheila',\n  'Sheila-kathryn',\n  'Sheilah',\n  'Shel',\n  'Shela',\n  'Shelagh',\n  'Shelba',\n  'Shelbi',\n  'Shelby',\n  'Shelia',\n  'Shell',\n  'Shelley',\n  'Shelli',\n  'Shellie',\n  'Shelly',\n  'Shena',\n  'Sher',\n  'Sheree',\n  'Sheri',\n  'Sherie',\n  'Sherill',\n  'Sherilyn',\n  'Sherline',\n  'Sherri',\n  'Sherrie',\n  'Sherry',\n  'Sherye',\n  'Sheryl',\n  'Shina',\n  'Shir',\n  'Shirl',\n  'Shirlee',\n  'Shirleen',\n  'Shirlene',\n  'Shirley',\n  'Shirline',\n  'Shoshana',\n  'Shoshanna',\n  'Siana',\n  'Sianna',\n  'Sib',\n  'Sibbie',\n  'Sibby',\n  'Sibeal',\n  'Sibel',\n  'Sibella',\n  'Sibelle',\n  'Sibilla',\n  'Sibley',\n  'Sibyl',\n  'Sibylla',\n  'Sibylle',\n  'Sidoney',\n  'Sidonia',\n  'Sidonnie',\n  'Sigrid',\n  'Sile',\n  'Sileas',\n  'Silva',\n  'Silvana',\n  'Silvia',\n  'Silvie',\n  'Simona',\n  'Simone',\n  'Simonette',\n  'Simonne',\n  'Sindee',\n  'Siobhan',\n  'Sioux',\n  'Siouxie',\n  'Sisely',\n  'Sisile',\n  'Sissie',\n  'Sissy',\n  'Siusan',\n  'Sofia',\n  'Sofie',\n  'Sondra',\n  'Sonia',\n  'Sonja',\n  'Sonni',\n  'Sonnie',\n  'Sonnnie',\n  'Sonny',\n  'Sonya',\n  'Sophey',\n  'Sophi',\n  'Sophia',\n  'Sophie',\n  'Sophronia',\n  'Sorcha',\n  'Sosanna',\n  'Stace',\n  'Stacee',\n  'Stacey',\n  'Staci',\n  'Stacia',\n  'Stacie',\n  'Stacy',\n  'Stafani',\n  'Star',\n  'Starla',\n  'Starlene',\n  'Starlin',\n  'Starr',\n  'Stefa',\n  'Stefania',\n  'Stefanie',\n  'Steffane',\n  'Steffi',\n  'Steffie',\n  'Stella',\n  'Stepha',\n  'Stephana',\n  'Stephani',\n  'Stephanie',\n  'Stephannie',\n  'Stephenie',\n  'Stephi',\n  'Stephie',\n  'Stephine',\n  'Stesha',\n  'Stevana',\n  'Stevena',\n  'Stoddard',\n  'Storm',\n  'Stormi',\n  'Stormie',\n  'Stormy',\n  'Sue',\n  'Suellen',\n  'Sukey',\n  'Suki',\n  'Sula',\n  'Sunny',\n  'Sunshine',\n  'Susan',\n  'Susana',\n  'Susanetta',\n  'Susann',\n  'Susanna',\n  'Susannah',\n  'Susanne',\n  'Susette',\n  'Susi',\n  'Susie',\n  'Susy',\n  'Suzann',\n  'Suzanna',\n  'Suzanne',\n  'Suzette',\n  'Suzi',\n  'Suzie',\n  'Suzy',\n  'Sybil',\n  'Sybila',\n  'Sybilla',\n  'Sybille',\n  'Sybyl',\n  'Sydel',\n  'Sydelle',\n  'Sydney',\n  'Sylvia',\n  'Tabatha',\n  'Tabbatha',\n  'Tabbi',\n  'Tabbie',\n  'Tabbitha',\n  'Tabby',\n  'Tabina',\n  'Tabitha',\n  'Taffy',\n  'Talia',\n  'Tallia',\n  'Tallie',\n  'Tallou',\n  'Tallulah',\n  'Tally',\n  'Talya',\n  'Talyah',\n  'Tamar',\n  'Tamara',\n  'Tamarah',\n  'Tamarra',\n  'Tamera',\n  'Tami',\n  'Tamiko',\n  'Tamma',\n  'Tammara',\n  'Tammi',\n  'Tammie',\n  'Tammy',\n  'Tamqrah',\n  'Tamra',\n  'Tana',\n  'Tandi',\n  'Tandie',\n  'Tandy',\n  'Tanhya',\n  'Tani',\n  'Tania',\n  'Tanitansy',\n  'Tansy',\n  'Tanya',\n  'Tara',\n  'Tarah',\n  'Tarra',\n  'Tarrah',\n  'Taryn',\n  'Tasha',\n  'Tasia',\n  'Tate',\n  'Tatiana',\n  'Tatiania',\n  'Tatum',\n  'Tawnya',\n  'Tawsha',\n  'Ted',\n  'Tedda',\n  'Teddi',\n  'Teddie',\n  'Teddy',\n  'Tedi',\n  'Tedra',\n  'Teena',\n  'Teirtza',\n  'Teodora',\n  'Tera',\n  'Teresa',\n  'Terese',\n  'Teresina',\n  'Teresita',\n  'Teressa',\n  'Teri',\n  'Teriann',\n  'Terra',\n  'Terri',\n  'Terrie',\n  'Terrijo',\n  'Terry',\n  'Terrye',\n  'Tersina',\n  'Terza',\n  'Tess',\n  'Tessa',\n  'Tessi',\n  'Tessie',\n  'Tessy',\n  'Thalia',\n  'Thea',\n  'Theadora',\n  'Theda',\n  'Thekla',\n  'Thelma',\n  'Theo',\n  'Theodora',\n  'Theodosia',\n  'Theresa',\n  'Therese',\n  'Theresina',\n  'Theresita',\n  'Theressa',\n  'Therine',\n  'Thia',\n  'Thomasa',\n  'Thomasin',\n  'Thomasina',\n  'Thomasine',\n  'Tiena',\n  'Tierney',\n  'Tiertza',\n  'Tiff',\n  'Tiffani',\n  'Tiffanie',\n  'Tiffany',\n  'Tiffi',\n  'Tiffie',\n  'Tiffy',\n  'Tilda',\n  'Tildi',\n  'Tildie',\n  'Tildy',\n  'Tillie',\n  'Tilly',\n  'Tim',\n  'Timi',\n  'Timmi',\n  'Timmie',\n  'Timmy',\n  'Timothea',\n  'Tina',\n  'Tine',\n  'Tiphani',\n  'Tiphanie',\n  'Tiphany',\n  'Tish',\n  'Tisha',\n  'Tobe',\n  'Tobey',\n  'Tobi',\n  'Toby',\n  'Tobye',\n  'Toinette',\n  'Toma',\n  'Tomasina',\n  'Tomasine',\n  'Tomi',\n  'Tommi',\n  'Tommie',\n  'Tommy',\n  'Toni',\n  'Tonia',\n  'Tonie',\n  'Tony',\n  'Tonya',\n  'Tonye',\n  'Tootsie',\n  'Torey',\n  'Tori',\n  'Torie',\n  'Torrie',\n  'Tory',\n  'Tova',\n  'Tove',\n  'Tracee',\n  'Tracey',\n  'Traci',\n  'Tracie',\n  'Tracy',\n  'Trenna',\n  'Tresa',\n  'Trescha',\n  'Tressa',\n  'Tricia',\n  'Trina',\n  'Trish',\n  'Trisha',\n  'Trista',\n  'Trix',\n  'Trixi',\n  'Trixie',\n  'Trixy',\n  'Truda',\n  'Trude',\n  'Trudey',\n  'Trudi',\n  'Trudie',\n  'Trudy',\n  'Trula',\n  'Tuesday',\n  'Twila',\n  'Twyla',\n  'Tybi',\n  'Tybie',\n  'Tyne',\n  'Ula',\n  'Ulla',\n  'Ulrica',\n  'Ulrika',\n  'Ulrikaumeko',\n  'Ulrike',\n  'Umeko',\n  'Una',\n  'Ursa',\n  'Ursala',\n  'Ursola',\n  'Ursula',\n  'Ursulina',\n  'Ursuline',\n  'Uta',\n  'Val',\n  'Valaree',\n  'Valaria',\n  'Vale',\n  'Valeda',\n  'Valencia',\n  'Valene',\n  'Valenka',\n  'Valentia',\n  'Valentina',\n  'Valentine',\n  'Valera',\n  'Valeria',\n  'Valerie',\n  'Valery',\n  'Valerye',\n  'Valida',\n  'Valina',\n  'Valli',\n  'Vallie',\n  'Vally',\n  'Valma',\n  'Valry',\n  'Van',\n  'Vanda',\n  'Vanessa',\n  'Vania',\n  'Vanna',\n  'Vanni',\n  'Vannie',\n  'Vanny',\n  'Vanya',\n  'Veda',\n  'Velma',\n  'Velvet',\n  'Venita',\n  'Venus',\n  'Vera',\n  'Veradis',\n  'Vere',\n  'Verena',\n  'Verene',\n  'Veriee',\n  'Verile',\n  'Verina',\n  'Verine',\n  'Verla',\n  'Verna',\n  'Vernice',\n  'Veronica',\n  'Veronika',\n  'Veronike',\n  'Veronique',\n  'Vevay',\n  'Vi',\n  'Vicki',\n  'Vickie',\n  'Vicky',\n  'Victoria',\n  'Vida',\n  'Viki',\n  'Vikki',\n  'Vikky',\n  'Vilhelmina',\n  'Vilma',\n  'Vin',\n  'Vina',\n  'Vinita',\n  'Vinni',\n  'Vinnie',\n  'Vinny',\n  'Viola',\n  'Violante',\n  'Viole',\n  'Violet',\n  'Violetta',\n  'Violette',\n  'Virgie',\n  'Virgina',\n  'Virginia',\n  'Virginie',\n  'Vita',\n  'Vitia',\n  'Vitoria',\n  'Vittoria',\n  'Viv',\n  'Viva',\n  'Vivi',\n  'Vivia',\n  'Vivian',\n  'Viviana',\n  'Vivianna',\n  'Vivianne',\n  'Vivie',\n  'Vivien',\n  'Viviene',\n  'Vivienne',\n  'Viviyan',\n  'Vivyan',\n  'Vivyanne',\n  'Vonni',\n  'Vonnie',\n  'Vonny',\n  'Vyky',\n  'Wallie',\n  'Wallis',\n  'Walliw',\n  'Wally',\n  'Waly',\n  'Wanda',\n  'Wandie',\n  'Wandis',\n  'Waneta',\n  'Wanids',\n  'Wenda',\n  'Wendeline',\n  'Wendi',\n  'Wendie',\n  'Wendy',\n  'Wendye',\n  'Wenona',\n  'Wenonah',\n  'Whitney',\n  'Wileen',\n  'Wilhelmina',\n  'Wilhelmine',\n  'Wilie',\n  'Willa',\n  'Willabella',\n  'Willamina',\n  'Willetta',\n  'Willette',\n  'Willi',\n  'Willie',\n  'Willow',\n  'Willy',\n  'Willyt',\n  'Wilma',\n  'Wilmette',\n  'Wilona',\n  'Wilone',\n  'Wilow',\n  'Windy',\n  'Wini',\n  'Winifred',\n  'Winna',\n  'Winnah',\n  'Winne',\n  'Winni',\n  'Winnie',\n  'Winnifred',\n  'Winny',\n  'Winona',\n  'Winonah',\n  'Wren',\n  'Wrennie',\n  'Wylma',\n  'Wynn',\n  'Wynne',\n  'Wynnie',\n  'Wynny',\n  'Xaviera',\n  'Xena',\n  'Xenia',\n  'Xylia',\n  'Xylina',\n  'Yalonda',\n  'Yasmeen',\n  'Yasmin',\n  'Yelena',\n  'Yetta',\n  'Yettie',\n  'Yetty',\n  'Yevette',\n  'Ynes',\n  'Ynez',\n  'Yoko',\n  'Yolanda',\n  'Yolande',\n  'Yolane',\n  'Yolanthe',\n  'Yoshi',\n  'Yoshiko',\n  'Yovonnda',\n  'Ysabel',\n  'Yvette',\n  'Yvonne',\n  'Zabrina',\n  'Zahara',\n  'Zandra',\n  'Zaneta',\n  'Zara',\n  'Zarah',\n  'Zaria',\n  'Zarla',\n  'Zea',\n  'Zelda',\n  'Zelma',\n  'Zena',\n  'Zenia',\n  'Zia',\n  'Zilvia',\n  'Zita',\n  'Zitella',\n  'Zoe',\n  'Zola',\n  'Zonda',\n  'Zondra',\n  'Zonnya',\n  'Zora',\n  'Zorah',\n  'Zorana',\n  'Zorina',\n  'Zorine',\n  'Zsazsa',\n  'Zulema',\n  'Zuzana',\n];\n","export default [\n  'Ackbar',\n  'Adi Gallia',\n  'Anakin Skywalker',\n  'Arvel Crynyd',\n  'Ayla Secura',\n  'Bail Prestor Organa',\n  'Barriss Offee',\n  'Ben Quadinaros',\n  'Beru Whitesun lars',\n  'Bib Fortuna',\n  'Biggs Darklighter',\n  'Boba Fett',\n  'Bossk',\n  'C-3PO',\n  'Chewbacca',\n  'Cliegg Lars',\n  'Cordé',\n  'Darth Maul',\n  'Darth Vader',\n  'Dexter Jettster',\n  'Dooku',\n  'Dormé',\n  'Dud Bolt',\n  'Eeth Koth',\n  'Finis Valorum',\n  'Gasgano',\n  'Greedo',\n  'Gregar Typho',\n  'Grievous',\n  'Han Solo',\n  'IG-88',\n  'Jabba Desilijic Tiure',\n  'Jango Fett',\n  'Jar Jar Binks',\n  'Jek Tono Porkins',\n  'Jocasta Nu',\n  'Ki-Adi-Mundi',\n  'Kit Fisto',\n  'Lama Su',\n  'Lando Calrissian',\n  'Leia Organa',\n  'Lobot',\n  'Luke Skywalker',\n  'Luminara Unduli',\n  'Mace Windu',\n  'Mas Amedda',\n  'Mon Mothma',\n  'Nien Nunb',\n  'Nute Gunray',\n  'Obi-Wan Kenobi',\n  'Owen Lars',\n  'Padmé Amidala',\n  'Palpatine',\n  'Plo Koon',\n  'Poggle the Lesser',\n  'Quarsh Panaka',\n  'Qui-Gon Jinn',\n  'R2-D2',\n  'R4-P17',\n  'R5-D4',\n  'Ratts Tyerel',\n  'Raymus Antilles',\n  'Ric Olié',\n  'Roos Tarpals',\n  'Rugor Nass',\n  'Saesee Tiin',\n  'San Hill',\n  'Sebulba',\n  'Shaak Ti',\n  'Shmi Skywalker',\n  'Sly Moore',\n  'Tarfful',\n  'Taun We',\n  'Tion Medon',\n  'Wat Tambor',\n  'Watto',\n  'Wedge Antilles',\n  'Wicket Systri Warrick',\n  'Wilhuff Tarkin',\n  'Yarael Poof',\n  'Yoda',\n  'Zam Wesell',\n];\n","interface Config {\n  min: number;\n  max: number;\n  length?: number;\n}\n\nconst defaultConfig: Config = {\n  min: 1,\n  max: 999,\n};\n\nexport class NumberDictionary {\n  public static generate(config: Partial<Config> = {}): string[] {\n    let min = config.min || defaultConfig.min;\n    let max = config.max || defaultConfig.max;\n\n    if (config.length) {\n      const length = Math.pow(10, config.length);\n      min = length / 10;\n      max = length - 1;\n      return [`${Math.floor(Math.random() * (max - min)) + min}`];\n    }\n\n    return [`${Math.floor(Math.random() * (max - min)) + min}`];\n  }\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the `debug` singleton, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Carrier } from '../carrier';\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport type InternalGlobal = {\n  navigator?: { userAgent?: string; maxTouchPoints?: number };\n  console: Console;\n  PerformanceObserver?: any;\n  Sentry?: any;\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n  _sentryEsmLoaderHookRegistered?: boolean;\n} & Carrier;\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ = globalThis as unknown as InternalGlobal;\n","// This is a magic string replaced by rollup\ndeclare const __SENTRY_SDK_VERSION__: string;\n\nexport const SDK_VERSION = typeof __SENTRY_SDK_VERSION__ === 'string' ? __SENTRY_SDK_VERSION__ : '0.0.0-unknown.0';\n","import type { AsyncContextStack } from './asyncContext/stackStrategy';\nimport type { AsyncContextStrategy } from './asyncContext/types';\nimport type { Client } from './client';\nimport type { Scope } from './scope';\nimport type { SerializedLog } from './types-hoist/log';\nimport type { Logger } from './utils/debug-logger';\nimport { SDK_VERSION } from './utils/version';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: VersionedCarrier;\n}\n\ntype VersionedCarrier = {\n  version?: string;\n} & Record<Exclude<string, 'version'>, SentryCarrier>;\n\nexport interface SentryCarrier {\n  acs?: AsyncContextStrategy;\n  stack?: AsyncContextStack;\n\n  globalScope?: Scope;\n  defaultIsolationScope?: Scope;\n  defaultCurrentScope?: Scope;\n  /** @deprecated Logger is no longer set. Instead, we keep enabled state in loggerSettings. */\n  // eslint-disable-next-line deprecation/deprecation\n  logger?: Logger;\n  loggerSettings?: { enabled: boolean };\n  /**\n   * A map of Sentry clients to their log buffers.\n   * This is used to store logs that are sent to Sentry.\n   */\n  clientToLogBufferMap?: WeakMap<Client, Array<SerializedLog>>;\n\n  /** Overwrites TextEncoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  encodePolyfill?: (input: string) => Uint8Array;\n  /** Overwrites TextDecoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  decodePolyfill?: (input: Uint8Array) => string;\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nexport function getSentryCarrier(carrier: Carrier): SentryCarrier {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<Prop extends keyof SentryCarrier>(\n  name: Prop,\n  creator: () => NonNullable<SentryCarrier[Prop]>,\n  obj = GLOBAL_OBJ,\n): NonNullable<SentryCarrier[Prop]> {\n  const __SENTRY__ = (obj.__SENTRY__ = obj.__SENTRY__ || {});\n  const carrier = (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n  // Note: We do not want to set `carrier.version` here, as this may be called before any `init` is called, e.g. for the default scopes\n  return carrier[name] || (carrier[name] = creator());\n}\n","import { getGlobalSingleton } from '../carrier';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ConsoleLevel } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * A Sentry Logger instance.\n *\n * @deprecated Use {@link debug} instead with the {@link SentryDebugLogger} type.\n */\nexport interface Logger {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n  log(...args: Parameters<typeof console.log>): void;\n  info(...args: Parameters<typeof console.info>): void;\n  warn(...args: Parameters<typeof console.warn>): void;\n  error(...args: Parameters<typeof console.error>): void;\n  debug(...args: Parameters<typeof console.debug>): void;\n  assert(...args: Parameters<typeof console.assert>): void;\n  trace(...args: Parameters<typeof console.trace>): void;\n}\n\nexport interface SentryDebugLogger {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n  log(...args: Parameters<typeof console.log>): void;\n  warn(...args: Parameters<typeof console.warn>): void;\n  error(...args: Parameters<typeof console.error>): void;\n}\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: Partial<{\n  log(...args: Parameters<typeof console.log>): void;\n  info(...args: Parameters<typeof console.info>): void;\n  warn(...args: Parameters<typeof console.warn>): void;\n  error(...args: Parameters<typeof console.error>): void;\n  debug(...args: Parameters<typeof console.debug>): void;\n  assert(...args: Parameters<typeof console.assert>): void;\n  trace(...args: Parameters<typeof console.trace>): void;\n}> = {};\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<Record<ConsoleLevel, (...args: unknown[]) => void>> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level];\n    wrappedFuncs[level] = console[level] as (...args: unknown[]) => void;\n    console[level] = originalConsoleMethod as (...args: unknown[]) => void;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as (...args: unknown[]) => void;\n    });\n  }\n}\n\nfunction enable(): void {\n  _getLoggerSettings().enabled = true;\n}\n\nfunction disable(): void {\n  _getLoggerSettings().enabled = false;\n}\n\nfunction isEnabled(): boolean {\n  return _getLoggerSettings().enabled;\n}\n\nfunction log(...args: Parameters<typeof console.log>): void {\n  _maybeLog('log', ...args);\n}\n\nfunction info(...args: Parameters<typeof console.info>): void {\n  _maybeLog('info', ...args);\n}\n\nfunction warn(...args: Parameters<typeof console.warn>): void {\n  _maybeLog('warn', ...args);\n}\n\nfunction error(...args: Parameters<typeof console.error>): void {\n  _maybeLog('error', ...args);\n}\n\nfunction _debug(...args: Parameters<typeof console.debug>): void {\n  _maybeLog('debug', ...args);\n}\n\nfunction assert(...args: Parameters<typeof console.assert>): void {\n  _maybeLog('assert', ...args);\n}\n\nfunction trace(...args: Parameters<typeof console.trace>): void {\n  _maybeLog('trace', ...args);\n}\n\nfunction _maybeLog(level: ConsoleLevel, ...args: Parameters<(typeof console)[typeof level]>): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  if (isEnabled()) {\n    consoleSandbox(() => {\n      GLOBAL_OBJ.console[level](`${PREFIX}[${level}]:`, ...args);\n    });\n  }\n}\n\nfunction _getLoggerSettings(): { enabled: boolean } {\n  if (!DEBUG_BUILD) {\n    return { enabled: false };\n  }\n\n  return getGlobalSingleton('loggerSettings', () => ({ enabled: false }));\n}\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n * The logger is a singleton on the carrier, to ensure that a consistent logger is used throughout the SDK.\n *\n * @deprecated Use {@link debug} instead.\n */\nexport const logger = {\n  /** Enable logging. */\n  enable,\n  /** Disable logging. */\n  disable,\n  /** Check if logging is enabled. */\n  isEnabled,\n  /** Log a message. */\n  log,\n  /** Log level info */\n  info,\n  /** Log a warning. */\n  warn,\n  /** Log an error. */\n  error,\n  /** Log a debug message. */\n  debug: _debug,\n  /** Log an assertion. */\n  assert,\n  /** Log a trace. */\n  trace,\n  // eslint-disable-next-line deprecation/deprecation\n} satisfies Logger;\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n */\nexport const debug = {\n  /** Enable logging. */\n  enable,\n  /** Disable logging. */\n  disable,\n  /** Check if logging is enabled. */\n  isEnabled,\n  /** Log a message. */\n  log,\n  /** Log a warning. */\n  warn,\n  /** Log an error. */\n  error,\n} satisfies SentryDebugLogger;\n","import type { Event } from '../types-hoist/event';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport type { StackLineParser, StackParser } from '../types-hoist/stacktrace';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\nexport const UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirstLines: number = 0, framesToPop: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] as string;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the scope itself, making it:\n    //\n    //   Sentry.captureException()\n    //   scope.captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr: StackFrame[]): StackFrame {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nexport function getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames: StackFrame[] = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { debug } from '../utils/debug-logger';\nimport { getFunctionName } from '../utils/stacktrace';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'fetch-body-resolved'\n  | 'history'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && debug.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        debug.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","import type { HandlerDataUnhandledRejection } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  // Note: The reason we are doing window.onunhandledrejection instead of window.addEventListener('unhandledrejection')\n  // is that we are using this handler in the Loader Script, to handle buffered rejections consistently\n  GLOBAL_OBJ.onunhandledrejection = function (e: unknown): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Primitive } from '../types-hoist/misc';\nimport type { ParameterizedString } from '../types-hoist/parameterize';\nimport type { PolymorphicEvent } from '../types-hoist/polymorphics';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat?.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n\n/**\n * Checks whether the given parameter is a Standard Web API Request instance.\n *\n * Returns false if Request is not available in the current runtime.\n */\nexport function isRequest(request: unknown): request is Request {\n  return typeof Request !== 'undefined' && isInstanceOf(request, Request);\n}\n","import { isString } from './is';\nimport { GLOBAL_OBJ } from './worldwide';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n\n  if (!elem?.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs = keyAttrs?.length\n    ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n    : null;\n\n  if (keyAttrPairs?.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch {\n    return '';\n  }\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precedence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from '../vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: unknown[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WrappedFunction } from '../types-hoist/wrappedfunction';\nimport { htmlTreeAsString } from './browser';\nimport { debug } from './debug-logger';\nimport { isElement, isError, isEvent, isInstanceOf, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * If the method on the passed object is not a function, the wrapper will not be applied.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  // explicitly casting to unknown because we don't know the type of the method initially at all\n  const original = source[name] as unknown;\n\n  if (typeof original !== 'function') {\n    return;\n  }\n\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  try {\n    source[name] = wrapped;\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to replace method \"${name}\" in object`, source);\n  }\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function getOriginalFunction<T extends Function>(func: WrappedFunction<T>): T | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n *\n * @deprecated This function is no longer used by the SDK and will be removed in a future major version.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  // Early return for primitive values\n  if (inputValue === null || typeof inputValue !== 'object') {\n    return inputValue;\n  }\n\n  // Check memo map first for all object types\n  const memoVal = memoizationMap.get(inputValue);\n  if (memoVal !== undefined) {\n    return memoVal as T;\n  }\n\n  // handle arrays\n  if (Array.isArray(inputValue)) {\n    const returnValue: unknown[] = [];\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach(value => {\n      returnValue.push(_dropUndefinedKeys(value, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  if (isPojo(inputValue)) {\n    const returnValue: { [key: string]: unknown } = {};\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    const keys = Object.keys(inputValue);\n\n    keys.forEach(key => {\n      const val = inputValue[key];\n      if (val !== undefined) {\n        returnValue[key] = _dropUndefinedKeys(val, memoizationMap);\n      }\n    });\n\n    return returnValue as T;\n  }\n\n  // For other object types, return as is\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  // Plain objects have Object as constructor or no constructor\n  const constructor = (input as object).constructor;\n  return constructor === Object || constructor === undefined;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    // this will catch both undefined and null\n    case wat == undefined:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","import type { Event } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { Mechanism } from '../types-hoist/mechanism';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\nfunction getCrypto(): CryptoInternal | undefined {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  return gbl.crypto || gbl.msCrypto;\n}\n\n/**\n * UUID4 generator\n * @param crypto Object that provides the crypto API.\n * @returns string Generated UUID4.\n */\nexport function uuid4(crypto = getCrypto()): string {\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto?.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto?.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0]!;\n      };\n    }\n  } catch {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception?.values?.[0];\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...currentMechanism?.data, ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\nfunction _parseInt(input: string | undefined): number {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = snipLine(lines[lineIndex]!, frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  if (isAlreadyCaptured(exception)) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nfunction isAlreadyCaptured(exception: unknown): boolean | void {\n  try {\n    return (exception as { __sentry_captured__?: boolean }).__sentry_captured__;\n  } catch {} // eslint-disable-line no-empty\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  // Some browser and environments don't have a performance or timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  if (!performance?.now || !performance.timeOrigin) {\n    return dateTimestampInSeconds;\n  }\n\n  const timeOrigin = performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\nlet _cachedTimestampInSeconds: (() => number) | undefined;\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport function timestampInSeconds(): number {\n  // We store this in a closure so that we don't have to create a new function every time this is called.\n  const func = _cachedTimestampInSeconds ?? (_cachedTimestampInSeconds = createUnixTimestampInSecondsFunc());\n  return func();\n}\n\n/**\n * Cached result of getBrowserTimeOrigin.\n */\nlet cachedTimeOrigin: [number | undefined, string] | undefined;\n\n/**\n * Gets the time origin and the mode used to determine it.\n */\nfunction getBrowserTimeOrigin(): [number | undefined, string] {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance?.now) {\n    return [undefined, 'none'];\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing?.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      return [performance.timeOrigin, 'timeOrigin'];\n    } else {\n      return [navigationStart, 'navigationStart'];\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  return [dateNow, 'dateNow'];\n}\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport function browserPerformanceTimeOrigin(): number | undefined {\n  if (!cachedTimeOrigin) {\n    cachedTimeOrigin = getBrowserTimeOrigin();\n  }\n\n  return cachedTimeOrigin[0];\n}\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from './types-hoist/session';\nimport { uuid4 } from './utils/misc';\nimport { timestampInSeconds } from './utils/time';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see Client.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return {\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  };\n}\n","/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nexport function merge<T>(initialObj: T, mergeObj: T, levels = 2): T {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n","import { uuid4 } from './misc';\n\n/**\n * Generate a random, valid trace ID.\n */\nexport function generateTraceId(): string {\n  return uuid4();\n}\n\n/**\n * Generate a random, valid span ID.\n */\nexport function generateSpanId(): string {\n  return uuid4().substring(16);\n}\n","import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\ntype ScopeWithMaybeSpan = Scope & {\n  [SCOPE_SPAN_FIELD]?: Span;\n};\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _setSpanForScope(scope: Scope, span: Span | undefined): void {\n  if (span) {\n    addNonEnumerableProperty(scope as ScopeWithMaybeSpan, SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope as ScopeWithMaybeSpan)[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _getSpanForScope(scope: ScopeWithMaybeSpan): Span | undefined {\n  return scope[SCOPE_SPAN_FIELD];\n}\n","/* eslint-disable max-lines */\nimport type { Client } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport { updateSession } from './session';\nimport type { Attachment } from './types-hoist/attachment';\nimport type { Breadcrumb } from './types-hoist/breadcrumb';\nimport type { Context, Contexts } from './types-hoist/context';\nimport type { DynamicSamplingContext } from './types-hoist/envelope';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { RequestEventData } from './types-hoist/request';\nimport type { Session } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { Span } from './types-hoist/span';\nimport type { PropagationContext } from './types-hoist/tracing';\nimport type { User } from './types-hoist/user';\nimport { debug } from './utils/debug-logger';\nimport { isPlainObject } from './utils/is';\nimport { merge } from './utils/merge';\nimport { uuid4 } from './utils/misc';\nimport { generateTraceId } from './utils/propagationContext';\nimport { _getSpanForScope, _setSpanForScope } from './utils/spanOnScope';\nimport { truncate } from './utils/string';\nimport { dateTimestampInSeconds } from './utils/time';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * A context to be used for capturing an event.\n * This can either be a Scope, or a partial ScopeContext,\n * or a callback that receives the current scope and returns a new scope to use.\n */\nexport type CaptureContext = Scope | Partial<ScopeContext> | ((scope: Scope) => Scope);\n\n/**\n * Data that can be converted to a Scope.\n */\nexport interface ScopeContext {\n  user: User;\n  level: SeverityLevel;\n  extra: Extras;\n  contexts: Contexts;\n  tags: { [key: string]: Primitive };\n  fingerprint: string[];\n  propagationContext: PropagationContext;\n}\n\nexport interface SdkProcessingMetadata {\n  [key: string]: unknown;\n  requestSession?: {\n    status: 'ok' | 'errored' | 'crashed';\n  };\n  normalizedRequest?: RequestEventData;\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>;\n  capturedSpanScope?: Scope;\n  capturedSpanIsolationScope?: Scope;\n  spanCountBeforeProcessing?: number;\n  ipAddress?: string;\n}\n\n/**\n * Normalized data of the Scope, ready to be used.\n */\nexport interface ScopeData {\n  eventProcessors: EventProcessor[];\n  breadcrumbs: Breadcrumb[];\n  user: User;\n  tags: { [key: string]: Primitive };\n  extra: Extras;\n  contexts: Contexts;\n  attachments: Attachment[];\n  propagationContext: PropagationContext;\n  sdkProcessingMetadata: SdkProcessingMetadata;\n  fingerprint: string[];\n  level?: SeverityLevel;\n  transactionName?: string;\n  span?: Span;\n}\n\n/**\n * Holds additional event information.\n */\nexport class Scope {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called during event processing. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: SdkProcessingMetadata;\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: SeverityLevel;\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n  protected _transactionName?: string;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  /** Contains the last event id of a captured event.  */\n  protected _lastEventId?: string;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = {\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    };\n  }\n\n  /**\n   * Clone all data from this scope into a new scope.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    if (this._contexts.flags) {\n      // We need to copy the `values` array so insertions on a cloned scope\n      // won't affect the original array.\n      newScope._contexts.flags = {\n        values: [...this._contexts.flags.values],\n      };\n    }\n\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * Update the client assigned to this scope.\n   * Note that not every scope will have a client assigned - isolation scopes & the global scope will generally not have a client,\n   * as well as manually created scopes.\n   */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Set the ID of the last captured error event.\n   * This is generally only captured on the isolation scope.\n   */\n  public setLastEventId(lastEventId: string | undefined): void {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this._client as C | undefined;\n  }\n\n  /**\n   * Get the ID of the last captured error event.\n   * This is generally only available on the isolation scope.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * Add an event processor that will be called before an event is sent.\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * Set the user for this scope.\n   * Set to `null` to unset the user.\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the user from this scope.\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * Set an object that will be merged into existing tags on the scope,\n   * and will be sent as tags data with the event.\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single tag that will be sent as tags data with the event.\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set an object that will be merged into existing extra on the scope,\n   * and will be sent as extra data with the event.\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single key:value extra entry that will be sent as extra data with the event.\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the fingerprint on the scope to send with the events.\n   * @param {string[]} fingerprint Fingerprint to group events in Sentry.\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the level on the scope for future events.\n   */\n  public setLevel(level: SeverityLevel): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope so that the name of e.g. taken server route or\n   * the page location is attached to future events.\n   *\n   * IMPORTANT: Calling this function does NOT change the name of the currently active\n   * root span. If you want to change the name of the active root span, use\n   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.\n   *\n   * By default, the SDK updates the scope's transaction name automatically on sensible\n   * occasions, such as a page navigation or when handling a new request on the server.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets context data with the given name.\n   * Data passed as context will be normalized. You can also pass `null` to unset the context.\n   * Note that context data will not be merged - calling `setContext` will overwrite an existing context with the same key.\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set the session for the scope.\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the session from the scope.\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * Updates the scope with provided data. Can work in three variations:\n   * - plain object containing updatable attributes\n   * - Scope instance that'll extract the attributes from\n   * - callback function that'll receive the current scope as an argument and allow for modifications\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const scopeInstance =\n      scopeToMerge instanceof Scope\n        ? scopeToMerge.getScopeData()\n        : isPlainObject(scopeToMerge)\n          ? (captureContext as ScopeContext)\n          : undefined;\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    return this;\n  }\n\n  /**\n   * Clears the current scope and resets its properties.\n   * Note: The client will not be cleared.\n   */\n  public clear(): this {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this.setPropagationContext({ traceId: generateTraceId(), sampleRand: Math.random() });\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Adds a breadcrumb to the scope.\n   * By default, the last 100 breadcrumbs are kept.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb: Breadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n      // Breadcrumb messages can theoretically be infinitely large and they're held in memory so we truncate them not to leak (too much) memory\n      message: breadcrumb.message ? truncate(breadcrumb.message, 2048) : breadcrumb.message,\n    };\n\n    this._breadcrumbs.push(mergedBreadcrumb);\n    if (this._breadcrumbs.length > maxCrumbs) {\n      this._breadcrumbs = this._breadcrumbs.slice(-maxCrumbs);\n      this._client?.recordDroppedEvent('buffer_overflow', 'log_item');\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * Get the last breadcrumb of the scope.\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * Clear all breadcrumbs from the scope.\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Add an attachment to the scope.\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * Clear all attachments from the scope.\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Get the data of this scope, which should be applied to an event during processing.\n   */\n  public getScopeData(): ScopeData {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry.\n   */\n  public setSDKProcessingMetadata(newData: SdkProcessingMetadata): this {\n    this._sdkProcessingMetadata = merge(this._sdkProcessingMetadata, newData, 2);\n    return this;\n  }\n\n  /**\n   * Add propagation context to the scope, used for distributed tracing\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * Get propagation context from the scope, used for distributed tracing\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @returns {string} The id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @returns {string} The id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a Sentry event for this scope.\n   *\n   * @returns {string} The id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n","import { getGlobalSingleton } from './carrier';\nimport { Scope } from './scope';\n\n/** Get the default current scope. */\nexport function getDefaultCurrentScope(): Scope {\n  return getGlobalSingleton('defaultCurrentScope', () => new Scope());\n}\n\n/** Get the default isolation scope. */\nexport function getDefaultIsolationScope(): Scope {\n  return getGlobalSingleton('defaultIsolationScope', () => new Scope());\n}\n","import type { Client } from '../client';\nimport { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes';\nimport { Scope } from '../scope';\nimport { isThenable } from '../utils/is';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport type { AsyncContextStrategy } from './types';\n\ninterface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * This is an object that holds a stack of scopes.\n */\nexport class AsyncContextStack {\n  private readonly _stack: [Layer, ...Layer[]];\n  private _isolationScope: Scope;\n\n  public constructor(scope?: Scope, isolationScope?: Scope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    const scope = this._pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n  public getScope(): Scope {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1] as Layer;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n  private _pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n  private _popScope(): boolean {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack(): AsyncContextStack {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope<T>(callback: (scope: Scope) => T): T {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope<T>(scope: Scope, callback: (scope: Scope) => T): T {\n  const stack = getAsyncContextStack() as AsyncContextStack;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nexport function getStackAsyncContextStrategy(): AsyncContextStrategy {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: <T>(_isolationScope: Scope, callback: (isolationScope: Scope) => T) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n","import type { Carrier } from './../carrier';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport { getStackAsyncContextStrategy } from './stackStrategy';\nimport type { AsyncContextStrategy } from './types';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nexport function getAsyncContextStrategy(carrier: Carrier): AsyncContextStrategy {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n","import { getAsyncContextStrategy } from './asyncContext';\nimport { getGlobalSingleton, getMainCarrier } from './carrier';\nimport type { Client } from './client';\nimport { Scope } from './scope';\nimport type { TraceContext } from './types-hoist/context';\nimport { generateSpanId } from './utils/propagationContext';\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nexport function getIsolationScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): Scope {\n  return getGlobalSingleton('globalScope', () => new Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: Scope | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: Scope | undefined, callback: (scope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T;\n/**\n * Set the provided isolation scope as active in the given callback. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * If you pass in `undefined` as a scope, it will fork a new isolation scope, the same as if no scope is passed.\n */\nexport function withIsolationScope<T>(isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T): T;\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nexport function withIsolationScope<T>(\n  ...rest:\n    | [callback: (isolationScope: Scope) => T]\n    | [isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  return getCurrentScope().getClient<C>();\n}\n\n/**\n * Get a trace context for the given scope.\n */\nexport function getTraceContextFromScope(scope: Scope): TraceContext {\n  const propagationContext = scope.getPropagationContext();\n\n  const { traceId, parentSpanId, propagationSpanId } = propagationContext;\n\n  const traceContext: TraceContext = {\n    trace_id: traceId,\n    span_id: propagationSpanId || generateSpanId(),\n  };\n\n  if (parentSpanId) {\n    traceContext.parent_span_id = parentSpanId;\n  }\n\n  return traceContext;\n}\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Attributes that holds the sample rate that was locally applied to a span.\n * If this attribute is not defined, it means that the span inherited a sampling decision.\n *\n * NOTE: Is only defined on root spans.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Attribute holding the sample rate of the previous trace.\n * This is used to sample consistently across subsequent traces in the browser SDK.\n *\n * Note: Only defined on root spans, if opted into consistent sampling\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE = 'sentry.previous_trace_sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * A custom span name set by users guaranteed to be taken over any automatically\n * inferred name. This attribute is removed before the span is sent.\n *\n * @internal only meant for internal SDK usage\n * @hidden\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME = 'sentry.custom_span_name';\n\n/**\n * The id of the profile that this span occurred in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nexport const SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nexport const SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nexport const SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n\n/**\n * A span link attribute to mark the link as a special span link.\n *\n * Known values:\n * - `previous_trace`: The span links to the frontend root span of the previous trace.\n * - `next_trace`: The span links to the frontend root span of the next trace. (Not set by the SDK)\n *\n * Other values may be set as appropriate.\n * @see https://develop.sentry.dev/sdk/telemetry/traces/span-links/#link-types\n */\nexport const SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE = 'sentry.link.type';\n","import type { Span } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\n\nexport const SPAN_STATUS_UNSET = 0;\nexport const SPAN_STATUS_OK = 1;\nexport const SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatus {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n","import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nexport function setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport { debug } from './debug-logger';\nimport { isString } from './is';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nexport function parseBaggageHeader(\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Record<string, string> | undefined {\n  if (!baggageHeader || (!isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry =>\n      baggageEntry.split('=').map(keyOrValue => {\n        try {\n          return decodeURIComponent(keyOrValue.trim());\n        } catch {\n          // We ignore errors here, e.g. if the value cannot be URL decoded.\n          // This will then be skipped in the next step\n          return;\n        }\n      }),\n    )\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nexport function objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n","/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nexport function parseSampleRate(sampleRate: unknown): number | undefined {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    return undefined;\n  }\n\n  return rate;\n}\n","import { getAsyncContextStrategy } from '../asyncContext';\nimport { getMainCarrier } from '../carrier';\nimport { getCurrentScope } from '../currentScopes';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { SentrySpan } from '../tracing/sentrySpan';\nimport { SPAN_STATUS_OK, SPAN_STATUS_UNSET } from '../tracing/spanstatus';\nimport { getCapturedScopesOnSpan } from '../tracing/utils';\nimport type { TraceContext } from '../types-hoist/context';\nimport type { SpanLink, SpanLinkJSON } from '../types-hoist/link';\nimport type { Span, SpanAttributes, SpanJSON, SpanOrigin, SpanTimeInput } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { generateSpanId } from '../utils/propagationContext';\nimport { timestampInSeconds } from '../utils/time';\nimport { generateSentryTraceHeader } from '../utils/tracing';\nimport { consoleSandbox } from './debug-logger';\nimport { _getSpanForScope } from './spanOnScope';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\nlet hasShownSpanDropWarning = false;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nexport function spanToTransactionTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin, links } = spanToJSON(span);\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n    links,\n  };\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId, traceId: trace_id, isRemote } = span.spanContext();\n\n  // If the span is remote, we use a random/virtual span as span_id to the trace context,\n  // and the remote span as parent_span_id\n  const parent_span_id = isRemote ? spanId : spanToJSON(span).parent_span_id;\n  const scope = getCapturedScopesOnSpan(span).scope;\n\n  const span_id = isRemote ? scope?.getPropagationContext().propagationSpanId || generateSpanId() : spanId;\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n  };\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n *  Converts the span links array to a flattened version to be sent within an envelope.\n *\n *  If the links array is empty, it returns `undefined` so the empty value can be dropped before it's sent.\n */\nexport function convertSpanLinksForEnvelope(links?: SpanLink[]): SpanLinkJSON[] | undefined {\n  if (links && links.length > 0) {\n    return links.map(({ context: { spanId, traceId, traceFlags, ...restContext }, attributes }) => ({\n      span_id: spanId,\n      trace_id: traceId,\n      sampled: traceFlags === TRACE_FLAG_SAMPLED,\n      attributes,\n      ...restContext,\n    }));\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nexport function spanToJSON(span: Span): SpanJSON {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n  // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n  if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n    const { attributes, startTime, name, endTime, status, links } = span;\n\n    // In preparation for the next major of OpenTelemetry, we want to support\n    // looking up the parent span id according to the new API\n    // In OTel v1, the parent span id is accessed as `parentSpanId`\n    // In OTel v2, the parent span id is accessed as `spanId` on the `parentSpanContext`\n    const parentSpanId =\n      'parentSpanId' in span\n        ? span.parentSpanId\n        : 'parentSpanContext' in span\n          ? (span.parentSpanContext as { spanId?: string } | undefined)?.spanId\n          : undefined;\n\n    return {\n      span_id,\n      trace_id,\n      data: attributes,\n      description: name,\n      parent_span_id: parentSpanId,\n      start_timestamp: spanTimeInputToSeconds(startTime),\n      // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n      timestamp: spanTimeInputToSeconds(endTime) || undefined,\n      status: getStatusMessage(status),\n      op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      links: convertSpanLinksForEnvelope(links),\n    };\n  }\n\n  // Finally, at least we have `spanContext()`....\n  // This should not actually happen in reality, but we need to handle it for type safety.\n  return {\n    span_id,\n    trace_id,\n    start_timestamp: 0,\n    data: {},\n  };\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span: Span): span is OpenTelemetrySdkTraceBaseSpan {\n  const castSpan = span as Partial<OpenTelemetrySdkTraceBaseSpan>;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\nexport interface OpenTelemetrySdkTraceBaseSpan extends Span {\n  attributes: SpanAttributes;\n  startTime: SpanTimeInput;\n  name: string;\n  status: SpanStatus;\n  endTime: SpanTimeInput;\n  parentSpanId?: string;\n  links?: SpanLink[];\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span: Span): span is SentrySpan {\n  return typeof (span as SentrySpan).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nexport function getStatusMessage(status: SpanStatus | undefined): string | undefined {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\ntype SpanWithPotentialChildren = Span & {\n  [CHILD_SPANS_FIELD]?: Set<Span>;\n  [ROOT_SPAN_FIELD]?: Span;\n};\n\n/**\n * Adds an opaque child span reference to a span.\n */\nexport function addChildSpanToSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan as SpanWithPotentialChildren, ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nexport function removeChildSpanFromSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nexport function getSpanDescendants(span: SpanWithPotentialChildren): Span[] {\n  const resultSet = new Set<Span>();\n\n  function addSpanChildren(span: SpanWithPotentialChildren): void {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nexport function getRootSpan(span: SpanWithPotentialChildren): Span {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Logs a warning once if `beforeSendSpan` is used to drop spans.\n */\nexport function showSpanDropWarning(): void {\n  if (!hasShownSpanDropWarning) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Returning null from `beforeSendSpan` is disallowed. To drop certain spans, configure the respective integrations directly.',\n      );\n    });\n    hasShownSpanDropWarning = true;\n  }\n}\n\n/**\n * Updates the name of the given span and ensures that the span name is not\n * overwritten by the Sentry SDK.\n *\n * Use this function instead of `span.updateName()` if you want to make sure that\n * your name is kept. For some spans, for example root `http.server` spans the\n * Sentry SDK would otherwise overwrite the span name with a high-quality name\n * it infers when the span ends.\n *\n * Use this function in server code or when your span is started on the server\n * and on the client (browser). If you only update a span name on the client,\n * you can also use `span.updateName()` the SDK does not overwrite the name.\n *\n * @param span - The span to update the name of.\n * @param name - The name to set on the span.\n */\nexport function updateSpanName(span: Span, name: string): void {\n  span.updateName(name);\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n    [SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME]: name,\n  });\n}\n","import { getClient } from '../currentScopes';\nimport type { Options } from '../types-hoist/options';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if span recording is currently enabled.\n *\n * Spans are recorded when at least one of `tracesSampleRate` and `tracesSampler`\n * is defined in the SDK config. This function does not make any assumption about\n * sampling decisions, it only checks if the SDK is configured to record spans.\n *\n * Important: This function only determines if span recording is enabled. Trace\n * continuation and propagation is separately controlled and not covered by this function.\n * If this function returns `false`, traces can still be propagated (which is what\n * we refer to by \"Tracing without Performance\")\n * @see https://develop.sentry.dev/sdk/telemetry/traces/tracing-without-performance/\n *\n * @param maybeOptions An SDK options object to be passed to this function.\n * If this option is not provided, the function will use the current client's options.\n */\nexport function hasSpansEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const options = maybeOptions || getClient()?.getOptions();\n  return (\n    !!options &&\n    // Note: This check is `!= null`, meaning \"nullish\". `0` is not \"nullish\", `undefined` and `null` are. (This comment was brought to you by 15 minutes of questioning life)\n    (options.tracesSampleRate != null || !!options.tracesSampler)\n  );\n}\n\n/**\n * @see JSDoc of `hasSpansEnabled`\n * @deprecated Use `hasSpansEnabled` instead, which is a more accurately named version of this function.\n * This function will be removed in the next major version of the SDK.\n */\n// TODO(v10): Remove this export\nexport const hasTracingEnabled = hasSpansEnabled;\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { DsnComponents, DsnLike, DsnProtocol } from '../types-hoist/dsn';\nimport { consoleSandbox, debug } from './debug-logger';\n\n/** Regular expression used to extract org ID from a DSN host. */\nconst ORG_ID_REGEX = /^o(\\d+)\\./;\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      debug.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    debug.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    debug.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    debug.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Extract the org ID from a DSN host.\n *\n * @param host The host from a DSN\n * @returns The org ID if found, undefined otherwise\n */\nexport function extractOrgIdFromDsnHost(host: string): string | undefined {\n  const match = host.match(ORG_ID_REGEX);\n\n  return match?.[1];\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient } from '../currentScopes';\nimport type { Scope } from '../scope';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport type { Span } from '../types-hoist/span';\nimport { baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader } from '../utils/baggage';\nimport { extractOrgIdFromDsnHost } from '../utils/dsn';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { getRootSpan, spanIsSampled, spanToJSON } from '../utils/spanUtils';\nimport { getCapturedScopesOnSpan } from './utils';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\ntype SpanWithMaybeDsc = Span & {\n  [FROZEN_DSC_FIELD]?: Partial<DynamicSamplingContext> | undefined;\n};\n\n/**\n * Freeze the given DSC on the given span.\n */\nexport function freezeDscOnSpan(span: Span, dsc: Partial<DynamicSamplingContext>): void {\n  const spanWithMaybeDsc = span as SpanWithMaybeDsc;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(trace_id: string, client: Client): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key, host } = client.getDsn() || {};\n\n  let org_id: string | undefined;\n  if (options.orgId) {\n    org_id = String(options.orgId);\n  } else if (host) {\n    org_id = extractOrgIdFromDsnHost(host);\n  }\n\n  // Instead of conditionally adding non-undefined values, we add them and then remove them if needed\n  // otherwise, the order of baggage entries changes, which \"breaks\" a bunch of tests etc.\n  const dsc: DynamicSamplingContext = {\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n    org_id,\n  };\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Get the dynamic sampling context for the currently active scopes.\n */\nexport function getDynamicSamplingContextFromScope(client: Client, scope: Scope): Partial<DynamicSamplingContext> {\n  const propagationContext = scope.getPropagationContext();\n  return propagationContext.dsc || getDynamicSamplingContextFromClient(propagationContext.traceId, client);\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const rootSpan = getRootSpan(span);\n  const rootSpanJson = spanToJSON(rootSpan);\n  const rootSpanAttributes = rootSpanJson.data;\n  const traceState = rootSpan.spanContext().traceState;\n\n  // The span sample rate that was locally applied to the root span should also always be applied to the DSC, even if the DSC is frozen.\n  // This is so that the downstream traces/services can use parentSampleRate in their `tracesSampler` to make consistent sampling decisions across the entire trace.\n  const rootSpanSampleRate =\n    traceState?.get('sentry.sample_rate') ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE];\n\n  function applyLocalSampleRateToDsc(dsc: Partial<DynamicSamplingContext>): Partial<DynamicSamplingContext> {\n    if (typeof rootSpanSampleRate === 'number' || typeof rootSpanSampleRate === 'string') {\n      dsc.sample_rate = `${rootSpanSampleRate}`;\n    }\n    return dsc;\n  }\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan as SpanWithMaybeDsc)[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return applyLocalSampleRateToDsc(frozenDsc);\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceStateDsc = traceState?.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return applyLocalSampleRateToDsc(dscOnTraceState);\n  }\n\n  // Else, we generate it from the span\n  const dsc = getDynamicSamplingContextFromClient(span.spanContext().traceId, client);\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = rootSpanJson.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasSpansEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasSpansEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n    dsc.sample_rand =\n      // In OTEL we store the sample rand on the trace state because we cannot access scopes for NonRecordingSpans\n      // The Sentry OTEL SpanSampler takes care of writing the sample rand on the root span\n      traceState?.get('sentry.sample_rand') ??\n      // On all other platforms we can actually get the scopes from a root span (we use this as a fallback)\n      getCapturedScopesOnSpan(rootSpan).scope?.getPropagationContext().sampleRand.toString();\n  }\n\n  applyLocalSampleRateToDsc(dsc);\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nexport function spanToBaggageHeader(span: Span): string | undefined {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n","import type { Primitive } from '../types-hoist/misc';\nimport { isSyntheticEvent, isVueViewModel } from './is';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor?: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\ntype MemoFunc = [\n  // memoize\n  (obj: object) => boolean,\n  // unmemoize\n  (obj: object) => void,\n];\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normalized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    ['boolean', 'string'].includes(typeof value) ||\n    (typeof value === 'number' && Number.isFinite(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n      return `[${value}]`;\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype?.constructor ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder(): MemoFunc {\n  const inner = new WeakSet<object>();\n  function memoize(obj: object): boolean {\n    if (inner.has(obj)) {\n      return true;\n    }\n    inner.add(obj);\n    return false;\n  }\n\n  function unmemoize(obj: object): void {\n    inner.delete(obj);\n  }\n  return [memoize, unmemoize];\n}\n","import { getSentryCarrier } from '../carrier';\nimport type { Attachment } from '../types-hoist/attachment';\nimport type { DataCategory } from '../types-hoist/datacategory';\nimport type { DsnComponents } from '../types-hoist/dsn';\nimport type {\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  Envelope,\n  EnvelopeItemType,\n  EventEnvelopeHeaders,\n  SpanItem,\n} from '../types-hoist/envelope';\nimport type { Event } from '../types-hoist/event';\nimport type { SdkInfo } from '../types-hoist/sdkinfo';\nimport type { SdkMetadata } from '../types-hoist/sdkmetadata';\nimport type { SpanJSON } from '../types-hoist/span';\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input: string): Uint8Array {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.encodePolyfill ? carrier.encodePolyfill(input) : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input: Uint8Array): string {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.decodePolyfill ? carrier.decodePolyfill(input) : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.stringify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(env: string | Uint8Array): Envelope {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nexport function createSpanEnvelopeItem(spanJson: Partial<SpanJSON>): SpanItem {\n  const spanHeaders: SpanItem[0] = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(attachment: Attachment): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    {\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    },\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  raw_security: 'security',\n  log: 'log_item',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent?.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata?.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dynamicSamplingContext,\n    }),\n  };\n}\n","import type { Client } from './client';\nimport { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext';\nimport type { SentrySpan } from './tracing/sentrySpan';\nimport type { LegacyCSPReport } from './types-hoist/csp';\nimport type { DsnComponents } from './types-hoist/dsn';\nimport type {\n  DynamicSamplingContext,\n  EventEnvelope,\n  EventItem,\n  RawSecurityEnvelope,\n  RawSecurityItem,\n  SessionEnvelope,\n  SessionItem,\n  SpanEnvelope,\n  SpanItem,\n} from './types-hoist/envelope';\nimport type { Event } from './types-hoist/event';\nimport type { SdkInfo } from './types-hoist/sdkinfo';\nimport type { SdkMetadata } from './types-hoist/sdkmetadata';\nimport type { Session, SessionAggregates } from './types-hoist/session';\nimport { dsnToString } from './utils/dsn';\nimport {\n  createEnvelope,\n  createEventEnvelopeHeaders,\n  createSpanEnvelopeItem,\n  getSdkMetadataForEnvelopeHeader,\n} from './utils/envelope';\nimport { uuid4 } from './utils/misc';\nimport { showSpanDropWarning, spanToJSON } from './utils/spanUtils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(\n  session: Session | SessionAggregates,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): SessionEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem: SessionItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope<SessionEnvelope>(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nexport function createEventEnvelope(\n  event: Event,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): EventEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata?.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem: EventItem = [{ type: eventType }, event];\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nexport function createSpanEnvelope(spans: [SentrySpan, ...SentrySpan[]], client?: Client): SpanEnvelope {\n  function dscHasRequiredProps(dsc: Partial<DynamicSamplingContext>): dsc is DynamicSamplingContext {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client?.getDsn();\n  const tunnel = client?.getOptions().tunnel;\n\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client?.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span: SentrySpan) => {\n        const spanJson = spanToJSON(span);\n        const processedSpan = beforeSendSpan(spanJson);\n\n        if (!processedSpan) {\n          showSpanDropWarning();\n          return spanJson;\n        }\n\n        return processedSpan;\n      }\n    : spanToJSON;\n\n  const items: SpanItem[] = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n\n/**\n * Create an Envelope from a CSP report.\n */\nexport function createRawSecurityEnvelope(\n  report: LegacyCSPReport,\n  dsn: DsnComponents,\n  tunnel?: string,\n  release?: string,\n  environment?: string,\n): RawSecurityEnvelope {\n  const envelopeHeaders = {\n    event_id: uuid4(),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const eventItem: RawSecurityItem = [\n    { type: 'raw_security', sentry_release: release, sentry_environment: environment },\n    report,\n  ];\n\n  return createEnvelope<RawSecurityEnvelope>(envelopeHeaders, [eventItem]);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst STATE_PENDING = 0;\nconst STATE_RESOLVED = 1;\nconst STATE_REJECTED = 2;\n\ntype State = typeof STATE_PENDING | typeof STATE_RESOLVED | typeof STATE_REJECTED;\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\ntype Executor<T> = (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void;\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nexport class SyncPromise<T> implements PromiseLike<T> {\n  private _state: State;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(executor: Executor<T>) {\n    this._state = STATE_PENDING;\n    this._handlers = [];\n\n    this._runExecutor(executor);\n  }\n\n  /** @inheritdoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** @inheritdoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** @inheritdoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** Excute the resolve/reject handlers. */\n  private _executeHandlers(): void {\n    if (this._state === STATE_PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === STATE_RESOLVED) {\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === STATE_REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  }\n\n  /** Run the executor for the SyncPromise. */\n  private _runExecutor(executor: Executor<T>): void {\n    const setResult = (state: State, value?: T | PromiseLike<T> | any): void => {\n      if (this._state !== STATE_PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        void (value as PromiseLike<T>).then(resolve, reject);\n        return;\n      }\n\n      this._state = state;\n      this._value = value;\n\n      this._executeHandlers();\n    };\n\n    const resolve = (value: unknown): void => {\n      setResult(STATE_RESOLVED, value);\n    };\n\n    const reject = (reason: unknown): void => {\n      setResult(STATE_REJECTED, reason);\n    };\n\n    try {\n      executor(resolve, reject);\n    } catch (e) {\n      reject(e);\n    }\n  }\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport { debug } from './utils/debug-logger';\nimport { isThenable } from './utils/is';\nimport { SyncPromise } from './utils/syncpromise';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && debug.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import type { ScopeData } from '../scope';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport type { Breadcrumb } from '../types-hoist/breadcrumb';\nimport type { Event } from '../types-hoist/event';\nimport type { Span } from '../types-hoist/span';\nimport { merge } from './merge';\nimport { getRootSpan, spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n\n  data.sdkProcessingMetadata = merge(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  data[prop] = merge(data[prop], mergeVal, 1);\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  if (Object.keys(extra).length) {\n    event.extra = { ...extra, ...event.extra };\n  }\n\n  if (Object.keys(tags).length) {\n    event.tags = { ...tags, ...event.tags };\n  }\n\n  if (Object.keys(user).length) {\n    event.user = { ...user, ...event.user };\n  }\n\n  if (Object.keys(contexts).length) {\n    event.contexts = { ...contexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint\n    ? Array.isArray(event.fingerprint)\n      ? event.fingerprint\n      : [event.fingerprint]\n    : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (!event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","import type { DebugImage } from '../types-hoist/debugMeta';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { GLOBAL_OBJ } from './worldwide';\n\ntype StackString = string;\ntype CachedResult = [string, string];\n\nlet parsedStackResults: Record<StackString, CachedResult> | undefined;\nlet lastKeysCount: number | undefined;\nlet cachedFilenameDebugIds: Record<string, string> | undefined;\n\n/**\n * Returns a map of filenames to debug identifiers.\n */\nexport function getFilenameToDebugIdMap(stackParser: StackParser): Record<string, string> {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n  if (!debugIdMap) {\n    return {};\n  }\n\n  const debugIdKeys = Object.keys(debugIdMap);\n\n  // If the count of registered globals hasn't changed since the last call, we\n  // can just return the cached result.\n  if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n    return cachedFilenameDebugIds;\n  }\n\n  lastKeysCount = debugIdKeys.length;\n\n  // Build a map of filename -> debug_id.\n  cachedFilenameDebugIds = debugIdKeys.reduce<Record<string, string>>((acc, stackKey) => {\n    if (!parsedStackResults) {\n      parsedStackResults = {};\n    }\n\n    const result = parsedStackResults[stackKey];\n\n    if (result) {\n      acc[result[0]] = result[1];\n    } else {\n      const parsedStack = stackParser(stackKey);\n\n      for (let i = parsedStack.length - 1; i >= 0; i--) {\n        const stackFrame = parsedStack[i];\n        const filename = stackFrame?.filename;\n        const debugId = debugIdMap[stackKey];\n\n        if (filename && debugId) {\n          acc[filename] = debugId;\n          parsedStackResults[stackKey] = [filename, debugId];\n          break;\n        }\n      }\n    }\n\n    return acc;\n  }, {});\n\n  return cachedFilenameDebugIds;\n}\n\n/**\n * Returns a list of debug images for the given resources.\n */\nexport function getDebugImagesForResources(\n  stackParser: StackParser,\n  resource_paths: ReadonlyArray<string>,\n): DebugImage[] {\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  if (!filenameDebugIdMap) {\n    return [];\n  }\n\n  const images: DebugImage[] = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] as string,\n      });\n    }\n  }\n\n  return images;\n}\n","import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalScope } from '../currentScopes';\nimport { notifyEventProcessors } from '../eventProcessors';\nimport type { CaptureContext, ScopeContext } from '../scope';\nimport { Scope } from '../scope';\nimport type { Event, EventHint } from '../types-hoist/event';\nimport type { ClientOptions } from '../types-hoist/options';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { getFilenameToDebugIdMap } from './debug-ids';\nimport { addExceptionMechanism, uuid4 } from './misc';\nimport { normalize } from './normalize';\nimport { truncate } from './string';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n * Enhances event using the client configuration.\n * It takes care of all \"static\" values like environment, release and `dist`,\n * as well as truncating overly long values.\n *\n * Only exported for tests.\n *\n * @param event event instance to be enhanced\n */\nexport function applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  // empty strings do not make sense for environment, release, and dist\n  // so we handle them the same as if they were not provided\n  event.environment = event.environment || environment || DEFAULT_ENVIRONMENT;\n\n  if (!event.release && release) {\n    event.release = release;\n  }\n\n  if (!event.dist && dist) {\n    event.dist = dist;\n  }\n\n  const request = event.request;\n  if (request?.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.filename) {\n        frame.debug_id = filenameDebugIdMap[frame.filename];\n      }\n    });\n  });\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.debug_id) {\n        if (frame.abs_path) {\n          filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n        } else if (frame.filename) {\n          filenameDebugIdMap[frame.filename] = frame.debug_id;\n        }\n        delete frame.debug_id;\n      }\n    });\n  });\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts?.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  // event.contexts.flags (FeatureFlagContext) stores context for our feature\n  // flag integrations. It has a greater nesting depth than our other typed\n  // Contexts, so we re-normalize with a fixed depth of 3 here. We do not want\n  // to skip this in case of conflicting, user-provided context.\n  if (event.contexts?.flags && normalized.contexts) {\n    normalized.contexts.flags = normalize(event.contexts.flags, 3, maxBreadth);\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(hint: CaptureContext | EventHint): hint is Scope | ((scope: Scope) => Scope) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import { getClient, getCurrentScope, getIsolationScope, withIsolationScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { CaptureContext } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { CheckIn, FinishedCheckIn, MonitorConfig } from './types-hoist/checkin';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { Session, SessionContext } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { User } from './types-hoist/user';\nimport { debug } from './utils/debug-logger';\nimport { isThenable } from './utils/is';\nimport { uuid4 } from './utils/misc';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { timestampInSeconds } from './utils/time';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(exception: unknown, hint?: ExclusiveEventHintOrCaptureContext): string {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | SeverityLevel): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nexport function setContext(name: string, context: { [key: string]: unknown } | null): void {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nexport function lastEventId(): string | undefined {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param callback Callback to be monitored\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      return maybePromiseResult.then(\n        r => {\n          finishCheckIn('ok');\n          return r;\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      ) as T;\n    }\n    finishCheckIn('ok');\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nexport function isEnabled(): boolean {\n  const client = getClient();\n  return client?.getOptions().enabled !== false && !!client?.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession?.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const client = getClient();\n  const session = isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { ReportDialogOptions } from './report-dialog';\nimport type { DsnComponents, DsnLike } from './types-hoist/dsn';\nimport type { SdkInfo } from './types-hoist/sdkinfo';\nimport { dsnToString, makeDsn } from './utils/dsn';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  const params: Record<string, string> = {\n    sentry_version: SENTRY_API_VERSION,\n  };\n\n  if (dsn.publicKey) {\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    params.sentry_key = dsn.publicKey;\n  }\n\n  if (sdkInfo) {\n    params.sentry_client = `${sdkInfo.name}/${sdkInfo.version}`;\n  }\n\n  return new URLSearchParams(params).toString();\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(dsn: DsnComponents, tunnel?: string, sdkInfo?: SdkInfo): string {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(dsnLike: DsnLike, dialogOptions: ReportDialogOptions): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { Client } from './client';\nimport { getClient } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { Integration, IntegrationFn } from './types-hoist/integration';\nimport type { Options } from './types-hoist/options';\nimport { debug } from './utils/debug-logger';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\ntype IntegrationWithDefaultInstance = Integration & { isDefaultInstance?: true };\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach((currentInstance: IntegrationWithDefaultInstance) => {\n    const { name } = currentInstance;\n\n    const existingInstance: IntegrationWithDefaultInstance | undefined = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach((integration: IntegrationWithDefaultInstance) => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    const resolvedUserIntegrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(resolvedUserIntegrations) ? resolvedUserIntegrations : [resolvedUserIntegrations];\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  return filterDuplicates(integrations);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach((integration: Integration | undefined) => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration?.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && debug.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && debug.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && debug.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => Integration {\n  return fn;\n}\n","import type { ClientReport } from '../types-hoist/clientreport';\nimport type { ClientReportEnvelope, ClientReportItem } from '../types-hoist/envelope';\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type { Event } from '../types-hoist/event';\n\n/**\n * Get a list of possible event messages from a Sentry event.\n */\nexport function getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    const lastException = event.exception.values[event.exception.values.length - 1];\n    if (lastException?.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  } catch {\n    // ignore errors here\n  }\n\n  return possibleMessages;\n}\n","import { SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes';\nimport type { TransactionEvent } from '../types-hoist/event';\nimport type { SpanJSON } from '../types-hoist/span';\n\n/**\n * Converts a transaction event to a span JSON object.\n */\nexport function convertTransactionEventToSpanJson(event: TransactionEvent): SpanJSON {\n  const { trace_id, parent_span_id, span_id, status, origin, data, op } = event.contexts?.trace ?? {};\n\n  return {\n    data: data ?? {},\n    description: event.transaction,\n    op,\n    parent_span_id,\n    span_id: span_id ?? '',\n    start_timestamp: event.start_timestamp ?? 0,\n    status,\n    timestamp: event.timestamp,\n    trace_id: trace_id ?? '',\n    origin,\n    profile_id: data?.[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n    exclusive_time: data?.[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] as number | undefined,\n    measurements: event.measurements,\n    is_segment: true,\n  };\n}\n\n/**\n * Converts a span JSON object to a transaction event.\n */\nexport function convertSpanJsonToTransactionEvent(span: SpanJSON): TransactionEvent {\n  return {\n    type: 'transaction',\n    timestamp: span.timestamp,\n    start_timestamp: span.start_timestamp,\n    transaction: span.description,\n    contexts: {\n      trace: {\n        trace_id: span.trace_id,\n        span_id: span.span_id,\n        parent_span_id: span.parent_span_id,\n        op: span.op,\n        status: span.status,\n        origin: span.origin,\n        data: {\n          ...span.data,\n          ...(span.profile_id && { [SEMANTIC_ATTRIBUTE_PROFILE_ID]: span.profile_id }),\n          ...(span.exclusive_time && { [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: span.exclusive_time }),\n        },\n      },\n    },\n    measurements: span.measurements,\n  };\n}\n","/* eslint-disable max-lines */\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { getCurrentScope, getIsolationScope, getTraceContextFromScope, withScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations, setupIntegration, setupIntegrations } from './integration';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport {\n  getDynamicSamplingContextFromScope,\n  getDynamicSamplingContextFromSpan,\n} from './tracing/dynamicSamplingContext';\nimport type { Breadcrumb, BreadcrumbHint, FetchBreadcrumbHint, XhrBreadcrumbHint } from './types-hoist/breadcrumb';\nimport type { CheckIn, MonitorConfig } from './types-hoist/checkin';\nimport type { EventDropReason, Outcome } from './types-hoist/clientreport';\nimport type { TraceContext } from './types-hoist/context';\nimport type { DataCategory } from './types-hoist/datacategory';\nimport type { DsnComponents } from './types-hoist/dsn';\nimport type { DynamicSamplingContext, Envelope } from './types-hoist/envelope';\nimport type { ErrorEvent, Event, EventHint, TransactionEvent } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { FeedbackEvent } from './types-hoist/feedback';\nimport type { Integration } from './types-hoist/integration';\nimport type { Log } from './types-hoist/log';\nimport type { ClientOptions } from './types-hoist/options';\nimport type { ParameterizedString } from './types-hoist/parameterize';\nimport type { SdkMetadata } from './types-hoist/sdkmetadata';\nimport type { Session, SessionAggregates } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { Span, SpanAttributes, SpanContextData, SpanJSON } from './types-hoist/span';\nimport type { StartSpanOptions } from './types-hoist/startSpanOptions';\nimport type { Transport, TransportMakeRequestResponse } from './types-hoist/transport';\nimport { createClientReportEnvelope } from './utils/clientreport';\nimport { debug } from './utils/debug-logger';\nimport { dsnToString, makeDsn } from './utils/dsn';\nimport { addItemToEnvelope, createAttachmentEnvelopeItem } from './utils/envelope';\nimport { getPossibleEventMessages } from './utils/eventUtils';\nimport { isParameterizedString, isPlainObject, isPrimitive, isThenable } from './utils/is';\nimport { merge } from './utils/merge';\nimport { checkOrSetAlreadyCaught, uuid4 } from './utils/misc';\nimport { parseSampleRate } from './utils/parseSampleRate';\nimport { prepareEvent } from './utils/prepareEvent';\nimport { getActiveSpan, showSpanDropWarning, spanToTraceContext } from './utils/spanUtils';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './utils/syncpromise';\nimport { convertSpanJsonToTransactionEvent, convertTransactionEventToSpanJson } from './utils/transactionEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\nconst MISSING_RELEASE_FOR_SESSION_ERROR = 'Discarded session because of missing or non-string release';\n\nconst INTERNAL_ERROR_SYMBOL = Symbol.for('SentryInternalError');\nconst DO_NOT_SEND_EVENT_SYMBOL = Symbol.for('SentryDoNotSendEventError');\n\ninterface InternalError {\n  message: string;\n  [INTERNAL_ERROR_SYMBOL]: true;\n}\n\ninterface DoNotSendEventError {\n  message: string;\n  [DO_NOT_SEND_EVENT_SYMBOL]: true;\n}\n\nfunction _makeInternalError(message: string): InternalError {\n  return {\n    message,\n    [INTERNAL_ERROR_SYMBOL]: true,\n  };\n}\n\nfunction _makeDoNotSendEventError(message: string): DoNotSendEventError {\n  return {\n    message,\n    [DO_NOT_SEND_EVENT_SYMBOL]: true,\n  };\n}\n\nfunction _isInternalError(error: unknown): error is InternalError {\n  return !!error && typeof error === 'object' && INTERNAL_ERROR_SYMBOL in error;\n}\n\nfunction _isDoNotSendEventError(error: unknown): error is DoNotSendEventError {\n  return !!error && typeof error === 'object' && DO_NOT_SEND_EVENT_SYMBOL in error;\n}\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link Client._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends Client<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class Client<O extends ClientOptions = ClientOptions> {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && debug.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * Captures an exception event and sends it to Sentry.\n   *\n   * Unlike `captureException` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureException(exception: unknown, hint?: EventHint, scope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && debug.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a message event and sends it to Sentry.\n   *\n   * Unlike `captureMessage` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    level?: SeverityLevel,\n    hint?: EventHint,\n    currentScope?: Scope,\n  ): string {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a manually created event and sends it to Sentry.\n   *\n   * Unlike `captureEvent` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureEvent(event: Event, hint?: EventHint, currentScope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint?.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && debug.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    this._process(\n      this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope, capturedSpanIsolationScope),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a session.\n   */\n  public captureSession(session: Session): void {\n    this.sendSession(session);\n    // After sending, we set init false to indicate it's not the first occurrence\n    updateSession(session, { init: false });\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry. This method is not available on all clients.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   * @param scope An optional scope containing event metadata.\n   * @returns A string representing the id of the check in.\n   */\n  public captureCheckIn?(checkIn: CheckIn, monitorConfig?: MonitorConfig, scope?: Scope): string;\n\n  /**\n   * Get the current Dsn.\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * Get the current options.\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * Get the SDK metadata.\n   * @see SdkMetadata\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * Returns the transport that is used by the client.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * Wait for all events to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the client should wait for events to be flushed. Omitting this parameter will\n   *   cause the client to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * Flush the event queue and set the client to `enabled = false`. See {@link Client.flush}.\n   *\n   * @param {number} timeout Maximum time in ms the client should wait before shutting down. Omitting this parameter will cause\n   *   the client to wait until all events are sent before disabling itself.\n   * @returns {Promise<boolean>} A promise which resolves to `true` if the flush completes successfully before the timeout, or `false` if\n   * it doesn't.\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /**\n   * Get all installed event processors.\n   */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /**\n   * Adds an event processor that applies to any event processed by this client.\n   */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Initialize this client.\n   * Call this after the client was set on a scope.\n   */\n  public init(): void {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns {Integration|undefined} The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Add an integration to the client.\n   * This can be used to e.g. lazy load integrations.\n   * In most cases, this should not be necessary,\n   * and you're better off just passing the integrations via `integrations: []` at initialization time.\n   * However, if you find the need to conditionally load & add an integration, you can use `addIntegration` to do so.\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * Send a fully prepared event to Sentry.\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * Send a session or session aggregrates to Sentry.\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    // Backfill release and environment on session\n    const { release: clientReleaseOption, environment: clientEnvironmentOption = DEFAULT_ENVIRONMENT } = this._options;\n    if ('aggregates' in session) {\n      const sessionAttrs = session.attrs || {};\n      if (!sessionAttrs.release && !clientReleaseOption) {\n        DEBUG_BUILD && debug.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      sessionAttrs.release = sessionAttrs.release || clientReleaseOption;\n      sessionAttrs.environment = sessionAttrs.environment || clientEnvironmentOption;\n      session.attrs = sessionAttrs;\n    } else {\n      if (!session.release && !clientReleaseOption) {\n        DEBUG_BUILD && debug.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      session.release = session.release || clientReleaseOption;\n      session.environment = session.environment || clientEnvironmentOption;\n    }\n\n    this.emit('beforeSendSession', session);\n\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * Record on the client that an event got dropped (ie, an event that will not be sent to Sentry).\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, count: number = 1): void {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && debug.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /* eslint-disable @typescript-eslint/unified-signatures */\n  /**\n   * Register a callback for whenever a span is started.\n   * Receives the span as argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'spanStart', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback before span sampling runs. Receives a `samplingDecision` object argument with a `decision`\n   * property that can be used to make a sampling decision that will be enforced, before any span sampling runs.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeSampling',\n    callback: (\n      samplingData: {\n        spanAttributes: SpanAttributes;\n        spanName: string;\n        parentSampled?: boolean;\n        parentSampleRate?: number;\n        parentContext?: SpanContextData;\n      },\n      samplingDecision: { decision: boolean },\n    ) => void,\n  ): void;\n\n  /**\n   * Register a callback for after a span is ended.\n   * NOTE: The span cannot be mutated anymore in this callback.\n   * Receives the span as argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'spanEnd', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback for when an idle span is allowed to auto-finish.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'idleSpanEnableAutoFinish', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback for transaction start and finish.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): () => void;\n\n  /**\n   * Register a callback that runs when stack frame metadata should be applied to an event.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'applyFrameMetadata', callback: (event: Event) => void): () => void;\n\n  /**\n   * Register a callback for before sending an event.\n   * This is called right before an event is sent and should not be used to mutate the event.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for before sending a session or session aggregrates..\n   * Receives the session/aggregate as second argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeSendSession', callback: (session: Session | SessionAggregates) => void): () => void;\n\n  /**\n   * Register a callback for preprocessing an event,\n   * before it is passed to (global) event processors.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for postprocessing an event,\n   * after it was passed to (global) event processors, before it is being sent.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'postprocessEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for when an event has been sent.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse) => void,\n  ): () => void;\n\n  /**\n   * Register a callback before a breadcrumb is added.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): () => void;\n\n  /**\n   * Register a callback when a DSC (Dynamic Sampling Context) is created.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext, rootSpan?: Span) => void): () => void;\n\n  /**\n   * Register a callback when a Feedback event has been prepared.\n   * This should be used to mutate the event. The options argument can hint\n   * about what kind of mutation it expects.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay?: boolean }) => void,\n  ): () => void;\n\n  /**\n   * Register a callback when the feedback widget is opened in a user's browser\n   */\n  public on(hook: 'openFeedbackWidget', callback: () => void): () => void;\n\n  /**\n   * A hook for the browser tracing integrations to trigger a span start for a page load.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'startPageLoadSpan',\n    callback: (\n      options: StartSpanOptions,\n      traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n    ) => void,\n  ): () => void;\n\n  /**\n   * A hook for the browser tracing integrations to trigger after the pageload span was started.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'afterStartPageLoadSpan', callback: (span: Span) => void): () => void;\n\n  /**\n   * A hook for triggering right before a navigation span is started.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeStartNavigationSpan',\n    callback: (options: StartSpanOptions, navigationOptions?: { isRedirect?: boolean }) => void,\n  ): () => void;\n\n  /**\n   * A hook for browser tracing integrations to trigger a span for a navigation.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'startNavigationSpan',\n    callback: (options: StartSpanOptions, navigationOptions?: { isRedirect?: boolean }) => void,\n  ): () => void;\n\n  /**\n   * A hook for GraphQL client integration to enhance a span with request data.\n   * @returns A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeOutgoingRequestSpan',\n    callback: (span: Span, hint: XhrBreadcrumbHint | FetchBreadcrumbHint) => void,\n  ): () => void;\n\n  /**\n   * A hook for GraphQL client integration to enhance a breadcrumb with request data.\n   * @returns A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeOutgoingRequestBreadcrumb',\n    callback: (breadcrumb: Breadcrumb, hint: XhrBreadcrumbHint | FetchBreadcrumbHint) => void,\n  ): () => void;\n\n  /**\n   * A hook that is called when the client is flushing\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'flush', callback: () => void): () => void;\n\n  /**\n   * A hook that is called when the client is closing\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'close', callback: () => void): () => void;\n\n  /**\n   * A hook that is called before a log is captured. This hooks runs before `beforeSendLog` is fired.\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeCaptureLog', callback: (log: Log) => void): () => void;\n\n  /**\n   * A hook that is called after a log is captured\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'afterCaptureLog', callback: (log: Log) => void): () => void;\n\n  /**\n   * A hook that is called when the client is flushing logs\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'flushLogs', callback: () => void): () => void;\n\n  /**\n   * Register a hook on this client.\n   */\n  public on(hook: string, callback: unknown): () => void {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** Fire a hook whenever a span starts. */\n  public emit(hook: 'spanStart', span: Span): void;\n\n  /** A hook that is called every time before a span is sampled. */\n  public emit(\n    hook: 'beforeSampling',\n    samplingData: {\n      spanAttributes: SpanAttributes;\n      spanName: string;\n      parentSampled?: boolean;\n      parentSampleRate?: number;\n      parentContext?: SpanContextData;\n    },\n    samplingDecision: { decision: boolean },\n  ): void;\n\n  /** Fire a hook whenever a span ends. */\n  public emit(hook: 'spanEnd', span: Span): void;\n\n  /**\n   * Fire a hook indicating that an idle span is allowed to auto finish.\n   */\n  public emit(hook: 'idleSpanEnableAutoFinish', span: Span): void;\n\n  /*\n   * Fire a hook event for envelope creation and sending. Expects to be given an envelope as the\n   * second argument.\n   */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /*\n   * Fire a hook indicating that stack frame metadata should be applied to the event passed to the hook.\n   */\n  public emit(hook: 'applyFrameMetadata', event: Event): void;\n\n  /**\n   * Fire a hook event before sending an event.\n   * This is called right before an event is sent and should not be used to mutate the event.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /**\n   * Fire a hook event before sending a session/aggregates.\n   * Expects to be given the prepared session/aggregates as second argument.\n   */\n  public emit(hook: 'beforeSendSession', session: Session | SessionAggregates): void;\n\n  /**\n   * Fire a hook event to process events before they are passed to (global) event processors.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /**\n   * Fire a hook event to process a user on an event before it is sent to Sentry, after all other processors have run.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'postprocessEvent', event: Event, hint?: EventHint): void;\n\n  /*\n   * Fire a hook event after sending an event. Expects to be given an Event as the\n   * second argument.\n   */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse): void;\n\n  /**\n   * Fire a hook for when a breadcrumb is added. Expects the breadcrumb as second argument.\n   */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /**\n   * Fire a hook for when a DSC (Dynamic Sampling Context) is created. Expects the DSC as second argument.\n   */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext, rootSpan?: Span): void;\n\n  /**\n   * Fire a hook event for after preparing a feedback event. Events to be given\n   * a feedback event as the second argument, and an optional options object as\n   * third argument.\n   */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay?: boolean }): void;\n\n  /**\n   * Fire a hook event for when the feedback widget is opened in a user's browser\n   */\n  public emit(hook: 'openFeedbackWidget'): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger a span start for a page load.\n   */\n  public emit(\n    hook: 'startPageLoadSpan',\n    options: StartSpanOptions,\n    traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n  ): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger aafter the pageload span was started.\n   */\n  public emit(hook: 'afterStartPageLoadSpan', span: Span): void;\n\n  /**\n   * Emit a hook event for triggering right before a navigation span is started.\n   */\n  public emit(\n    hook: 'beforeStartNavigationSpan',\n    options: StartSpanOptions,\n    navigationOptions?: { isRedirect?: boolean },\n  ): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger a span for a navigation.\n   */\n  public emit(\n    hook: 'startNavigationSpan',\n    options: StartSpanOptions,\n    navigationOptions?: { isRedirect?: boolean },\n  ): void;\n\n  /**\n   * Emit a hook event for GraphQL client integration to enhance a span with request data.\n   */\n  public emit(hook: 'beforeOutgoingRequestSpan', span: Span, hint: XhrBreadcrumbHint | FetchBreadcrumbHint): void;\n\n  /**\n   * Emit a hook event for GraphQL client integration to enhance a breadcrumb with request data.\n   */\n  public emit(\n    hook: 'beforeOutgoingRequestBreadcrumb',\n    breadcrumb: Breadcrumb,\n    hint: XhrBreadcrumbHint | FetchBreadcrumbHint,\n  ): void;\n\n  /**\n   * Emit a hook event for client flush\n   */\n  public emit(hook: 'flush'): void;\n\n  /**\n   * Emit a hook event for client close\n   */\n  public emit(hook: 'close'): void;\n\n  /**\n   * Emit a hook event for client before capturing a log. This hooks runs before `beforeSendLog` is fired.\n   */\n  public emit(hook: 'beforeCaptureLog', log: Log): void;\n\n  /**\n   * Emit a hook event for client after capturing a log.\n   */\n  public emit(hook: 'afterCaptureLog', log: Log): void;\n\n  /**\n   * Emit a hook event for client flush logs\n   */\n  public emit(hook: 'flushLogs'): void;\n\n  /**\n   * Emit a hook that was previously registered via `on()`.\n   */\n  public emit(hook: string, ...rest: unknown[]): void {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * Send an envelope to Sentry.\n   */\n  public sendEnvelope(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && debug.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && debug.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = event.level === 'fatal';\n    let errored = false;\n    const exceptions = event.exception?.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism?.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations?.length) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      this.emit('postprocessEvent', evt, hint);\n\n      evt.contexts = {\n        trace: getTraceContextFromScope(currentScope),\n        ...evt.contexts,\n      };\n\n      const dynamicSamplingContext = getDynamicSamplingContextFromScope(this, currentScope);\n\n      evt.sdkProcessingMetadata = {\n        dynamicSamplingContext,\n        ...evt.sdkProcessingMetadata,\n      };\n\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(\n    event: Event,\n    hint: EventHint = {},\n    currentScope = getCurrentScope(),\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<string | undefined> {\n    if (DEBUG_BUILD && isErrorEvent(event)) {\n      debug.log(`Captured error event \\`${getPossibleEventMessages(event)[0] || '<unknown>'}\\``);\n    }\n\n    return this._processEvent(event, hint, currentScope, isolationScope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          if (_isDoNotSendEventError(reason)) {\n            debug.log(reason.message);\n          } else if (_isInternalError(reason)) {\n            debug.warn(reason.message);\n          } else {\n            debug.warn(reason);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        _makeDoNotSendEventError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    const dataCategory = (eventType === 'replay_event' ? 'replay' : eventType) satisfies DataCategory;\n\n    return this._prepareEvent(event, hint, currentScope, isolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory);\n          throw _makeDoNotSendEventError('An event processor returned `null`, will not send event.');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw _makeDoNotSendEventError(`${beforeSendLabel} returned \\`null\\`, will not send event.`);\n        }\n\n        const session = currentScope.getSession() || isolationScope.getSession();\n        if (isError && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore = processedEvent.sdkProcessingMetadata?.spanCountBeforeProcessing || 0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (_isDoNotSendEventError(reason) || _isInternalError(reason)) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw _makeInternalError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  protected _flushOutcomes(): void {\n    DEBUG_BUILD && debug.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && debug.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && debug.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && debug.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n   */\n  public abstract eventFromException(_exception: unknown, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * Creates an {@link Event} from primitive inputs to `captureMessage`.\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    _level?: SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * @deprecated Use `Client` instead. This alias may be removed in a future major version.\n */\n// TODO(v10): Remove\nexport type BaseClient = Client;\n\n/**\n * @deprecated Use `Client` instead. This alias may be removed in a future major version.\n */\n// TODO(v10): Remove\nexport const BaseClient = Client;\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw _makeInternalError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw _makeInternalError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw _makeInternalError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client: Client,\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n  let processedEvent = event;\n\n  if (isErrorEvent(processedEvent) && beforeSend) {\n    return beforeSend(processedEvent, hint);\n  }\n\n  if (isTransactionEvent(processedEvent)) {\n    if (beforeSendSpan) {\n      // process root span\n      const processedRootSpanJson = beforeSendSpan(convertTransactionEventToSpanJson(processedEvent));\n      if (!processedRootSpanJson) {\n        showSpanDropWarning();\n      } else {\n        // update event with processed root span values\n        processedEvent = merge(event, convertSpanJsonToTransactionEvent(processedRootSpanJson));\n      }\n\n      // process child spans\n      if (processedEvent.spans) {\n        const processedSpans: SpanJSON[] = [];\n        for (const span of processedEvent.spans) {\n          const processedSpan = beforeSendSpan(span);\n          if (!processedSpan) {\n            showSpanDropWarning();\n            processedSpans.push(span);\n          } else {\n            processedSpans.push(processedSpan);\n          }\n        }\n        processedEvent.spans = processedSpans;\n      }\n    }\n\n    if (beforeSendTransaction) {\n      if (processedEvent.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = processedEvent.spans.length;\n        processedEvent.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(processedEvent as TransactionEvent, hint);\n    }\n  }\n\n  return processedEvent;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** Extract trace information from scope */\nexport function _getTraceInfoFromScope(\n  client: Client,\n  scope: Scope | undefined,\n): [dynamicSamplingContext: Partial<DynamicSamplingContext> | undefined, traceContext: TraceContext | undefined] {\n  if (!scope) {\n    return [undefined, undefined];\n  }\n\n  return withScope(scope, () => {\n    const span = getActiveSpan();\n    const traceContext = span ? spanToTraceContext(span) : getTraceContextFromScope(scope);\n    const dynamicSamplingContext = span\n      ? getDynamicSamplingContextFromSpan(span)\n      : getDynamicSamplingContextFromScope(client, scope);\n    return [dynamicSamplingContext, traceContext];\n  });\n}\n","import type { DsnComponents } from '../types-hoist/dsn';\nimport type { LogContainerItem, LogEnvelope } from '../types-hoist/envelope';\nimport type { SerializedLog } from '../types-hoist/log';\nimport type { SdkMetadata } from '../types-hoist/sdkmetadata';\nimport { dsnToString } from '../utils/dsn';\nimport { createEnvelope } from '../utils/envelope';\n\n/**\n * Creates a log container envelope item for a list of logs.\n *\n * @param items - The logs to include in the envelope.\n * @returns The created log container envelope item.\n */\nexport function createLogContainerEnvelopeItem(items: Array<SerializedLog>): LogContainerItem {\n  return [\n    {\n      type: 'log',\n      item_count: items.length,\n      content_type: 'application/vnd.sentry.items.log+json',\n    },\n    {\n      items,\n    },\n  ];\n}\n\n/**\n * Creates an envelope for a list of logs.\n *\n * Logs from multiple traces can be included in the same envelope.\n *\n * @param logs - The logs to include in the envelope.\n * @param metadata - The metadata to include in the envelope.\n * @param tunnel - The tunnel to include in the envelope.\n * @param dsn - The DSN to include in the envelope.\n * @returns The created envelope.\n */\nexport function createLogEnvelope(\n  logs: Array<SerializedLog>,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n  dsn?: DsnComponents,\n): LogEnvelope {\n  const headers: LogEnvelope[0] = {};\n\n  if (metadata?.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  return createEnvelope<LogEnvelope>(headers, [createLogContainerEnvelopeItem(logs)]);\n}\n","import { getGlobalSingleton } from '../carrier';\nimport type { Client } from '../client';\nimport { _getTraceInfoFromScope } from '../client';\nimport { getClient, getCurrentScope, getGlobalScope, getIsolationScope } from '../currentScopes';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Scope, ScopeData } from '../scope';\nimport type { Log, SerializedLog, SerializedLogAttributeValue } from '../types-hoist/log';\nimport { mergeScopeData } from '../utils/applyScopeDataToEvent';\nimport { consoleSandbox, debug } from '../utils/debug-logger';\nimport { isParameterizedString } from '../utils/is';\nimport { _getSpanForScope } from '../utils/spanOnScope';\nimport { timestampInSeconds } from '../utils/time';\nimport { SEVERITY_TEXT_TO_SEVERITY_NUMBER } from './constants';\nimport { createLogEnvelope } from './envelope';\n\nconst MAX_LOG_BUFFER_SIZE = 100;\n\n/**\n * Converts a log attribute to a serialized log attribute.\n *\n * @param key - The key of the log attribute.\n * @param value - The value of the log attribute.\n * @returns The serialized log attribute.\n */\nexport function logAttributeToSerializedLogAttribute(value: unknown): SerializedLogAttributeValue {\n  switch (typeof value) {\n    case 'number':\n      if (Number.isInteger(value)) {\n        return {\n          value,\n          type: 'integer',\n        };\n      }\n      return {\n        value,\n        type: 'double',\n      };\n    case 'boolean':\n      return {\n        value,\n        type: 'boolean',\n      };\n    case 'string':\n      return {\n        value,\n        type: 'string',\n      };\n    default: {\n      let stringValue = '';\n      try {\n        stringValue = JSON.stringify(value) ?? '';\n      } catch {\n        // Do nothing\n      }\n      return {\n        value: stringValue,\n        type: 'string',\n      };\n    }\n  }\n}\n\n/**\n * Sets a log attribute if the value exists and the attribute key is not already present.\n *\n * @param logAttributes - The log attributes object to modify.\n * @param key - The attribute key to set.\n * @param value - The value to set (only sets if truthy and key not present).\n * @param setEvenIfPresent - Whether to set the attribute if it is present. Defaults to true.\n */\nfunction setLogAttribute(\n  logAttributes: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  setEvenIfPresent = true,\n): void {\n  if (value && (!logAttributes[key] || setEvenIfPresent)) {\n    logAttributes[key] = value;\n  }\n}\n\n/**\n * Captures a serialized log event and adds it to the log buffer for the given client.\n *\n * @param client - A client. Uses the current client if not provided.\n * @param serializedLog - The serialized log event to capture.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_captureSerializedLog(client: Client, serializedLog: SerializedLog): void {\n  const bufferMap = _getBufferMap();\n\n  const logBuffer = _INTERNAL_getLogBuffer(client);\n  if (logBuffer === undefined) {\n    bufferMap.set(client, [serializedLog]);\n  } else {\n    bufferMap.set(client, [...logBuffer, serializedLog]);\n    if (logBuffer.length >= MAX_LOG_BUFFER_SIZE) {\n      _INTERNAL_flushLogsBuffer(client, logBuffer);\n    }\n  }\n}\n\n/**\n * Captures a log event and sends it to Sentry.\n *\n * @param log - The log event to capture.\n * @param scope - A scope. Uses the current scope if not provided.\n * @param client - A client. Uses the current client if not provided.\n * @param captureSerializedLog - A function to capture the serialized log.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_captureLog(\n  beforeLog: Log,\n  client: Client | undefined = getClient(),\n  currentScope = getCurrentScope(),\n  captureSerializedLog: (client: Client, log: SerializedLog) => void = _INTERNAL_captureSerializedLog,\n): void {\n  if (!client) {\n    DEBUG_BUILD && debug.warn('No client available to capture log.');\n    return;\n  }\n\n  const { release, environment, enableLogs, beforeSendLog, _experiments } = client.getOptions();\n  // eslint-disable-next-line deprecation/deprecation\n  const shouldEnableLogs = enableLogs ?? _experiments?.enableLogs;\n  if (!shouldEnableLogs) {\n    DEBUG_BUILD && debug.warn('logging option not enabled, log will not be captured.');\n    return;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  const actualBeforeSendLog = beforeSendLog ?? _experiments?.beforeSendLog;\n\n  const [, traceContext] = _getTraceInfoFromScope(client, currentScope);\n\n  const processedLogAttributes = {\n    ...beforeLog.attributes,\n  };\n\n  const {\n    user: { id, email, username },\n  } = getMergedScopeData(currentScope);\n  setLogAttribute(processedLogAttributes, 'user.id', id, false);\n  setLogAttribute(processedLogAttributes, 'user.email', email, false);\n  setLogAttribute(processedLogAttributes, 'user.name', username, false);\n\n  setLogAttribute(processedLogAttributes, 'sentry.release', release);\n  setLogAttribute(processedLogAttributes, 'sentry.environment', environment);\n\n  const { name, version } = client.getSdkMetadata()?.sdk ?? {};\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.name', name);\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.version', version);\n\n  const beforeLogMessage = beforeLog.message;\n  if (isParameterizedString(beforeLogMessage)) {\n    const { __sentry_template_string__, __sentry_template_values__ = [] } = beforeLogMessage;\n    processedLogAttributes['sentry.message.template'] = __sentry_template_string__;\n    __sentry_template_values__.forEach((param, index) => {\n      processedLogAttributes[`sentry.message.parameter.${index}`] = param;\n    });\n  }\n\n  const span = _getSpanForScope(currentScope);\n  // Add the parent span ID to the log attributes for trace context\n  setLogAttribute(processedLogAttributes, 'sentry.trace.parent_span_id', span?.spanContext().spanId);\n\n  const processedLog = { ...beforeLog, attributes: processedLogAttributes };\n\n  client.emit('beforeCaptureLog', processedLog);\n\n  // We need to wrap this in `consoleSandbox` to avoid recursive calls to `beforeSendLog`\n  const log = actualBeforeSendLog ? consoleSandbox(() => actualBeforeSendLog(processedLog)) : processedLog;\n  if (!log) {\n    client.recordDroppedEvent('before_send', 'log_item', 1);\n    DEBUG_BUILD && debug.warn('beforeSendLog returned null, log will not be captured.');\n    return;\n  }\n\n  const { level, message, attributes = {}, severityNumber } = log;\n\n  const serializedLog: SerializedLog = {\n    timestamp: timestampInSeconds(),\n    level,\n    body: message,\n    trace_id: traceContext?.trace_id,\n    severity_number: severityNumber ?? SEVERITY_TEXT_TO_SEVERITY_NUMBER[level],\n    attributes: Object.keys(attributes).reduce(\n      (acc, key) => {\n        acc[key] = logAttributeToSerializedLogAttribute(attributes[key]);\n        return acc;\n      },\n      {} as Record<string, SerializedLogAttributeValue>,\n    ),\n  };\n\n  captureSerializedLog(client, serializedLog);\n\n  client.emit('afterCaptureLog', log);\n}\n\n/**\n * Flushes the logs buffer to Sentry.\n *\n * @param client - A client.\n * @param maybeLogBuffer - A log buffer. Uses the log buffer for the given client if not provided.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_flushLogsBuffer(client: Client, maybeLogBuffer?: Array<SerializedLog>): void {\n  const logBuffer = maybeLogBuffer ?? _INTERNAL_getLogBuffer(client) ?? [];\n  if (logBuffer.length === 0) {\n    return;\n  }\n\n  const clientOptions = client.getOptions();\n  const envelope = createLogEnvelope(logBuffer, clientOptions._metadata, clientOptions.tunnel, client.getDsn());\n\n  // Clear the log buffer after envelopes have been constructed.\n  _getBufferMap().set(client, []);\n\n  client.emit('flushLogs');\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\n/**\n * Returns the log buffer for a given client.\n *\n * Exported for testing purposes.\n *\n * @param client - The client to get the log buffer for.\n * @returns The log buffer for the given client.\n */\nexport function _INTERNAL_getLogBuffer(client: Client): Array<SerializedLog> | undefined {\n  return _getBufferMap().get(client);\n}\n\n/**\n * Get the scope data for the current scope after merging with the\n * global scope and isolation scope.\n *\n * @param currentScope - The current scope.\n * @returns The scope data.\n */\nfunction getMergedScopeData(currentScope: Scope): ScopeData {\n  const scopeData = getGlobalScope().getScopeData();\n  mergeScopeData(scopeData, getIsolationScope().getScopeData());\n  mergeScopeData(scopeData, currentScope.getScopeData());\n  return scopeData;\n}\n\nfunction _getBufferMap(): WeakMap<Client, Array<SerializedLog>> {\n  // The reference to the Client <> LogBuffer map is stored on the carrier to ensure it's always the same\n  return getGlobalSingleton('clientToLogBufferMap', () => new WeakMap<Client, Array<SerializedLog>>());\n}\n","import type { Client } from './client';\nimport { getCurrentScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ClientOptions } from './types-hoist/options';\nimport { consoleSandbox, debug } from './utils/debug-logger';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): Client {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      debug.enable();\n    } else {\n      // use `console.warn` rather than `debug.warn` since by non-debug bundles have all `debug.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n  return client;\n}\n\n/**\n * Make the given client the current client.\n */\nexport function setCurrentClient(client: Client): void {\n  getCurrentScope().setClient(client);\n}\n","import { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\nexport const SENTRY_BUFFER_FULL_ERROR = Symbol.for('SentryBufferFullError');\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T | void> {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(SENTRY_BUFFER_FULL_ERROR);\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import type { DataCategory } from '../types-hoist/datacategory';\nimport type { TransportMakeRequestResponse } from '../types-hoist/transport';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers?.['x-sentry-rate-limits'];\n  const retryAfterHeader = headers?.['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) as [string, ...string[]];\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { EventDropReason } from '../types-hoist/clientreport';\nimport type { Envelope, EnvelopeItem } from '../types-hoist/envelope';\nimport type {\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '../types-hoist/transport';\nimport { debug } from '../utils/debug-logger';\nimport {\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  serializeEnvelope,\n} from '../utils/envelope';\nimport { type PromiseBuffer, makePromiseBuffer, SENTRY_BUFFER_FULL_ERROR } from '../utils/promisebuffer';\nimport { type RateLimits, isRateLimited, updateRateLimits } from '../utils/ratelimit';\nimport { resolvedSyncPromise } from '../utils/syncpromise';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as (typeof envelope)[1]);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    const requestTask = (): PromiseLike<TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && debug.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          DEBUG_BUILD && debug.error('Encountered error running transport request:', error);\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error === SENTRY_BUFFER_FULL_ERROR) {\n          DEBUG_BUILD && debug.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n","import type { Session, SessionAggregates } from '../types-hoist/session';\nimport type { User } from '../types-hoist/user';\n\n// By default, we want to infer the IP address, unless this is explicitly set to `null`\n// We do this after all other processing is done\n// If `ip_address` is explicitly set to `null` or a value, we leave it as is\n\n/**\n * @internal\n */\nexport function addAutoIpAddressToUser(objWithMaybeUser: { user?: User | null }): void {\n  if (objWithMaybeUser.user?.ip_address === undefined) {\n    objWithMaybeUser.user = {\n      ...objWithMaybeUser.user,\n      ip_address: '{{auto}}',\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function addAutoIpAddressToSession(session: Session | SessionAggregates): void {\n  if ('aggregates' in session) {\n    if (session.attrs?.['ip_address'] === undefined) {\n      session.attrs = {\n        ...session.attrs,\n        ip_address: '{{auto}}',\n      };\n    }\n  } else {\n    if (session.ipAddress === undefined) {\n      session.ipAddress = '{{auto}}';\n    }\n  }\n}\n","import type { Options } from '../types-hoist/options';\nimport { SDK_VERSION } from '../utils/version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import { getClient, getIsolationScope } from './currentScopes';\nimport type { Breadcrumb, BreadcrumbHint } from './types-hoist/breadcrumb';\nimport { consoleSandbox } from './utils/debug-logger';\nimport { dateTimestampInSeconds } from './utils/time';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n","import type { Client } from '../client';\nimport { getClient } from '../currentScopes';\nimport { defineIntegration } from '../integration';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { WrappedFunction } from '../types-hoist/wrappedfunction';\nimport { getOriginalFunction } from '../utils/object';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        Function.prototype.toString = function (this: WrappedFunction, ...args: unknown[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n","import { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\nimport type { Event } from '../types-hoist/event';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { debug } from '../utils/debug-logger';\nimport { getPossibleEventMessages } from '../utils/eventUtils';\nimport { getEventDescription } from '../utils/misc';\nimport { stringMatchesSomePattern } from '../utils/string';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  /^Can't find variable: gmo$/, // Error from Google Search App https://issuetracker.google.com/issues/396043331\n  /^undefined is not an object \\(evaluating 'a\\.[A-Z]'\\)$/, // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n  /^Java exception was raised during method invocation$/, // error from Facebook Mobile browser (https://github.com/getsentry/sentry-javascript/issues/15065)\n];\n\n/** Options for the EventFilters integration */\nexport interface EventFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'EventFilters';\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n */\nexport const eventFiltersIntegration = defineIntegration((options: Partial<EventFiltersOptions> = {}) => {\n  let mergedOptions: Partial<EventFiltersOptions> | undefined;\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const clientOptions = client.getOptions();\n      mergedOptions = _mergeOptions(options, clientOptions);\n    },\n    processEvent(event, _hint, client) {\n      if (!mergedOptions) {\n        const clientOptions = client.getOptions();\n        mergedOptions = _mergeOptions(options, clientOptions);\n      }\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n});\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n *\n * @deprecated this integration was renamed and will be removed in a future major version.\n * Use `eventFiltersIntegration` instead.\n */\nexport const inboundFiltersIntegration = defineIntegration(((options: Partial<EventFiltersOptions> = {}) => {\n  return {\n    ...eventFiltersIntegration(options),\n    name: 'InboundFilters',\n  };\n}) satisfies IntegrationFn);\n\nfunction _mergeOptions(\n  internalOptions: Partial<EventFiltersOptions> = {},\n  clientOptions: Partial<EventFiltersOptions> = {},\n): Partial<EventFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<EventFiltersOptions>): boolean {\n  if (!event.type) {\n    // Filter errors\n    if (_isIgnoredError(event, options.ignoreErrors)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n    if (_isUselessError(event)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n            event,\n          )}`,\n        );\n      return true;\n    }\n    if (_isDeniedUrl(event, options.denyUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n    if (!_isAllowedUrl(event, options.allowUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n  } else if (event.type === 'transaction') {\n    // Filter transactions\n\n    if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  if (!ignoreErrors?.length) {\n    return false;\n  }\n\n  return getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (!ignoreTransactions?.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  if (!denyUrls?.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  if (!allowUrls?.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    // If there are linked exceptions or exception aggregates we only want to match against the top frame of the \"root\" (the main exception)\n    // The root always comes last in linked exceptions\n    const rootException = [...(event.exception?.values ?? [])]\n      .reverse()\n      .find(value => value.mechanism?.parent_id === undefined && value.stacktrace?.frames?.length);\n    const frames = rootException?.stacktrace?.frames;\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch {\n    DEBUG_BUILD && debug.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event: Event): boolean {\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception?.values?.length) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n","import type { ExtendedError } from '../types-hoist/error';\nimport type { Event, EventHint } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { isInstanceOf } from './is';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception?.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      hint.originalException as ExtendedError,\n      key,\n      event.exception.values,\n      originalException,\n      0,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '../types-hoist/instrument';\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../utils/debug-logger';\nimport { fill } from '../utils/object';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log?.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","import type { SeverityLevel } from '../types-hoist/severity';\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (\n    level === 'warn' ? 'warning' : ['fatal', 'error', 'warning', 'log', 'info', 'debug'].includes(level) ? level : 'log'\n  ) as SeverityLevel;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\nimport type { Event } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { debug } from '../utils/debug-logger';\nimport { getFramesFromEvent } from '../utils/stacktrace';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && debug.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Deduplication filter.\n */\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nexport function _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i]!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i]!;\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception?.values?.[0];\n}\n","import {\n  SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  SEMANTIC_ATTRIBUTE_URL_FULL,\n} from '../semanticAttributes';\nimport type { SpanAttributes } from '../types-hoist/span';\n\ntype PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\ninterface URLwithCanParse extends URL {\n  canParse: (url: string, base?: string | URL | undefined) => boolean;\n}\n\n// A subset of the URL object that is valid for relative URLs\n// The URL object cannot handle relative URLs, so we need to handle them separately\ntype RelativeURL = {\n  isRelative: true;\n  pathname: URL['pathname'];\n  search: URL['search'];\n  hash: URL['hash'];\n};\n\ntype URLObject = RelativeURL | URL;\n\n// Curious about `thismessage:/`? See: https://www.rfc-editor.org/rfc/rfc2557.html\n//  > When the methods above do not yield an absolute URI, a base URL\n//  > of \"thismessage:/\" MUST be employed. This base URL has been\n//  > defined for the sole purpose of resolving relative references\n//  > within a multipart/related structure when no other base URI is\n//  > specified.\n//\n// We need to provide a base URL to `parseStringToURLObject` because the fetch API gives us a\n// relative URL sometimes.\n//\n// This is the only case where we need to provide a base URL to `parseStringToURLObject`\n// because the relative URL is not valid on its own.\nconst DEFAULT_BASE_URL = 'thismessage:/';\n\n/**\n * Checks if the URL object is relative\n *\n * @param url - The URL object to check\n * @returns True if the URL object is relative, false otherwise\n */\nexport function isURLObjectRelative(url: URLObject): url is RelativeURL {\n  return 'isRelative' in url;\n}\n\n/**\n * Parses string to a URL object\n *\n * @param url - The URL to parse\n * @returns The parsed URL object or undefined if the URL is invalid\n */\nexport function parseStringToURLObject(url: string, urlBase?: string | URL | undefined): URLObject | undefined {\n  const isRelative = url.indexOf('://') <= 0 && url.indexOf('//') !== 0;\n  const base = urlBase ?? (isRelative ? DEFAULT_BASE_URL : undefined);\n  try {\n    // Use `canParse` to short-circuit the URL constructor if it's not a valid URL\n    // This is faster than trying to construct the URL and catching the error\n    // Node 20+, Chrome 120+, Firefox 115+, Safari 17+\n    if ('canParse' in URL && !(URL as unknown as URLwithCanParse).canParse(url, base)) {\n      return undefined;\n    }\n\n    const fullUrlObject = new URL(url, base);\n    if (isRelative) {\n      // Because we used a fake base URL, we need to return a relative URL object.\n      // We cannot return anything about the origin, host, etc. because it will refer to the fake base URL.\n      return {\n        isRelative,\n        pathname: fullUrlObject.pathname,\n        search: fullUrlObject.search,\n        hash: fullUrlObject.hash,\n      };\n    }\n    return fullUrlObject;\n  } catch {\n    // empty body\n  }\n\n  return undefined;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlStringFromUrlObject(url: URLObject): string {\n  if (isURLObjectRelative(url)) {\n    return url.pathname;\n  }\n\n  const newUrl = new URL(url);\n  newUrl.search = '';\n  newUrl.hash = '';\n  if (['80', '443'].includes(newUrl.port)) {\n    newUrl.port = '';\n  }\n  if (newUrl.password) {\n    newUrl.password = '%filtered%';\n  }\n  if (newUrl.username) {\n    newUrl.username = '%filtered%';\n  }\n\n  return newUrl.toString();\n}\n\ntype PartialRequest = {\n  method?: string;\n};\n\nfunction getHttpSpanNameFromUrlObject(\n  urlObject: URLObject | undefined,\n  kind: 'server' | 'client',\n  request?: PartialRequest,\n  routeName?: string,\n): string {\n  const method = request?.method?.toUpperCase() ?? 'GET';\n  const route = routeName\n    ? routeName\n    : urlObject\n      ? kind === 'client'\n        ? getSanitizedUrlStringFromUrlObject(urlObject)\n        : urlObject.pathname\n      : '/';\n\n  return `${method} ${route}`;\n}\n\n/**\n * Takes a parsed URL object and returns a set of attributes for the span\n * that represents the HTTP request for that url. This is used for both server\n * and client http spans.\n *\n * Follows https://opentelemetry.io/docs/specs/semconv/http/.\n *\n * @param urlObject - see {@link parseStringToURLObject}\n * @param kind - The type of HTTP operation (server or client)\n * @param spanOrigin - The origin of the span\n * @param request - The request object, see {@link PartialRequest}\n * @param routeName - The name of the route, must be low cardinality\n * @returns The span name and attributes for the HTTP operation\n */\nexport function getHttpSpanDetailsFromUrlObject(\n  urlObject: URLObject | undefined,\n  kind: 'server' | 'client',\n  spanOrigin: string,\n  request?: PartialRequest,\n  routeName?: string,\n): [name: string, attributes: SpanAttributes] {\n  const attributes: SpanAttributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n  };\n\n  if (routeName) {\n    // This is based on https://opentelemetry.io/docs/specs/semconv/http/http-spans/#name\n    attributes[kind === 'server' ? 'http.route' : 'url.template'] = routeName;\n    attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n  }\n\n  if (request?.method) {\n    attributes[SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD] = request.method.toUpperCase();\n  }\n\n  if (urlObject) {\n    if (urlObject.search) {\n      attributes['url.query'] = urlObject.search;\n    }\n    if (urlObject.hash) {\n      attributes['url.fragment'] = urlObject.hash;\n    }\n    if (urlObject.pathname) {\n      attributes['url.path'] = urlObject.pathname;\n      if (urlObject.pathname === '/') {\n        attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n      }\n    }\n\n    if (!isURLObjectRelative(urlObject)) {\n      attributes[SEMANTIC_ATTRIBUTE_URL_FULL] = urlObject.href;\n      if (urlObject.port) {\n        attributes['url.port'] = urlObject.port;\n      }\n      if (urlObject.protocol) {\n        attributes['url.scheme'] = urlObject.protocol;\n      }\n      if (urlObject.hostname) {\n        attributes[kind === 'server' ? 'server.address' : 'url.domain'] = urlObject.hostname;\n      }\n    }\n  }\n\n  return [getHttpSpanNameFromUrlObject(urlObject, kind, request, routeName), attributes];\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  return (urlPath.split(/[?#]/, 1) as [string, ...string[]])[0];\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    host\n      // Always filter out authority\n      ?.replace(/^.*@/, '[filtered]:[filtered]@')\n      // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n      // TODO: Use new URL global if it exists\n      .replace(/(:80)$/, '')\n      .replace(/(:443)$/, '') || '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","import type { SeverityLevel } from '../types-hoist/severity';\n\n/**\n * Determine a breadcrumb's log level (only `warning` or `error`) based on an HTTP status code.\n */\nexport function getBreadcrumbLogLevelFromHttpStatusCode(statusCode: number | undefined): SeverityLevel | undefined {\n  // NOTE: undefined defaults to 'info' in Sentry\n  if (statusCode === undefined) {\n    return undefined;\n  } else if (statusCode >= 400 && statusCode < 500) {\n    return 'warning';\n  } else if (statusCode >= 500) {\n    return 'error';\n  } else {\n    return undefined;\n  }\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { debug } from './debug-logger';\nimport { GLOBAL_OBJ } from './worldwide';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\ndeclare const EdgeRuntime: string | undefined;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  return 'history' in WINDOW && !!WINDOW.history;\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nexport const supportsFetch = _isFetchSupported;\n\nfunction _isFetchSupported(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFunction(func: Function): boolean {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow?.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD && debug.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { HandlerDataFetch } from '../types-hoist/instrument';\nimport type { WebFetchHeaders } from '../types-hoist/webfetchapi';\nimport { isError, isRequest } from '../utils/is';\nimport { addNonEnumerableProperty, fill } from '../utils/object';\nimport { supportsNativeFetch } from '../utils/supports';\nimport { timestampInSeconds } from '../utils/time';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(\n  handler: (data: HandlerDataFetch) => void,\n  skipNativeFetchCheck?: boolean,\n): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(undefined, skipNativeFetchCheck));\n}\n\n/**\n * Add an instrumentation handler for long-lived fetch requests, like consuming server-sent events (SSE) via fetch.\n * The handler will resolve the request body and emit the actual `endTimestamp`, so that the\n * span can be updated accordingly.\n *\n * Only used internally\n * @hidden\n */\nexport function addFetchEndInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch-body-resolved';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(streamHandler));\n}\n\nfunction instrumentFetch(onFetchResolved?: (response: Response) => void, skipNativeFetchCheck: boolean = false): void {\n  if (skipNativeFetchCheck && !supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      // We capture the error right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualError = new Error();\n\n      const { method, url } = parseFetchArgs(args);\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: timestampInSeconds() * 1000,\n        // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation\n        virtualError,\n        headers: getHeadersFromFetchArgs(args),\n      };\n\n      // if there is no callback, fetch is instrumented directly\n      if (!onFetchResolved) {\n        triggerHandlers('fetch', {\n          ...handlerData,\n        });\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        async (response: Response) => {\n          if (onFetchResolved) {\n            onFetchResolved(response);\n          } else {\n            triggerHandlers('fetch', {\n              ...handlerData,\n              endTimestamp: timestampInSeconds() * 1000,\n              response,\n            });\n          }\n\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            error,\n          });\n\n          if (isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualError.stack;\n            addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // We enhance the not-so-helpful \"Failed to fetch\" error messages with the host\n          // Possible messages we handle here:\n          // * \"Failed to fetch\" (chromium)\n          // * \"Load failed\" (webkit)\n          // * \"NetworkError when attempting to fetch resource.\" (firefox)\n          if (\n            error instanceof TypeError &&\n            (error.message === 'Failed to fetch' ||\n              error.message === 'Load failed' ||\n              error.message === 'NetworkError when attempting to fetch resource.')\n          ) {\n            try {\n              const url = new URL(handlerData.fetchData.url);\n              error.message = `${error.message} (${url.host})`;\n            } catch {\n              // ignore it if errors happen here\n            }\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nasync function resolveResponse(res: Response | undefined, onFinishedResolving: () => void): Promise<void> {\n  if (res?.body) {\n    const body = res.body;\n    const responseReader = body.getReader();\n\n    // Define a maximum duration after which we just cancel\n    const maxFetchDurationTimeout = setTimeout(\n      () => {\n        body.cancel().then(null, () => {\n          // noop\n        });\n      },\n      90 * 1000, // 90s\n    );\n\n    let readingActive = true;\n    while (readingActive) {\n      let chunkTimeout;\n      try {\n        // abort reading if read op takes more than 5s\n        chunkTimeout = setTimeout(() => {\n          body.cancel().then(null, () => {\n            // noop on error\n          });\n        }, 5000);\n\n        // This .read() call will reject/throw when we abort due to timeouts through `body.cancel()`\n        const { done } = await responseReader.read();\n\n        clearTimeout(chunkTimeout);\n\n        if (done) {\n          onFinishedResolving();\n          readingActive = false;\n        }\n      } catch {\n        readingActive = false;\n      } finally {\n        clearTimeout(chunkTimeout);\n      }\n    }\n\n    clearTimeout(maxFetchDurationTimeout);\n\n    responseReader.releaseLock();\n    body.cancel().then(null, () => {\n      // noop on error\n    });\n  }\n}\n\nfunction streamHandler(response: Response): void {\n  // clone response for awaiting stream\n  let clonedResponseForResolving: Response;\n  try {\n    clonedResponseForResolving = response.clone();\n  } catch {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  resolveResponse(clonedResponseForResolving, () => {\n    triggerHandlers('fetch-body-resolved', {\n      endTimestamp: timestampInSeconds() * 1000,\n      response,\n    });\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nfunction getHeadersFromFetchArgs(fetchArgs: unknown[]): WebFetchHeaders | undefined {\n  const [requestArgument, optionsArgument] = fetchArgs;\n\n  try {\n    if (\n      typeof optionsArgument === 'object' &&\n      optionsArgument !== null &&\n      'headers' in optionsArgument &&\n      optionsArgument.headers\n    ) {\n      return new Headers(optionsArgument.headers as any);\n    }\n\n    if (isRequest(requestArgument)) {\n      return new Headers(requestArgument.headers);\n    }\n  } catch {\n    // noop\n  }\n\n  return;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `debug` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader' | 'aws-lambda-layer';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // This comment is used to identify this line in the CDN bundle build step and replace this with \"return 'cdn';\"\n  /* __SENTRY_SDK_SOURCE__ */ return 'npm';\n}\n","import type { Mechanism, WrappedFunction } from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  captureException,\n  getLocationHref,\n  getOriginalFunction,\n  GLOBAL_OBJ,\n  markFunctionWrapped,\n  withScope,\n} from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype WrappableFunction = Function;\n\nexport function wrap<T extends WrappableFunction>(\n  fn: T,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): WrappedFunction<T>;\nexport function wrap<NonFunction>(\n  fn: NonFunction,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): NonFunction;\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap<T extends WrappableFunction, NonFunction>(\n  fn: T | NonFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n): NonFunction | WrappedFunction<T> {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn: T | NonFunction): fn is T {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn as WrappedFunction<T>).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function (this: unknown, ...args: unknown[]): unknown {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } as unknown as WrappedFunction<T>;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property as keyof T] = fn[property as keyof T];\n      }\n    }\n  } catch {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name')!;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n\n/**\n * Get HTTP request data from the current page.\n */\nexport function getHttpRequestData(): { url: string; headers: Record<string, string> } {\n  // grab as much info as exists and add it to the event\n  const url = getLocationHref();\n  const { referrer } = WINDOW.document || {};\n  const { userAgent } = WINDOW.navigator || {};\n\n  const headers = {\n    ...(referrer && { Referer: referrer }),\n    ...(userAgent && { 'User-Agent': userAgent }),\n  };\n  const request = {\n    url,\n    headers,\n  };\n\n  return request;\n}\n","import type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  getClient,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/core';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client?.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } as Exception,\n      ],\n    },\n    extra,\n  } satisfies Event;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0]!.stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex: Error): number {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex: Error & { framesToPop?: unknown }): number {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception: unknown): exception is WebAssembly.Exception {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nexport function extractType(ex: Error & { message: { error?: Error } }): string | undefined {\n  const name = ex?.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nexport function extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex?.message;\n\n  if (isWebAssemblyException(ex)) {\n    // For Node 18, Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    if (Array.isArray(ex.message) && ex.message.length == 2) {\n      return ex.message[1];\n    }\n    return 'wasm exception';\n  }\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  level: SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n","import type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Scope,\n  SeverityLevel,\n} from '@sentry/core';\nimport {\n  _INTERNAL_flushLogsBuffer,\n  addAutoIpAddressToSession,\n  addAutoIpAddressToUser,\n  applySdkMetadata,\n  Client,\n  getSDKSource,\n} from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\ntype BrowserSpecificOptions = BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserSpecificOptions & {\n    /**\n     * Important: Only set this option if you know what you are doing!\n     *\n     * By default, the SDK will check if `Sentry.init` is called in a browser extension.\n     * In case it is, it will stop initialization and log a warning\n     * because browser extensions require a different Sentry initialization process:\n     * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n     *\n     * Setting up the SDK in a browser extension with global error monitoring is not recommended\n     * and will likely flood you with errors from other web sites or extensions. This can heavily\n     * impact your quota and cause interference with your and other Sentry SDKs in shared environments.\n     *\n     * If this check wrongfully flags your setup as a browser extension, you can set this\n     * option to `true` to skip the check.\n     *\n     * @default false\n     */\n    skipBrowserExtensionCheck?: boolean;\n  };\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> & BrowserSpecificOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends Client<BrowserClientOptions> {\n  private _logFlushIdleTimeout: ReturnType<typeof setTimeout> | undefined;\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = applyDefaultOptions(options);\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    const { sendDefaultPii, sendClientReports, enableLogs, _experiments } = this._options;\n    // eslint-disable-next-line deprecation/deprecation\n    const shouldEnableLogs = enableLogs ?? _experiments?.enableLogs;\n\n    if (WINDOW.document && (sendClientReports || shouldEnableLogs)) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          if (sendClientReports) {\n            this._flushOutcomes();\n          }\n          if (shouldEnableLogs) {\n            _INTERNAL_flushLogsBuffer(this);\n          }\n        }\n      });\n    }\n\n    if (shouldEnableLogs) {\n      this.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(this);\n      });\n\n      this.on('afterCaptureLog', () => {\n        if (this._logFlushIdleTimeout) {\n          clearTimeout(this._logFlushIdleTimeout);\n        }\n\n        this._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(this);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n\n    if (sendDefaultPii) {\n      this.on('postprocessEvent', addAutoIpAddressToUser);\n      this.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\n\n/** Exported only for tests. */\nexport function applyDefaultOptions<T extends Partial<BrowserClientOptions>>(optionsArg: T): T {\n  return {\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE?.id, // This supports the variable that sentry-webpack-plugin injects\n    sendClientReports: true,\n    // We default this to true, as it is the safer scenario\n    parentSpanIsAlwaysRootSpan: true,\n    ...optionsArg,\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type {\n  FetchBreadcrumbHint,\n  HandlerDataFetch,\n  SentryWrappedXMLHttpRequest,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport { GLOBAL_OBJ } from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n\nexport type NetworkMetaWarning =\n  | 'MAYBE_JSON_TRUNCATED'\n  | 'TEXT_TRUNCATED'\n  | 'URL_SKIPPED'\n  | 'BODY_PARSE_ERROR'\n  | 'BODY_PARSE_TIMEOUT'\n  | 'UNPARSEABLE_BODY_TYPE';\n\ntype RequestBody = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\nexport type XhrHint = XhrBreadcrumbHint & {\n  xhr: XMLHttpRequest & SentryWrappedXMLHttpRequest;\n  input?: RequestBody;\n};\nexport type FetchHint = FetchBreadcrumbHint & {\n  input: HandlerDataFetch['args'];\n  response: Response;\n};\n","import type { HandlerDataDom } from '@sentry/core';\nimport { addHandler, addNonEnumerableProperty, fill, maybeInstrument, triggerHandlers, uuid4 } from '@sentry/core';\nimport { WINDOW } from '../types';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: unknown;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n    const proto = globalObject[target]?.prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto?.hasOwnProperty?.('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (this: InstrumentedElement, type, listener, options): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const handlers = (this.__sentry_instrumentation_handlers__ =\n              this.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (this: InstrumentedElement, type, listener, options): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const handlers = this.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete this.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target?.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","import type { HandlerDataHistory } from '@sentry/core';\nimport { addHandler, fill, maybeInstrument, supportsHistory, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types';\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\n/**\n * Exported just for testing\n */\nexport function instrumentHistory(): void {\n  // The `popstate` event may also be triggered on `pushState`, but it may not always reliably be emitted by the browser\n  // Which is why we also monkey-patch methods below, in addition to this\n  WINDOW.addEventListener('popstate', () => {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n\n    if (from === to) {\n      return;\n    }\n\n    const handlerData = { from, to } satisfies HandlerDataHistory;\n    triggerHandlers('history', handlerData);\n  });\n\n  // Just guard against this not being available, in weird environments\n  if (!supportsHistory()) {\n    return;\n  }\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: unknown[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        const from = lastHref;\n\n        // Ensure the URL is absolute\n        // this can be either a path, then it is relative to the current origin\n        // or a full URL of the current origin - other origins are not allowed\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/History/pushState#url\n        // coerce to string (this is what pushState does)\n        const to = getAbsoluteUrl(String(url));\n\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n\n        if (from === to) {\n          return originalHistoryFunction.apply(this, args);\n        }\n\n        const handlerData = { from, to } satisfies HandlerDataHistory;\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nfunction getAbsoluteUrl(urlOrPath: string): string {\n  try {\n    const url = new URL(urlOrPath, WINDOW.location.origin);\n    return url.toString();\n  } catch {\n    // fallback, just do nothing\n    return urlOrPath;\n  }\n}\n","import { debug, isNativeFunction } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './types';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\ninterface CacheableImplementations {\n  setTimeout: typeof WINDOW.setTimeout;\n  fetch: typeof WINDOW.fetch;\n}\n\nconst cachedImplementations: Partial<CacheableImplementations> = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nexport function getNativeImplementation<T extends keyof CacheableImplementations>(\n  name: T,\n): CacheableImplementations[T] {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] as CacheableImplementations[T];\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow?.[name]) {\n        impl = contentWindow[name] as CacheableImplementations[T];\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && debug.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n}\n\n/** Clear a cached implementation. */\nexport function clearCachedImplementation(name: keyof CacheableImplementations): void {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function fetch(...rest: Parameters<typeof WINDOW.fetch>): ReturnType<typeof WINDOW.fetch> {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nexport function setTimeout(...rest: Parameters<typeof WINDOW.setTimeout>): ReturnType<typeof WINDOW.setTimeout> {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n","import type { HandlerDataXhr, SentryWrappedXMLHttpRequest } from '@sentry/core';\nimport { addHandler, isString, maybeInstrument, timestampInSeconds, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types';\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\ntype WindowWithXhr = Window & { XMLHttpRequest?: typeof XMLHttpRequest };\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  if (!(WINDOW as WindowWithXhr).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.open = new Proxy(xhrproto.open, {\n    apply(\n      originalOpen,\n      xhrOpenThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest,\n      xhrOpenArgArray:\n        | [method: string, url: string | URL]\n        | [method: string, url: string | URL, async: boolean, username?: string | null, password?: string | null],\n    ) {\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your XHR call did not\n      //       have a stack trace. If you are using HttpClient integration,\n      //       this is the expected behavior, as we are using this virtual error to capture\n      //       the location of your XHR call, and group your HttpClient events accordingly.\n      const virtualError = new Error();\n\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(xhrOpenArgArray[0]) ? xhrOpenArgArray[0].toUpperCase() : undefined;\n      const url = parseXhrUrlArg(xhrOpenArgArray[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n      }\n\n      xhrOpenThisArg[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        xhrOpenThisArg.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = xhrOpenThisArg[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (xhrOpenThisArg.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhrOpenThisArg.status;\n          } catch {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: xhrOpenThisArg,\n            virtualError,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in xhrOpenThisArg && typeof xhrOpenThisArg.onreadystatechange === 'function') {\n        xhrOpenThisArg.onreadystatechange = new Proxy(xhrOpenThisArg.onreadystatechange, {\n          apply(originalOnreadystatechange, onreadystatechangeThisArg, onreadystatechangeArgArray: unknown[]) {\n            onreadystatechangeHandler();\n            return originalOnreadystatechange.apply(onreadystatechangeThisArg, onreadystatechangeArgArray);\n          },\n        });\n      } else {\n        xhrOpenThisArg.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      xhrOpenThisArg.setRequestHeader = new Proxy(xhrOpenThisArg.setRequestHeader, {\n        apply(\n          originalSetRequestHeader,\n          setRequestHeaderThisArg: SentryWrappedXMLHttpRequest,\n          setRequestHeaderArgArray: unknown[],\n        ) {\n          const [header, value] = setRequestHeaderArgArray;\n\n          const xhrInfo = setRequestHeaderThisArg[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return originalSetRequestHeader.apply(setRequestHeaderThisArg, setRequestHeaderArgArray);\n        },\n      });\n\n      return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n    },\n  });\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.send = new Proxy(xhrproto.send, {\n    apply(originalSend, sendThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest, sendArgArray: unknown[]) {\n      const sentryXhrData = sendThisArg[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(sendThisArg, sendArgArray);\n      }\n\n      if (sendArgArray[0] !== undefined) {\n        sentryXhrData.body = sendArgArray[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: sendThisArg,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(sendThisArg, sendArgArray);\n    },\n  });\n}\n\n/**\n * Parses the URL argument of a XHR method to a string.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open#url\n * url: A string or any other object with a stringifier — including a URL object — that provides the URL of the resource to send the request to.\n *\n * @param url - The URL argument of an XHR method\n * @returns The parsed URL string or undefined if the URL is invalid\n */\nfunction parseXhrUrlArg(url: unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // If the passed in argument is not a string, it should have a `toString` method as a stringifier.\n    // If that fails, we just return undefined (like in IE11 where URL is not available)\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/core';\nimport { createTransport, rejectedSyncPromise } from '@sentry/core';\nimport { clearCachedImplementation, getNativeImplementation } from '@sentry-internal/browser-utils';\nimport type { WINDOW } from '../helpers';\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: typeof WINDOW.fetch | undefined = getNativeImplementation('fetch'),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'strict-origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // Note: We do not need to suppress tracing here, becasue we are using the native fetch, instead of our wrapped one.\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/core';\nimport { createStackParser, UNKNOWN_FUNCTION } from '@sentry/core';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) as null | [string, string, string, string];\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) as null | [string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) as null | [string, string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line) as null | [string, string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) as null | [string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line) as null | [string, string, string, string, string];\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line) as null | [string, string, string, string];\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line) as null | [string, string, string, string, string, string];\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] as string) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable max-lines */\n\nimport type {\n  Breadcrumb,\n  Client,\n  Event as SentryEvent,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  IntegrationFn,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport {\n  addBreadcrumb,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  debug,\n  defineIntegration,\n  getBreadcrumbLogLevelFromHttpStatusCode,\n  getClient,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/core';\nimport type { FetchHint, XhrHint } from '@sentry-internal/browser-utils';\nimport {\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  SENTRY_XHR_DATA_KEY,\n} from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      // TODO(v10): Remove this functionality and use `consoleIntegration` from @sentry/core instead.\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const breadcrumb = {\n      category: 'xhr',\n      data,\n      type: 'http',\n      level: getBreadcrumbLogLevelFromHttpStatusCode(status_code),\n    };\n\n    client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as XhrHint);\n\n    addBreadcrumb(breadcrumb, hint);\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    const breadcrumbData: FetchBreadcrumbData = {\n      method: handlerData.fetchData.method,\n      url: handlerData.fetchData.url,\n    };\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      } satisfies Breadcrumb;\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as FetchHint);\n\n      addBreadcrumb(breadcrumb, hint);\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response?.status,\n      };\n\n      breadcrumbData.request_body_size = handlerData.fetchData.request_body_size;\n      breadcrumbData.response_body_size = handlerData.fetchData.response_body_size;\n      breadcrumbData.status_code = response?.status;\n\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        type: 'http',\n        level: getBreadcrumbLogLevelFromHttpStatusCode(data.status_code),\n      };\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as FetchHint);\n\n      addBreadcrumb(breadcrumb, hint);\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom?.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { IntegrationFn, WrappedFunction } from '@sentry/core';\nimport { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface BrowserApiErrorsOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n\n  /**\n   * If you experience issues with this integration causing double-invocations of event listeners,\n   * try setting this option to `true`. It will unregister the original callbacks from the event targets\n   * before adding the instrumented callback.\n   *\n   * @default false\n   */\n  unregisterOriginalCallbacks: boolean;\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<BrowserApiErrorsOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    unregisterOriginalCallbacks: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(target => _wrapEventTarget(target, _options));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  return function (this: unknown, ...args: unknown[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original: () => void): (callback: () => void) => unknown {\n  return function (this: unknown, callback: () => void): () => void {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  return function (this: XMLHttpRequest, ...args: unknown[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string, integrationOptions: BrowserApiErrorsOptions): void {\n  const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n  const proto = globalObject[target]?.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto?.hasOwnProperty?.('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction): (\n    ...args: Parameters<typeof WINDOW.addEventListener>\n  ) => ReturnType<typeof WINDOW.addEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      if (integrationOptions.unregisterOriginalCallbacks) {\n        unregisterOriginalCallback(this, eventName, fn);\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener: VoidFunction): (\n    this: unknown,\n    ...args: Parameters<typeof WINDOW.removeEventListener>\n  ) => ReturnType<typeof WINDOW.removeEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn as WrappedFunction).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj: unknown): obj is EventListenerObject {\n  return typeof (obj as EventListenerObject).handleEvent === 'function';\n}\n\nfunction unregisterOriginalCallback(target: unknown, eventName: string, fn: EventListenerOrEventListenerObject): void {\n  if (\n    target &&\n    typeof target === 'object' &&\n    'removeEventListener' in target &&\n    typeof target.removeEventListener === 'function'\n  ) {\n    target.removeEventListener(eventName, fn);\n  }\n}\n","import { captureSession, debug, defineIntegration, startSession } from '@sentry/core';\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nexport const browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          debug.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n","import type { Client, Event, IntegrationFn, Primitive, StackParser } from '@sentry/core';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  captureEvent,\n  debug,\n  defineIntegration,\n  getClient,\n  getLocationHref,\n  isPrimitive,\n  isString,\n  UNKNOWN_FUNCTION,\n} from '@sentry/core';\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n    type ErrorWithReason = { reason: unknown };\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error as ErrorWithReason)) {\n      return (error as ErrorWithReason).reason;\n    }\n\n    type CustomEventWithDetail = { detail: { reason: unknown } };\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error as CustomEventWithDetail) && 'reason' in (error as CustomEventWithDetail).detail) {\n      return (error as CustomEventWithDetail).detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event: Event,\n  url: string | undefined,\n  line: number | undefined,\n  column: number | undefined,\n): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && debug.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = client?.getOptions() || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","import { defineIntegration } from '@sentry/core';\nimport { getHttpRequestData, WINDOW } from '../helpers';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nexport const httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      const reqData = getHttpRequestData();\n      const headers = {\n        ...reqData.headers,\n        ...event.request?.headers,\n      };\n\n      event.request = {\n        ...reqData,\n        ...event.request,\n        headers,\n      };\n    },\n  };\n});\n","import type { IntegrationFn } from '@sentry/core';\nimport { applyAggregateErrorsToEvent, defineIntegration } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Aggregrate linked errors in an event.\n */\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n","import { consoleSandbox, getLocationHref } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ntype ExtensionRuntime = {\n  runtime?: {\n    id?: string;\n  };\n};\ntype ExtensionProperties = {\n  chrome?: ExtensionRuntime;\n  browser?: ExtensionRuntime;\n  nw?: unknown;\n};\n\n/**\n * Returns true if the SDK is running in an embedded browser extension.\n * Stand-alone browser extensions (which do not share the same data as the main browser page) are fine.\n */\nexport function checkAndWarnIfIsEmbeddedBrowserExtension(): boolean {\n  if (_isEmbeddedBrowserExtension()) {\n    if (DEBUG_BUILD) {\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.error(\n          '[Sentry] You cannot use Sentry.init() in a browser extension, see: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n        );\n      });\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isEmbeddedBrowserExtension(): boolean {\n  if (typeof WINDOW.window === 'undefined') {\n    // No need to show the error if we're not in a browser window environment (e.g. service workers)\n    return false;\n  }\n\n  const _window = WINDOW as typeof WINDOW & ExtensionProperties;\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  if (_window.nw) {\n    return false;\n  }\n\n  const extensionObject = _window['chrome'] || _window['browser'];\n\n  if (!extensionObject?.runtime?.id) {\n    return false;\n  }\n\n  const href = getLocationHref();\n  const extensionProtocols = ['chrome-extension', 'moz-extension', 'ms-browser-extension', 'safari-web-extension'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}://`));\n\n  return !isDedicatedExtensionPage;\n}\n","import type { Client, Integration, Options } from '@sentry/core';\nimport {\n  dedupeIntegration,\n  functionToStringIntegration,\n  getIntegrationsToSetup,\n  inboundFiltersIntegration,\n  initAndBind,\n  stackParserFromStackParserOptions,\n} from '@sentry/core';\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors';\nimport { browserSessionIntegration } from './integrations/browsersession';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport } from './transports/fetch';\nimport { checkAndWarnIfIsEmbeddedBrowserExtension } from './utils/detectBrowserExtension';\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  return [\n    // TODO(v10): Replace with `eventFiltersIntegration` once we remove the deprecated `inboundFiltersIntegration`\n    // eslint-disable-next-line deprecation/deprecation\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n    browserSessionIntegration(),\n  ];\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): Client | undefined {\n  const shouldDisableBecauseIsBrowserExtenstion =\n    !options.skipBrowserExtensionCheck && checkAndWarnIfIsEmbeddedBrowserExtension();\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    enabled: shouldDisableBecauseIsBrowserExtenstion ? false : options.enabled,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup({\n      integrations: options.integrations,\n      defaultIntegrations:\n        options.defaultIntegrations == null ? getDefaultIntegrations(options) : options.defaultIntegrations,\n    }),\n    transport: options.transport || makeFetchTransport,\n  };\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n","import { Tool } from '@/shared';\nimport { zodToJsonSchema } from 'zod-to-json-schema';\n\n/**\n * Generates an extraction template based on the tool description, params and zod schema.\n * @param tool\n */\nexport function generateExtractionTemplate(tool: Tool): string {\n  const zodSchema = tool.parameters; // Zod Schema of the tool parameters, used for generating JSON schema for extraction response\n  const description = tool.description; // description of the tool, used for generating a list of required/optional params\n  const actionName = tool.name;\n  const toolParamsJSONSchema = zodToJsonSchema(zodSchema, actionName); // JSON schema created based on the tool's params\n\n  return `Given the recent messages and Hedera wallet information below:\n{{recentMessages}}\n{{hederaAccountDetails}}\n\nExtract the following parameters based on the tool/action description and json schema below:\n\n### Tool/action description:\n${description}\n\n⚠️ Do **not** assume values or apply defaults. Do **not** set a field unless it is clearly specified in the latest user input.\n⚠️ **IMPORTANT**: Always ensure numeric values are provided as NUMBERS WITHOUT QUOTES in the JSON response.\n⚠️ **IMPORTANT**: Always ensure string values are provided as QUOTED STRINGS in the JSON response.\n⚠️ **CRITICAL**: Enum values must be provided as QUOTED STRINGS (e.g., \"finite\", not finite).\n⚠️ **CRITICAL**: The returned JSON must be a valid JSON object in markdown format. Don not include comments inside it. If no params is passed return an empty JSON object.\n\n---\n\n### Response format:\nRespond with a JSON markdown block including the fields that were explicitly mentioned in the most recent user message.\n\nResponse JSON schema:\n${JSON.stringify(toolParamsJSONSchema, null, 2)}\n\n---\n\nNumeric values should be numbers without quotes. Enum values must be quoted strings.`;\n}\n","const jsonBlockPattern = /```(?:json)?\\s*([\\s\\S]*?)```/;\n\n/**\n * Custom implementation of JSON Parser form ElizaOS\n * Parses a JSON object or array from a given text.\n * Extracts JSON from code blocks and handles normalization of improperly formatted JSON.\n * Preserves data types (numbers, booleans, arrays) in the parsed result.\n *\n * @param text - The input text from which to extract and parse the JSON.\n * @returns The parsed JSON object or array if successful; otherwise, null.\n */\nexport function customParseJSONObjectFromText(text: string): Record<string, any> | any[] | null {\n  if (!text) return null;\n\n  let jsonData = null;\n  const jsonBlockMatch = text.match(jsonBlockPattern);\n\n  try {\n    if (jsonBlockMatch) {\n      // Clean the extracted JSON content\n      const jsonContent = jsonBlockMatch[1].trim().replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, ''); // Remove control characters\n      jsonData = JSON.parse(jsonContent);\n    } else {\n      // Try direct parsing first for well-formatted JSON\n      try {\n        jsonData = JSON.parse(text.trim());\n      } catch {\n        // Fall back to normalization for poorly formatted JSON\n        jsonData = JSON.parse(customNormalizeJsonString(text.trim()));\n      }\n    }\n  } catch (error) {\n    console.warn('Could not parse text as JSON:', error);\n    return null;\n  }\n\n  // Accept both objects and arrays, but ensure we have something valid\n  if (jsonData && typeof jsonData === 'object') {\n    return jsonData;\n  }\n\n  console.warn('Parsed result is not a valid object or array');\n  return null;\n}\n\n/**\n * Custom Implementation of JSON string normalization from ElizaOS\n * Normalizes a JSON-like string by correcting formatting issues without converting numbers or booleans to strings.\n *\n * @param str - The JSON-like string to normalize.\n * @returns A properly formatted JSON string.\n */\nfunction customNormalizeJsonString(str: string): string {\n  if (!str) return str;\n\n  // Remove extra spaces after '{' and before '}'\n  str = str.replace(/\\{\\s+/, '{').replace(/\\s+\\}/, '}').trim();\n\n  // Fix missing quotes around property names\n  str = str.replace(/(\\s*)(\\w+)(\\s*):(\\s*)/g, '$1\"$2\"$3:$4');\n\n  // Fix single quotes around property values but ONLY when they're strings\n  // Don't convert numbers or booleans that are properly formatted\n  str = str.replace(/\"([^\"]+)\"\\s*:\\s*'([^']*)'/g, (_, key, value) => `\"${key}\": \"${value}\"`);\n\n  // Handle unquoted property values that should be strings\n  // But skip numbers, true, false, and null which should remain unquoted\n  str = str.replace(/\"([^\"]+)\"\\s*:\\s*([^\",\\{\\[\\]\\}0-9][^\",\\{\\[\\]\\}\\s]*)/g, (match, key, value) => {\n    // Skip if value is true, false, or null\n    if (value === 'true' || value === 'false' || value === 'null') {\n      return `\"${key}\": ${value}`;\n    }\n    // Skip if value is a number\n    if (!isNaN(Number(value))) {\n      return `\"${key}\": ${value}`;\n    }\n    return `\"${key}\": \"${value}\"`;\n  });\n\n  return str;\n}\n","import {\n  Action,\n  ActionExample,\n  ActionResult,\n  composePromptFromState,\n  Handler,\n  type HandlerCallback,\n  type IAgentRuntime,\n  logger,\n  type Memory,\n  ModelType,\n  type State,\n  Validator,\n} from '@elizaos/core';\nimport { Client } from '@hashgraph/sdk';\nimport type { Tool } from '@/shared/tools';\nimport { Context } from '@/shared/configuration';\nimport { generateExtractionTemplate } from '@/elizaos/utils/extraction';\nimport { customParseJSONObjectFromText } from '@/elizaos/utils/parser';\n\nclass HederaAgentKitTool implements Action {\n  description: string;\n  handler: Handler;\n  similes?: string[] | undefined;\n  examples?: ActionExample[][] | undefined;\n  name: string;\n  validate: Validator;\n\n  constructor(client: Client, context: Context, tool: Tool) {\n    const parameterSchema = tool.parameters;\n    this.description = tool.description;\n\n    // Set Action properties\n    this.name = tool.method.toUpperCase();\n    this.similes = [tool.method.toUpperCase()];\n    this.validate = async (_runtime: IAgentRuntime, _message: Memory) => true;\n\n    this.handler = async (\n      runtime: IAgentRuntime,\n      _message: Memory,\n      state: State | undefined,\n      _options: any,\n      callback?: HandlerCallback,\n    ): Promise<ActionResult> => {\n      logger.log(`Running ${tool.method} handler...`);\n      if (!state) {\n        throw new Error('State is undefined');\n      }\n\n      // create an extraction prompt for extracting tool parameters from recent user messages\n      const prompt = composePromptFromState({\n        state,\n        template: generateExtractionTemplate(tool),\n      });\n      logger.debug(`prompt: ${prompt}`);\n\n      // execute extraction prompt\n      const modelOutput = await runtime.useModel(ModelType.TEXT_LARGE, { prompt });\n      logger.debug(`Model extraction output: ${modelOutput}`);\n\n      // custom parsing params from Markdown JSON notation to JS object\n      const parsedParams = customParseJSONObjectFromText(modelOutput) as Record<string, any>;\n      logger.debug('Parsed params object', parsedParams);\n\n      // validating parameters with tools input zod schema\n      const validation = parameterSchema.safeParse(parsedParams); // parsing extracted params before calling a tool\n      logger.debug('Validated params:' + JSON.stringify(validation, null, 2));\n\n      // print error if validation failed\n      if (!validation.success) {\n        // call llm to generate a comprehensive message to the user about missing params\n        const promptText = `given the recent messages {{recent_messages}}, \n        tool description: ${tool.description}\n        and the error message: ${validation.error.format()}\n        generate a comprehensive message to the user about missing params\n        `;\n\n        const modelOutput = await runtime.useModel(ModelType.TEXT_LARGE, { promptText });\n        if (callback) {\n          await callback({\n            text: modelOutput,\n            content: { error: validation.error.format() },\n          });\n        }\n        return {\n          success: false,\n          text: modelOutput,\n          error: validation.error.toString(),\n        };\n      }\n\n      // call the action\n      try {\n        const result = await tool.execute(client, context, validation.data);\n        const responseText = result.humanMessage; // extract the human-readable response provided by the tool\n\n        if (callback) {\n          await callback({\n            text: responseText,\n            content: result,\n          });\n        }\n\n        return { success: true, text: responseText };\n      } catch (err) {\n        // handle other errors\n        const message = err instanceof Error ? err.message : 'Unknown error';\n        logger.error(`Error running tool ${tool.method}:`, err);\n\n        if (callback) {\n          await callback({\n            text: `Execution failed: ${message}`,\n            content: { error: message },\n          });\n        }\n\n        return { success: false, text: `Execution failed: ${message}`, error: message };\n      }\n    };\n  }\n}\n\nexport default HederaAgentKitTool;\n","import { Client } from '@hashgraph/sdk';\nimport { Configuration, Context } from '@/shared/configuration';\nimport { ToolDiscovery } from '@/shared/tool-discovery';\nimport HederaAgentKitTool from '@/elizaos/tool';\n\nexport class HederaElizaOSToolkit {\n  private readonly tools: HederaAgentKitTool[];\n  private readonly client: Client;\n  private readonly context: Context;\n\n  constructor({ client, configuration }: { client: Client; configuration: Configuration }) {\n    this.client = client;\n    this.context = configuration.context || {};\n    const toolDiscovery = ToolDiscovery.createFromConfiguration(configuration);\n    const allTools = toolDiscovery.getAllTools(this.context, configuration);\n\n    this.tools = allTools.map(tool => new HederaAgentKitTool(this.client, this.context, tool));\n  }\n\n  /**\n   * Maps hedera-agent-kit tools and returns ElizaOS compatible actions\n   */\n  getTools(): HederaAgentKitTool[] {\n    return this.tools;\n  }\n}\n"],"mappings":"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IIgGE,IChGa,CACb,SACA,UACA,WACA,WACA,QACA,SACA,QACA,SACA,QACA,SACA,WACA,WACA,WACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,YACA,YACA,SACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,SACA,QACA,OACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,YACA,UACA,WACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,WACA,SACA,MACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,WACA,QACA,QACA,SACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,WACA,QACA,UACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,aACA,aACA,UACA,UACA,SACA,UACA,SACA,aACA,eACA,SACA,SACA,cACA,SACA,WACA,QACA,SACA,aACA,eACA,SACA,UACA,WACA,WACA,UACA,QACA,SACA,WACA,QACA,OACA,QACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,UACA,WACA,UACA,QACA,aACA,SACA,UACA,SACA,WACA,WACA,SACA,UACA,QACA,QACA,UACA,SACA,SACA,WACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,QACA,UACA,UACA,WACA,UACA,WACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,SACA,SACA,WACA,SACA,OACA,UACA,UACA,WACA,WACA,WACA,OACA,QACA,QACA,QACA,UACA,SACA,aACA,OACA,QACA,OACA,UACA,UACA,YACA,YACA,YACA,WACA,YACA,YACA,aACA,aACA,cACA,WACA,SACA,UACA,WACA,QACA,SACA,SACA,UACA,YACA,UACA,UACA,UACA,YACA,aACA,cACA,QACA,cACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,WACA,YACA,YACA,YACA,YACA,aACA,YACA,WACA,SACA,SACA,QACA,QACA,SACA,UACA,SACA,UACA,aACA,UACA,OACA,aACA,QACA,cACA,cACA,cACA,WACA,WACA,YACA,YACA,aACA,aACA,aACA,aACA,WACA,aACA,YACA,aACA,aACA,QACA,gBACA,cACA,eACA,aACA,YACA,aACA,WACA,WACA,QACA,UACA,SACA,SACA,WACA,YACA,YACA,WACA,UACA,QACA,WACA,UACA,WACA,SACA,UACA,UACA,cACA,cACA,aACA,aACA,WACA,WACA,cACA,YACA,QACA,aACA,SACA,aACA,OACA,UACA,WACA,WACA,YACA,YACA,QACA,UACA,UACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,YACA,SACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,WACA,UACA,WACA,QACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,YACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,YACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,WACA,WACA,aACA,aACA,WACA,QACA,SACA,SACA,WACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,OACA,WACA,UACA,UACA,QACA,QACA,SACA,UACA,SACA,SACA,OACA,OACA,UACA,QACA,YACA,UACA,WACA,UACA,QACA,SACA,UACA,SACA,QACA,YACA,WACA,gBACA,eACA,SACA,UACA,YACA,UACA,SACA,UACA,UACA,SACA,QACA,UACA,SACA,SACA,aACA,YACA,OACA,YACA,YACA,WACA,WACA,QACA,SACA,SACA,SACA,UACA,SACA,OACA,UACA,WACA,SACA,OACA,SACA,WACA,WACA,UACA,QACA,SACA,YACA,SACA,WACA,SACA,UACA,WACA,aACA,aACA,aACA,WACA,UACA,SACA,UACA,SACA,WACA,YACA,SACA,UACA,SACA,aACA,cACA,aACA,aACA,cACA,cACA,YACA,WACA,YACA,YACA,SACA,WACA,UACA,WACA,SACA,SACA,UACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,UACA,WACA,WACA,SACA,SACA,UACA,QACA,UACA,SACA,QACA,YACA,WACA,WACA,WACA,UACA,SACA,SACA,SACA,aACA,YACA,aACA,SACA,WACA,WACA,SACA,UACA,UACA,OACA,WACA,YACA,YACA,YACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,YACA,SACA,UACA,SACA,YACA,YACA,UACA,UACA,WACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,YACA,aACA,WACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,aACA,UACA,UACA,SACA,cACA,UACA,SACA,SACA,YACA,UACA,WACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,WACA,WACA,SACA,WACA,aACA,UACA,SACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,WACA,aACA,YACA,YACA,UACA,YACA,WACA,YACA,WACA,SACA,UACA,UACA,aACA,aACA,UACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,WACA,SACA,eACA,WACA,WACA,OACA,UACA,SACA,UACA,SACA,WACA,UACA,SACA,WACA,OACA,UACA,SACA,WACA,YACA,QACA,UACA,UACA,WACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,UACA,SACA,WACA,QACA,WACA,SACA,UACA,UACA,WACA,WACA,SACA,QACA,SACA,SACA,SACA,WACA,SACA,UACA,UACA,YACA,WACA,UACA,WACA,SACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,YACA,SACA,UACA,WACA,YACA,aACA,aACA,YACA,YACA,UACA,cACA,WACA,WACA,WACA,UACA,QACA,SACA,cACA,UACA,WACA,YACA,UACA,WACA,WACA,YACA,YACA,aACA,WACA,YACA,YACA,SACA,UACA,SACA,UACA,YACA,WACA,SACA,QACA,SACA,SACA,YACA,SACA,QACA,SACA,QACA,aACA,aACA,aACA,cACA,UACA,SACA,UACA,aACA,SACA,YACA,QACA,YACA,SACA,aACA,aACA,SACA,UACA,YACA,aACA,aACA,SACA,UACA,YACA,YACA,WACA,YACA,WACA,SACA,aACA,QACA,SACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,QACA,SACA,WACA,SACA,UACA,WACA,WACA,WACA,UACA,QACA,QACA,UACA,WACA,WACA,YACA,aACA,aACA,YACA,aACA,SACA,SACA,UACA,WACA,UACA,WACA,WACA,SACA,SACA,SACA,QACA,UACA,WACA,WACA,UACA,WACA,aACA,UACA,UACA,UACA,YACA,YACA,WACA,WACA,UACA,YACA,YACA,YACA,YACA,YACA,WACA,aACA,aACA,YACA,aACA,YACA,YACA,YACA,YACA,SACA,UACA,YACA,WACA,WACA,WACA,WACA,UACA,QACA,SACA,UACA,SACA,aACA,WACA,WACA,UACA,YACA,aACA,UACA,WACA,WACA,WACA,UACA,YACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,YACA,QACA,SACA,YACA,WACA,SACA,YACA,WACA,WACA,cACA,gBACA,YACA,cACA,YACA,aACA,YACA,YACA,WACA,aACA,cACA,cACA,YACA,YACA,aACA,aACA,WACA,YACA,aACA,UACA,YACA,YACA,WACA,YACA,UACA,UACA,QACA,SACA,SACA,UACA,YACA,cACA,SACA,UACA,UACA,SACA,YACA,WACA,SACA,SACA,UACA,SACA,cACA,SACA,YACA,WACA,YACA,YACA,UACA,SACA,YACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,SACA,UACA,aACA,aACA,aACA,WACA,WACA,YACA,YACA,QACA,QACA,YACA,aACA,cACA,cACA,WACA,UACA,QACA,aACA,YACA,QACA,OACA,QACA,UACA,YACA,UACA,SACA,QACA,SACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,YACA,UACA,WACA,SACA,OACA,cACA,YACA,aACA,SACA,UACA,SACA,aACA,aACA,cACA,aACA,aACA,cACA,eACA,eACA,YACA,YACA,UACA,QACA,WACA,aACA,aACA,SACA,WACA,YACA,WACA,YACA,YACA,UACA,SACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,WACA,WACA,SACA,QACA,SACA,WACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,SACA,WACA,YACA,YACA,UACA,SACA,WACA,UACA,SACA,aACA,UACA,WACA,WACA,YACA,SACA,WACA,QACA,WACA,WACA,YACA,aACA,YACA,YACA,QACA,QACA,WACA,UACA,UACA,aACA,WACA,WACA,UACA,WACA,WACA,YACA,YACA,cACA,UACA,UACA,WACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,WACA,UACA,WACA,UACA,QACA,UACA,WACA,WACA,QACA,SACA,UACA,UACA,WACA,WACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,YACA,YACA,WACA,UACA,UACA,QACA,QACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,SACA,WACA,WACA,WACA,YACA,SACA,YACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,MACA,SACA,SACA,UACA,UACA,OACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,OACA,UACA,WACA,UACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,OACA,QACA,WACA,WACA,SACA,UACA,WACA,WACA,QACA,SACA,SACA,UACA,WACA,WACA,WACA,YACA,aACA,WACA,WACA,YACA,YACA,QACA,QACA,UACA,UACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,aACA,WACA,WACA,UACA,QACA,SACA,QACA,SACA,UACA,WACA,SACA,YACA,WACA,WACA,UACA,MACA,WACA,QACA,SACA,WACA,SACA,eACA,cACA,SACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,OACA,SACA,UACA,QACA,QACA,SACA,QACA,OACA,QACA,UACA,SACA,UACA,SACA,WACA,YACA,aACA,YACA,WACA,UACA,YACA,aACA,QACA,WACA,WACA,WACA,SACA,UACA,YACA,SACA,cACA,SACA,UACA,SACA,QACA,WACA,WACA,WACA,YACA,aACA,QACA,UACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,YACA,YACA,WACA,YACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,SACA,WACA,UACA,QACA,QACA,OACA,QACA,SACA,UACA,SACA,OACA,UACA,SACA,SACA,OACA,SACA,UACA,WACA,SACA,SACA,UACA,YACA,SACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,YACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,QACA,SACA,YACA,QACA,SACA,UACA,YACA,UACA,UACA,OACA,QACA,UACA,SACA,OACA,QACA,SACA,QACA,OACA,QACA,WACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,UACA,SACA,QACA,UACA,OACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,aACA,UACA,UACA,SACA,SACA,UACA,WACA,aACA,aACA,WACA,YACA,YACA,WACA,SACA,SACA,SACA,SACA,WACA,YACA,YACA,SACA,WACA,WACA,YACA,QACA,YACA,YACA,UACA,QACA,UACA,WACA,SACA,YACA,aACA,cACA,SACA,UACA,UACA,SACA,SACA,YACA,aACA,QACA,QACA,QACA,YACA,QACA,SACA,UACA,WACA,QACA,SACA,WACA,QACA,SACA,UACA,UACA,QACA,UACA,UACA,UACA,UACA,WACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,SACA,YACA,WACA,QACA,QACA,UACA,UACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,MACA,OACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,QACA,WACA,YACA,WACA,YACA,aACA,YACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,YACA,QACA,UACA,cACA,UACA,aACA,WACA,WACA,QACA,QACA,SACA,SACA,UACA,UACA,SACA,QACA,SACA,SACA,UACA,QACA,cACA,cACA,UACA,WACA,WACA,QACA,YACA,WACA,aACA,SACA,QACA,QACA,WACA,QACA,aACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,WACA,WACA,SACA,UACA,YACA,cACA,SACA,WACA,WACA,YACA,YACA,WACA,SACA,QACA,QACA,SACA,QACA,UACA,WACA,WACA,UACA,QACA,WACA,UACA,YACA,YACA,OACA,WACA,aACA,aACA,cACA,cACA,UACA,UACA,OACA,WACA,WACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,aACA,OACA,SACA,SACA,UACA,OACA,aACA,WACA,UACA,SACA,YACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,WACA,QACA,UACA,YACA,YACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,UACA,SACA,SACA,UACA,YACA,UACA,WACA,YACA,UACA,WACA,YACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,cACA,cACA,QACA,YACA,YACA,cACA,SACA,OACA,SACA,UACA,UACA,WACA,YACA,QACA,UACA,SACA,UACA,WACA,QACA,SACA,UACA,YACA,YACA,SACA,aACA,OACA,QACA,SACA,YACA,SACA,YACA,YACA,aACA,aACA,YACA,YACA,SACA,UACA,WACA,UACA,WACA,YACA,UACA,UACA,WACA,UACA,SACA,UACA,WACA,UACA,QACA,QACA,YACA,WACA,aACA,YACA,aACA,aACA,aACA,YACA,SACA,WACA,UACA,UACA,WACA,UACA,UACA,QACA,SACA,UACA,WACA,UACA,YACA,aACA,cACA,cACA,SACA,UACA,UACA,YACA,UACA,UACA,cACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,WACA,YACA,YACA,aACA,aACA,cACA,WACA,QACA,OACA,QACA,QACA,QACA,UACA,WACA,UACA,YACA,SACA,SACA,aACA,OACA,QACA,SACA,SACA,SACA,WACA,WACA,UACA,SACA,QACA,QACA,UACA,aACA,WACA,SACA,SACA,SACA,UACA,YACA,SACA,YACA,YACA,UACA,cACA,cACA,YACA,YACA,aACA,aACA,WACA,aACA,cACA,cACA,WACA,YACA,YACA,WACA,aACA,SACA,cACA,QACA,YACA,YACA,aACA,WACA,YACA,WACA,SACA,UACA,YACA,SACA,QACA,SACA,SACA,UACA,WACA,YACA,YACA,aACA,SACA,YACA,SACA,WACA,UACA,QACA,YACA,YACA,cACA,cACA,SACA,aACA,QACA,UACA,SACA,WACA,UACA,YACA,SACA,QACA,WACA,WACA,UACA,SACA,UACA,YACA,SACA,WACA,YACA,SACA,WACA,UACA,UACA,WACA,WACA,YACA,UACA,aACA,YACA,UACA,QACA,SACA,UACA,SACA,QACA,UACA,WACA,SACA,UACA,WACA,WACA,SACA,UACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,aACA,SACA,UACA,UACA,WACA,SACA,SACA,UACA,UACA,SACA,UACA,YACA,QACA,UACA,UACA,SACA,SACA,UACA,YACA,SACA,UACA,WACA,UACA,UACA,SACA,YACA,WACA,aACA,aACA,UACA,aACA,OACA,YACA,eACA,aACA,UACA,WACA,OACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,QACA,aACA,aACA,aACA,WACA,YACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,UACA,SACA,UACA,UACA,SACA,WACA,WACA,SACA,QACA,SACA,YACA,UACA,SACA,UACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,SACA,UACA,YACA,YACA,WACA,SACA,UACA,WACA,YACA,aACA,aACA,WACA,YACA,SACA,UACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,SACA,UACA,QACA,UACA,WACA,UACA,WACA,QACA,SACA,SACA,UACA,WACA,WACA,SACA,mBACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,SACA,SACA,YACA,SACA,UACA,YACA,aACA,aACA,aACA,aACA,UACA,WACA,WACA,YACA,YACA,SACA,UACA,UACA,WACA,UACA,SACA,UACA,SACA,UACA,SACA,aACA,cACA,SACA,cACA,cACA,SACA,WACA,YACA,SACA,SACA,UACA,SACA,cACA,aACA,SACA,SACA,WACA,QACA,WACA,YACA,aACA,SACA,YACA,aACA,aACA,cACA,cACA,SACA,UACA,SACA,QACA,OACA,UACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,WACA,WACA,OACA,UACA,QACA,WACA,UACA,QACA,QACA,YACA,YACA,QACA,YACA,YACA,SACA,UACA,WACA,QACA,WACA,YACA,QACA,WACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,OACA,UACA,aACA,YACA,YACA,WACA,YACA,WACA,WACA,QACA,UACA,QACA,SACA,QACA,SACA,UACA,QACA,UACA,SACA,OACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,SACA,UACA,WACA,WACA,cACA,eACA,SACA,UACA,UACA,aACA,cACA,aACA,cACA,eACA,eACA,aACA,aACA,UACA,WACA,WACA,QACA,QACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,OACA,QACA,UACA,UACA,SACA,QACA,UACA,YACA,UACA,SACA,UACA,WACA,WACA,UACA,WACA,WACA,SACA,UACA,WACA,WACA,UACA,SACA,SACA,UACA,SACA,WACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,YACA,SACA,QACA,YACA,YACA,cACA,cACA,WACA,UACA,WACA,WACA,SACA,UACA,SACA,WACA,UACA,QACA,SACA,SACA,YACA,YACA,UACA,WACA,UACA,UACA,aACA,WACA,YACA,WACA,UACA,SACA,UACA,WACA,UACA,SACA,OACA,QACA,SACA,WACA,QACA,UACA,WACA,WACA,YACA,WACA,UACA,QACA,SACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,WACA,SACA,WACA,QACA,QACA,YACA,UACA,YACA,YACA,WACA,SACA,YACA,QACA,SACA,YACA,YACA,aACA,YACA,SACA,YACA,SACA,WACA,UACA,WACA,SACA,SACA,UACA,WACA,QACA,WACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,SACA,SACA,MACA,UACA,WACA,QACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,QACA,SACA,UACA,QACA,SACA,UACA,WACA,YACA,WACA,YACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,WACA,SACA,QACA,WACA,YACA,SACA,WACA,YACA,UACA,SACA,QACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,WACA,YACA,SACA,QACA,SACA,UACA,SACA,YACA,SACA,UACA,YACA,WACA,aACA,aACA,SACA,QACA,SACA,YACA,QACA,WACA,OACA,QACA,SACA,UACA,SACA,YACA,QACA,WACA,SACA,WACA,QACA,SACA,UACA,WACA,QACA,SACA,UACA,SACA,QACA,SACA,WACA,WACA,WACA,YACA,YACA,SACA,YACA,UACA,WACA,YACA,YACA,UACA,UACA,WACA,UACA,QACA,WACA,SACA,SACA,UACA,WACA,WACA,WACA,SACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,UACA,WACA,WACA,YACA,QACA,YACA,QACA,WACA,QACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,SACA,QACA,aACA,WACA,YACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,YACA,SACA,UACA,UACA,YACA,UACA,WACA,UACA,SACA,UACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,UACA,SACA,QACA,SACA,WACA,SACA,SACA,QACA,aACA,UACA,SACA,UACA,UACA,OACA,QACA,WACA,QACA,SACA,YACA,YACA,SACA,QACA,SACA,aACA,aACA,YACA,SACA,aACA,aACA,YACA,SACA,UACA,YACA,WACA,YACA,WACA,YACA,SACA,UACA,QACA,SACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,YACA,SACA,UACA,YACA,WACA,QACA,SACA,OACA,UACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,YACA,UACA,SACA,SACA,UACA,UACA,SACA,QACA,WACA,YACA,SACA,UACA,WACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,SACA,UACA,SACA,MACA,QACA,QACA,SACA,YACA,WACA,SACA,OACA,aACA,aACA,YACA,YACA,aACA,UACA,SACA,UACA,SACA,SACA,OACA,QACA,UACA,SACA,QACA,UACA,UACA,SACA,QACA,WACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,SACA,WACA,YACA,aACA,aACA,OACA,QACA,SACA,WACA,WACA,QACA,WACA,SACA,WACA,QACA,SACA,UACA,UACA,SACA,QACA,WACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,UACA,WACA,UACA,WACA,aACA,WACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,OACA,WACA,WACA,SACA,SACA,SACA,QACA,WACA,YACA,SACA,UACA,QACA,SACA,QACA,WACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,YACA,SACA,WACA,WACA,WACA,SACA,YACA,UACA,YACA,SACA,UACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,YACA,SACA,aACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,SACA,SACA,UACA,OACA,QACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,OACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,WACA,SACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,YACA,SACA,YACA,UACA,WACA,WACA,YACA,YACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,UACA,OACA,QACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,SACA,SACA,WACA,UACA,WACA,SACA,QACA,UACA,OACA,QACA,QACA,SACA,SACA,UACA,WACA,WACA,UACA,SACA,SACA,UACA,SACA,WACA,QACA,UACA,WACA,UACA,UACA,SACA,QACA,QACA,YACA,WACA,QACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,OACA,QACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,YACA,WACA,WACA,UACA,SACA,UACA,QACA,SACA,QACA,UACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,WACA,SACA,UACA,UACA,WACA,WACA,WACA,QACA,SACA,YACA,YACA,SACA,WACA,WACA,WACA,UACA,UACA,SACA,SACA,YACA,YACA,SACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,SACA,OACA,WACA,UACA,UACA,aACA,YACA,MACA,QACA,QACA,SACA,WACA,SACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,SACA,YACA,QACA,YACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,QACA,WACA,WACA,WACA,WACA,QACA,OACA,QACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,QACA,SACA,SACA,UACA,WACA,YACA,UACA,WACA,YACA,UACA,SACA,OACA,SACA,WACA,SACA,QACA,YACA,WACA,aACA,SACA,UACA,SACA,SACA,aACA,aACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,WACA,SACA,UACA,UACA,WACA,QACA,OACA,UACA,OACA,SACA,WACA,YACA,aACA,aACA,UACA,SACA,UACA,SACA,UACA,WACA,QACA,UACA,SACA,aACA,QACA,SACA,UACA,UACA,YACA,QACA,WACA,UACA,SACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,WACA,WACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,QACA,WACA,WACA,YACA,YACA,YACA,cACA,cACA,aACA,SACA,UACA,UACA,WACA,YACA,SACA,UACA,SACA,UACA,WACA,SACA,YACA,WACA,YACA,aACA,aACA,cACA,cACA,cACA,cACA,aACA,WACA,SACA,YACA,WACA,UACA,YACA,SACA,UACA,UACA,SACA,UACA,WACA,cACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,YACA,YACA,WACA,aACA,YACA,UACA,WACA,SACA,aACA,gBACA,YACA,eACA,UACA,WACA,YACA,aACA,YACA,YACA,YACA,UACA,UACA,WACA,WACA,YACA,WACA,SACA,UACA,WACA,UACA,cACA,SACA,UACA,WACA,WACA,UACA,WACA,UACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,SACA,WACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,YACA,YACA,UACA,YACA,UACA,aACA,SACA,YACA,eACA,UACA,UACA,YACA,SACA,WACA,UACA,WACA,WACA,SACA,YACA,QACA,SACA,WACA,YACA,YACA,aACA,YACA,aACA,YACA,UACA,SACA,WACA,WACA,aACA,WACA,aACA,YACA,SACA,UACA,SACA,WACA,YACA,YACA,WACA,WACA,SACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,SACA,SACA,OACA,QACA,SACA,UACA,QACA,OACA,YACA,QACA,QACA,SACA,UACA,WACA,SACA,YACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,WACA,aACA,OACA,OACA,QACA,WACA,WACA,WACA,YACA,UACA,SACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,aACA,cACA,aACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,aACA,UACA,WACA,aACA,YACA,SACA,WACA,WACA,UACA,WACA,UACA,UACA,SACA,YACA,SACA,UACA,SACA,YACA,aACA,WACA,YACA,UACA,WACA,WACA,SACA,WACA,QACA,SACA,SACA,WACA,WACA,SACA,UACA,YACA,YACA,UACA,aACA,WACA,YACA,WACA,WACA,WACA,SACA,UACA,SACA,QACA,OACA,WACA,YACA,cACA,cACA,aACA,UACA,UACA,WACA,aACA,aACA,WACA,YACA,SACA,UACA,SACA,SACA,UACA,YACA,WACA,aACA,WACA,OACA,WACA,WACA,UACA,YACA,aACA,SACA,SACA,aACA,UACA,aACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,WACA,WACA,WACA,SACA,eACA,SACA,SACA,UACA,WACA,SACA,SACA,WACA,QACA,WACA,aACA,aACA,SACA,WACA,aACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,YACA,aACA,WACA,SACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,WACA,aACA,YACA,UACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,QACA,aACA,SACA,UACA,UACA,UACA,YACA,QACA,SACA,WACA,UACA,WACA,SACA,WACA,SACA,SACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,SACA,UACA,UACA,QACA,SACA,UACA,OACA,QACA,WACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,QACA,UACA,UACA,YACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,OACA,QACA,UACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,aACA,UACA,YACA,YACA,WACA,YACA,QACA,QACA,SACA,UACA,aACA,WACA,QACA,WACA,WACA,YACA,YACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,WACA,SACA,UACA,UACA,WACA,UACA,SACA,QACA,UACA,SACA,UACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,WACA,SACA,UACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,OACA,UACA,QACA,QACA,WACA,SACA,YACA,UACA,UACA,QACA,SACA,QACA,QACA,SACA,UACA,WACA,WACA,UACA,UACA,SACA,QACA,QACA,WACA,WACA,WACA,WACA,OACA,UACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,UACA,YACA,QACA,WACA,WACA,WACA,WACA,WACA,QACA,SACA,UACA,OACA,UACA,YACA,WACA,SACA,UACA,SACA,WACA,UACA,SACA,SACA,WACA,YACA,OACA,YACA,WACA,WACA,YACA,YACA,SACA,SACA,UACA,SACA,SACA,SACA,YACA,YACA,SACA,UACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,UACA,YACA,OACA,UACA,SACA,UACA,SACA,OACA,YACA,YACA,SACA,UACA,SACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,SACA,UACA,OACA,QACA,SACA,WACA,cACA,YACA,cACA,cACA,WACA,WACA,WACA,SACA,UACA,UACA,QACA,WACA,YACA,YACA,cACA,UACA,YACA,WACA,WACA,UACA,aACA,UACA,UACA,YACA,WACA,WACA,UACA,OACA,QACA,YACA,aACA,UACA,SACA,SACA,SACA,SACA,aACA,QACA,SACA,UACA,QACA,UACA,aACA,aACA,WACA,OACA,YACA,SACA,SACA,QACA,WACA,WACA,WACA,SACA,UACA,YACA,aACA,YACA,WACA,UACA,WACA,YACA,OACA,UACA,OACA,QACA,WACA,YACA,aACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,WACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,WACA,SACA,YACA,UACA,WACA,SACA,SACA,SACA,OACA,WACA,QACA,SACA,WACA,YACA,OACA,QACA,YACA,QACA,UACA,WACA,WACA,UACA,WACA,YACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,WACA,SACA,UACA,QACA,SACA,UACA,OACA,SACA,QACA,SACA,SACA,UACA,WACA,WACA,WACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,WACA,QACA,UACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,UACA,WACA,YACA,aACA,aACA,WACA,QACA,SACA,QACA,WACA,YACA,YACA,YACA,QACA,QACA,SACA,UACA,QACA,UACA,UACA,WACA,QACA,QACA,WACA,SACA,UACA,SACA,SACA,WACA,UACA,SACA,WACA,QACA,QACA,SACA,QACA,OACA,QACA,WACA,aACA,aACA,YACA,WACA,WACA,YACA,aACA,aACA,YACA,WACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,aACA,aACA,YACA,aACA,UACA,WACA,WACA,YACA,SACA,UACA,UACA,UACA,YACA,QACA,OACA,QACA,UACA,UACA,UACA,WACA,WACA,QACA,SACA,UACA,QACA,OACA,WACA,WACA,YACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,WACA,QACA,SACA,SACA,UACA,QACA,WACA,QACA,WACA,YACA,SACA,SACA,UACA,SACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,SACA,QACA,WACA,SACA,SACA,UACA,OACA,WACA,UACA,SACA,UACA,SACA,YACA,aACA,UACA,UACA,UACA,OACA,YACA,UACA,WACA,SACA,SACA,SACA,UACA,UACA,SACA,UACA,YACA,YACA,QACA,YACA,WACA,SACA,YACA,SACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,UACA,SACA,YACA,UACA,WACA,UACA,SACA,WACA,YACA,QACA,SACA,QACA,QACA,UACA,UACA,aACA,SACA,SACA,UACA,WACA,UACA,SACA,SACA,SACA,QACA,WACA,UACA,UACA,QACA,UACA,UACA,UACA,UACA,SACA,UACA,WACA,aACA,WACA,WACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,UACA,SACA,UACA,WACA,SACA,UACA,YACA,YACA,YACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,WACA,YACA,UACA,UACA,QACA,SACA,UACA,YACA,WACA,UACA,WACA,UACA,kBACA,WACA,QACA,SACA,WACA,UACA,UACA,UACA,UACA,SACA,WACA,UACA,WACA,UACA,SACA,QACA,UACA,SACA,UACA,WACA,YACA,YACA,UACA,WACA,UACA,UACA,UACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,YACA,YACA,aACA,SACA,UACA,OACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,UACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,UACA,aACA,WACA,UACA,WACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,WACA,SACA,SACA,UACA,SACA,UACA,UACA,aACA,UACA,WACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,WACA,QACA,UACA,YACA,WACA,SACA,SACA,YACA,YACA,YACA,UACA,WACA,UACA,UACA,YACA,YACA,aACA,cACA,aACA,UACA,WACA,YACA,UACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,OACA,WACA,SACA,QACA,QACA,SACA,YACA,SACA,UACA,aACA,UACA,WACA,YACA,WACA,WACA,QACA,SACA,QACA,UACA,WACA,WACA,WACA,QACA,SACA,QACA,SACA,UACA,WACA,WACA,SACA,SACA,WACA,UACA,UACA,WACA,YACA,SACA,UACA,YACA,SACA,UACA,WACA,SACA,SACA,UACA,UACA,UACA,YACA,SACA,SACA,UACA,SACA,UACA,WACA,WACA,UACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,WACA,SACA,QACA,SACA,UACA,SACA,UACA,QACA,SACA,aACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,QACA,WACA,YACA,SACA,UACA,UACA,OACA,SACA,SACA,UACA,SACA,QACA,SACA,SACA,WACA,WACA,QACA,UACA,UACA,YACA,YACA,WACA,QACA,WACA,SACA,SACA,UACA,WACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,YACA,SACA,UACA,UACA,QACA,YACA,aACA,WACA,WACA,aACA,aACA,YACA,WACA,QACA,WACA,YACA,aACA,aACA,SACA,WACA,WACA,QACA,WACA,YACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,OACA,QACA,SACA,UACA,SACA,YACA,QACA,QACA,WACA,YACA,WACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,YACA,QACA,YACA,YACA,QACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,SACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,UACA,UACA,eACA,UACA,SACA,OACA,QACA,UACA,UACA,UACA,YACA,YACA,OACA,OACA,WACA,WACA,QACA,UACA,YACA,UACA,WACA,YACA,aACA,aACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,SACA,QACA,WACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,WACA,YACA,YACA,YACA,aACA,SACA,MACA,SACA,UACA,SACA,YACA,QACA,QACA,SACA,SACA,cACA,SACA,OACA,QACA,UACA,SACA,UACA,SACA,SACA,YACA,SACA,UACA,YACA,YACA,UACA,WACA,YACA,YACA,QACA,SACA,WACA,YACA,OACA,QACA,QACA,SACA,UACA,WACA,YACA,YACA,SACA,UACA,WACA,YACA,WACA,UACA,YACA,SACA,UACA,SACA,QACA,UACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,SACA,aACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,cACA,cACA,SACA,SACA,cACA,aACA,YACA,YACA,SACA,UACA,UACA,SACA,UACA,SACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,SACA,UACA,SACA,SACA,UACA,aACA,SACA,UACA,WACA,QACA,WACA,SACA,QACA,SACA,UACA,SACA,WACA,QACA,SACA,SACA,UACA,WACA,WACA,UACA,UACA,SACA,UACA,SACA,WACA,QACA,QACA,QACA,WACA,WACA,UACA,YACA,SACA,WACA,YACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,OACA,UACA,QACA,WACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,QAAA;;;AV95IF,IAAAyB,cAAkB;AAGlB,kBAAiB;;;Aa1aV,IAAM,cAAc,OAAA,qBAAA,eAAA;;;AC8CpB,IAAM,aAAa;;;AClDnB,IAAM,cAA2D;;;ACgDjE,SAAS,iBAA0B;AAExC,mBAAiB,UAAU;AAC3B,SAAO;AACT;AAGO,SAAS,iBAAiB,SAAiC;AAChE,QAAM,aAAc,QAAQ,aAAa,QAAQ,cAAc,CAAA;AAG/D,aAAW,UAAU,WAAW,WAAW;AAI3C,SAAQ,WAAW,WAAW,IAAI,WAAW,WAAW,KAAK,CAAA;AAC/D;AAaO,SAAS,mBACd,MACA,SACA,MAAM,YAC4B;AAClC,QAAM,aAAc,IAAI,aAAa,IAAI,cAAc,CAAA;AACvD,QAAM,UAAW,WAAW,WAAW,IAAI,WAAW,WAAW,KAAK,CAAA;AAEtE,SAAO,QAAQ,IAAI,MAAM,QAAQ,IAAI,IAAI,QA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","names":["i","isFunction","exports","createFrame","options","options","i","options","options","i","options","options","options","ret","logger","log","log","wrapper","options","options","i","ret","context","handlebars","self","n","a","lexer","i","exports","i","options","i","close","i","options","i","compile","options","a","exports","exports","exports","normalize","i","exports","i","exports","exports","sourceFile","i","exports","exports","i","exports","i","needle","section","exports","i","exports","i","merge","wrap","options","i","options","i","exports","module","handlebars","exports","module","WINDOW","i","Buffer","isString","blocks","a","d","e","exports","module","exports","module","exports","module","err","exports","module","err","exports","module","exports","module","exports","module","exports","module","exports","module","e","exports","module","exports","module","exports","module","exports","module","i","n","node","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","e","a","i","exports","module","exports","module","flush","n","err","releasedBufObj","error","exports","module","exports","module","exports","module","exports","module","exports","module","FinalizationRegistry","WeakRef","error","exports","module","flush","onExit","options","fixTarget","exports","module","n","i","stringify","customLevels","_","log","exports","module","exports","module","e","customLevels","exports","module","exports","module","flush","n","bindings","options","i","log","exports","module","i","options","value","tmp","key","res","join","stringify","exports","module","i","streamLevels","a","exports","module","normalize","pino","serializers","customLevels","time","exports","e","n","d","close","init","colors","exports","module","i","cb","exports","module","exports","module","isRequest","exports","module","e","isRequest","error","i","exports","module","i","error","flush","self","options","exports","module","_a","_b","close","error","require_constants","exports","module","exports","module","customLevels","exports","module","customLevels","exports","module","exports","module","exports","module","exports","module","exports","module","i","exports","module","exports","module","log","LegacyCache","_a","index","error","options","exports","module","log","exports","module","_typeof","obj","global","_","d","D","y","pad","getDayName","today_d","today_m","today_y","yesterday_d","yesterday_m","yesterday_y","tomorrow_d","tomorrow_m","tomorrow_y","getWeek","getDayOfWeek","kindOf","exports","module","exports","module","exports","module","exports","module","log","exports","module","exports","module","i","exports","module","options","customLevels","exports","module","options","i","a","exports","module","exports","module","log","plain","errors","exports","module","log","i","exports","module","log","_a","customLevels","exports","module","log","customLevels","exports","module","log","exports","module","log","_a","require_utils","exports","module","exports","module","options","exports","module","log","exports","module","options","pretty","toolkit_default","tool","AgentMode","import_zod","import_sdk","import_zod","import_sdk","import_sdk","import_zod","import_bignumber","BigNumber","import_long","import_sdk","_a","import_zod","import_zod","e","z","error","_a","isFinite","Long","import_sdk","import_sdk","postProcess","_a","import_sdk","import_sdk","import_bignumber","_a","error","BigNumber","error","import_sdk","postProcess","_a","error","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","_a","error","tool","import_sdk","postProcess","_a","error","tool","import_sdk","_a","_b","postProcess","error","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","error","tool","postProcess","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","error","tool","import_sdk","postProcess","_a","error","tool","import_sdk","postProcess","_a","error","tool","import_sdk","postProcess","error","tool","import_sdk","checkValidityOfUpdates","_a","postProcess","error","tool","postProcess","error","tool","import_sdk","postProcess","error","tool","postProcess","error","tool","postProcess","error","tool","postProcess","error","tool","import_zod","postProcess","error","tool","import_sdk","import_sdk","_a","error","tool","import_sdk","error","tool","import_sdk","error","tool","import_sdk","error","tool","import_sdk","_a","error","tool","getHbarBalanceQueryPrompt","postProcess","getHbarBalanceQuery","error","GET_HBAR_BALANCE_QUERY_TOOL","tool","get_hbar_balance_query_default","import_sdk","getAccountQueryPrompt","postProcess","getAccountQuery","error","GET_ACCOUNT_QUERY_TOOL","tool","get_account_query_default","getAccountTokenBalancesQueryPrompt","postProcess","getAccountTokenBalancesQuery","error","GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL","tool","get_account_token_balances_query_default","get_hbar_balance_query_default","get_account_query_default","get_account_token_balances_query_default","GET_HBAR_BALANCE_QUERY_TOOL","GET_ACCOUNT_QUERY_TOOL","GET_ACCOUNT_TOKEN_BALANCES_QUERY_TOOL","getTokenInfoQueryPrompt","postProcess","getTokenInfoQuery","error","GET_TOKEN_INFO_QUERY_TOOL","tool","get_token_info_query_default","_a","_b","postProcess","error","tool","get_token_info_query_default","GET_TOKEN_INFO_QUERY_TOOL","getTopicMessagesQueryPrompt","postProcess","getTopicMessagesQueryParams","convertMessagesFromBase64ToString","getTopicMessagesQuery","error","GET_TOPIC_MESSAGES_QUERY_TOOL","tool","get_topic_messages_query_default","postProcess","error","tool","get_topic_messages_query_default","GET_TOPIC_MESSAGES_QUERY_TOOL","postProcess","_a","_b","error","tool","postProcess","error","tool","error","tool","tool","tool","toolkit_default","HederaAgentKitTool","tool","HederaAgentKitTool","toolkit_default","mulberry32","seed","t","Math","imul","UniqueNamesGenerator","constructor","config","dictionaries","length","separator","style","this","generate","Error","slice","reduce","acc","curr","randomFloat","numberFromString","split","map","char","charCodeAt","numericSeed","floor","Number","random","word","toLowerCase","firstLetter","rest","toUpperCase","join","defaultConfig","uniqueNamesGenerator","customConfig","import_zod","console","a","i","e","error","e","options","i","i","_b","_a","performance","lastEventId","_a","e","withScope","_a","options","_a","dsn","options","dsc","_a","dsn","_a","dsn","e","i","options","i","_b","_a","dsn","options","dsn","_a","error","Client","options","_a","isErrorEvent","isError","e","options","isErrorEvent","dsn","options","options","flush","error","_a","options","name","INTEGRATION_NAME","options","i","_a","_b","_a","error","i","log","INTEGRATION_NAME","_shouldDropEvent","i","_b","_a","WINDOW","WINDOW","WINDOW","_a","error","url","options","WINDOW","options","fn","withScope","Client","options","WINDOW","_a","DEBUG_BUILD","WINDOW","WINDOW","_a","_b","options","handlers","WINDOW","WINDOW","document","e","DEBUG_BUILD","WINDOW","options","e","line","DEBUG_BUILD","INTEGRATION_NAME","options","DEBUG_BUILD","WINDOW","INTEGRATION_NAME","options","WINDOW","_a","_b","WINDOW","DEBUG_BUILD","INTEGRATION_NAME","options","error","e","DEBUG_BUILD","WINDOW","_a","INTEGRATION_NAME","options","DEBUG_BUILD","WINDOW","_a","options","import_zod","a","_a","_b","e","logger","pino","e","handlebars","i","z2","i","_a","i","tool","error","HederaAgentKitTool","tool","logger","modelOutput","tool_default","tool","tool_default"]}